/**
 * GENESIS 1.1 - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * MCP-MARKER:MODULE:MAIN_APP - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * MCP-MARKER:FILE:APP_JS - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
    console.warn('Global error caught:', event.error);
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    if (event.error && event.error.message && 
        (event.error.message.includes('Extension context invalidated') ||
         event.error.message.includes('chrome-extension') ||
         event.error.message.includes('moz-extension'))) {
        event.preventDefault();
        return false;
    }
});

window.addEventListener('unhandledrejection', (event) => {
    console.warn('Unhandled promise rejection:', event.reason);
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    if (event.reason && event.reason.toString && 
        (event.reason.toString().includes('Extension context invalidated') ||
         event.reason.toString().includes('Network request failed'))) {
        event.preventDefault();
        return false;
    }
});

// MCP-MARKER:CLASS:GENESIS_APP - –ö–ª–∞—Å—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.GenesisApp = {
    version: '1.1',
    initialized: false,
    currentUser: null,
    services: {},
    
    // MCP-MARKER:METHOD:APP_INIT - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async init() {
        console.log('üöÄ GENESIS 1.1 - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
        
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
            this.updateLoadingStatus('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
            console.log('üì± –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DOM
            if (document.readyState === 'loading') {
                console.log('‚è≥ DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º...');
                await new Promise(resolve => {
                    document.addEventListener('DOMContentLoaded', resolve);
                });
            }
            console.log('‚úÖ DOM –≥–æ—Ç–æ–≤');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            this.updateLoadingStatus('–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...');
            await this.initializeServices();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            this.updateLoadingStatus('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
            await this.checkAuthorization();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
            this.updateLoadingStatus('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
            this.initializeUI();
            
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker
            this.updateLoadingStatus('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker...');
            await this.registerServiceWorker();
            
            // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
            this.updateLoadingStatus('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
            this.hideLoadingScreen();
            
            this.initialized = true;
            console.log('‚úÖ GENESIS 1.1 - –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            setTimeout(() => {
                this.hideLoadingScreen();
            }, 2000);
        }
    },
    
    // MCP-MARKER:METHOD:INIT_SERVICES - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
    async initializeServices() {
        this.updateLoadingStatus('–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª
        if (window.GenesisTerminal) {
            this.services.terminal = window.GenesisTerminal;
            this.services.terminal.init();
        } else {
            console.warn('‚ö†Ô∏è GenesisTerminal –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            this.services.terminal = {
                log: (msg, type = 'info') => console.log(`[TERMINAL-${type.toUpperCase()}] ${msg}`),
                init: () => console.log('Terminal fallback initialized')
            };
        }
        
        // MCP-MARKER:PLATFORM_ACCESS_INIT - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–∞
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
        if (window.GenesisPlatformAccess) {
            this.services.platformAccess = window.GenesisPlatformAccess;
            await this.services.platformAccess.init();
        } else {
            console.warn('‚ö†Ô∏è GenesisPlatformAccess –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            this.services.platformAccess = {
                checkUserAccessBalance: () => Promise.resolve({ isActive: true, daysRemaining: 999 }),
                blockFunctionsIfNoAccess: () => false,
                init: () => Promise.resolve()
            };
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º GenesisUtils
        if (!window.GenesisUtils) {
            console.warn('‚ö†Ô∏è GenesisUtils –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º fallback');
            window.GenesisUtils = {
                formatAddress: (addr) => addr ? addr.substring(0, 6) + '...' + addr.slice(-4) : '',
                copyToClipboard: async (text) => {
                    try {
                        await navigator.clipboard.writeText(text);
                        console.log('‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä');
                    } catch (e) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', e);
                    }
                },
                showToast: (msg, type) => console.log(`[${type.toUpperCase()}] ${msg}`),
                isValidAddress: (addr) => /^0x[a-fA-F0-9]{40}$/.test(addr)
            };
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API —Å–µ—Ä–≤–∏—Å
        if (window.GenesisAPI) {
            this.services.api = window.GenesisAPI;
        } else {
            console.warn('‚ö†Ô∏è GenesisAPI –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            this.services.api = {
                get: () => Promise.resolve({ data: {} }),
                post: () => Promise.resolve({ data: {} })
            };
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (window.GenesisAuth) {
            this.services.auth = window.GenesisAuth;
        } else {
            console.warn('‚ö†Ô∏è GenesisAuth –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            this.services.auth = {
                validateAddress: (addr) => /^0x[a-fA-F0-9]{40}$/.test(addr),
                checkAuthorization: () => Promise.resolve(false),
                isValidAddress: (addr) => /^0x[a-fA-F0-9]{40}$/.test(addr)
            };
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        if (window.GenesisTransaction) {
            this.services.transaction = window.GenesisTransaction;
        } else {
            console.warn('‚ö†Ô∏è GenesisTransaction –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            this.services.transaction = {
                getTransactions: () => Promise.resolve([])
            };
        }
        
        console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    },
    
    // MCP-MARKER:METHOD:CHECK_AUTH - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async checkAuthorization() {
        this.updateLoadingStatus('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
        
        const savedAddress = localStorage.getItem('genesis_user_address');
        if (savedAddress) {
            try {
                const isValid = await this.services.auth.validateAddress(savedAddress);
                if (isValid) {
                    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å fallback –¥–ª—è –º–æ–¥–µ–ª–µ–π
                    if (window.GenesisModels && window.GenesisModels.User) {
                        this.currentUser = new window.GenesisModels.User(savedAddress);
                    } else {
                        console.warn('‚ö†Ô∏è GenesisModels –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                        this.currentUser = {
                            address: savedAddress,
                            isAuthorized: true,
                            balance: 0,
                            transactions: [],
                            createdAt: new Date(),
                            accessDays: 0,
                            deposits: []
                        };
                    }
                    this.currentUser.isAuthorized = true;
                    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', savedAddress);
                    
                    // MCP-MARKER:PLATFORM_ACCESS_CHECK - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                    // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                    try {
                        this.updateLoadingStatus('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ...');
                        const accessData = await this.services.platformAccess.checkUserAccessBalance(savedAddress);
                        
                        if (accessData.isActive && accessData.daysRemaining > 0) {
                            // –î–æ—Å—Ç—É–ø –µ—Å—Ç—å - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–∞–±–∏–Ω–µ—Ç
                            this.showAuthorizedUI();
                        } else {
                            // –î–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
                            this.showAccessPaymentRequired(savedAddress);
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
                        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
                        this.showAuthorizedUI();
                    }
                } else {
                    this.showAuthForm();
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
                this.showAuthForm();
            }
        } else {
            this.showAuthForm();
        }
    },
    
    // MCP-MARKER:METHOD:INIT_UI - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
    initializeUI() {
        console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        if (window.GenesisNavigation) {
            console.log('üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
            window.GenesisNavigation.init();
        } else {
            console.error('‚ùå GenesisNavigation –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        const appContainer = document.getElementById('app');
        if (appContainer) {
            appContainer.classList.remove('hidden');
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');
        }
        
        // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.attachEventListeners();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        this.initAnimations();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        this.updateSystemTime();
        setInterval(() => this.updateSystemTime(), 1000);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        this.updateDeviceInfo();
        
        console.log('‚úÖ UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    },
    
    // MCP-MARKER:METHOD:REGISTER_SW - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
    async registerServiceWorker() {
        if ('serviceWorker' in navigator) {
            try {
                const registration = await navigator.serviceWorker.register('/sw.js');
                console.log('‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                registration.addEventListener('updatefound', () => {
                    console.log('üîÑ –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Service Worker');
                });
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
            }
        }
    },
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    attachEventListeners() {
        // –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authForm = document.getElementById('genesis-auth-form');
        if (authForm) {
            authForm.addEventListener('submit', (e) => this.handleAuthSubmit(e));
        }
        
        // –ö–Ω–æ–ø–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∞–¥—Ä–µ—Å–∞
        const pasteBtn = document.getElementById('paste-address');
        if (pasteBtn) {
            pasteBtn.addEventListener('click', () => this.pasteAddress());
        }
        
        // –ö–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        document.querySelectorAll('.genesis-btn-copy').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const targetId = e.target.onclick.toString().match(/'([^']+)'/)?.[1];
                if (targetId) {
                    if (window.GenesisUtils && window.GenesisUtils.copyToClipboard) {
                        window.GenesisUtils.copyToClipboard(targetId);
                    } else {
                        // Fallback –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                        const element = document.getElementById(targetId);
                        if (element && element.value) {
                            navigator.clipboard.writeText(element.value).then(() => {
                                console.log('‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ:', element.value);
                            }).catch(err => {
                                console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
                            });
                        }
                    }
                }
            });
        });
    },
    
    // MCP-MARKER:METHOD:HANDLE_AUTH - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async handleAuthSubmit(event) {
        event.preventDefault();
        
        const addressInput = document.getElementById('user-address');
        const address = addressInput.value.trim();
        const submitBtn = document.getElementById('auth-submit');
        
        if (!address || !this.services.auth.isValidAddress(address)) {
            this.showError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π BSC –∞–¥—Ä–µ—Å');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        submitBtn.classList.add('loading');
        submitBtn.disabled = true;
        
        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å
            localStorage.setItem('genesis_user_address', address);
            if (window.GenesisModels && window.GenesisModels.User) {
                this.currentUser = new window.GenesisModels.User(address);
            } else {
                this.currentUser = { address: address, isAuthorized: false };
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–æ–ø–ª–∞—Ç—É 1 PLEX)
            const isAuthorized = await this.services.auth.checkAuthorization(address);
            
            if (isAuthorized) {
                this.currentUser.isAuthorized = true;
                
                // MCP-MARKER:ACCESS_CHECK_ON_AUTH - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                // –ö–†–ò–¢–ò–ß–ù–û: –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                try {
                    const accessData = await this.services.platformAccess.checkUserAccessBalance(address);
                    
                    if (accessData.isActive && accessData.daysRemaining > 0) {
                        // –î–æ—Å—Ç—É–ø –µ—Å—Ç—å - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–∞–±–∏–Ω–µ—Ç
                        this.showAuthorizedUI();
                        this.showSuccess(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–æ—Å—Ç—É–ø: ${accessData.daysRemaining} –¥–Ω–µ–π`);
                    } else {
                        // –î–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–ª–∞—Ç—É –¥–æ—Å—Ç—É–ø–∞
                        this.showAccessPaymentRequired(address);
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
                    // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥
                    this.showAuthorizedUI();
                    this.showSuccess('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
                }
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                this.showPaymentQR();
                this.services.terminal.log('–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã 1 PLEX...', 'warning');
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã
                this.startPaymentMonitoring(address);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
            this.showError('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        } finally {
            submitBtn.classList.remove('loading');
            submitBtn.disabled = false;
        }
    },
    
    // –í—Å—Ç–∞–≤–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
    async pasteAddress() {
        try {
            const text = await navigator.clipboard.readText();
            const addressInput = document.getElementById('user-address');
            addressInput.value = text;
            addressInput.focus();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å');
        }
    },
    
    // MCP-MARKER:METHOD:PAYMENT_MONITORING - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã
    async startPaymentMonitoring(address) {
        const checkInterval = setInterval(async () => {
            try {
                const isAuthorized = await this.services.auth.checkAuthorization(address);
                if (isAuthorized) {
                    clearInterval(checkInterval);
                    this.currentUser.isAuthorized = true;
                    
                    // MCP-MARKER:ACCESS_CHECK_AFTER_AUTH - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                    try {
                        const accessData = await this.services.platformAccess.checkUserAccessBalance(address);
                        
                        if (accessData.isActive && accessData.daysRemaining > 0) {
                            this.showAuthorizedUI();
                            this.showSuccess(`–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ—Å—Ç—É–ø: ${accessData.daysRemaining} –¥–Ω–µ–π`);
                        } else {
                            this.showAccessPaymentRequired(address);
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
                        this.showAuthorizedUI();
                        this.showSuccess('–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!');
                    }
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã:', error);
            }
        }, 5000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
        setTimeout(() => clearInterval(checkInterval), 600000);
    },
    
    // MCP-MARKER:SECTION:UI_METHODS - –ú–µ—Ç–æ–¥—ã UI
    showAuthForm() {
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'block';
        }
    },
    
    showAuthorizedUI() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const loadingEl = document.createElement('div');
        loadingEl.className = 'genesis-transition-loading';
        loadingEl.innerHTML = `
            <div class="transition-content">
                <div class="spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞...</p>
            </div>
        `;
        document.body.appendChild(loadingEl);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'none';
        }
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–æ–¥—É–ª—å–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º –ø—É—Ç–µ–º –∏ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        setTimeout(() => {
            window.location.href = 'app.html';
        }, 500);
    },
    
    // MCP-MARKER:METHOD:SHOW_ACCESS_PAYMENT - –ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
    showAccessPaymentRequired(userAddress) {
        // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'none';
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
        if (this.services.platformAccess && this.services.platformAccess.showPaymentModal) {
            this.services.platformAccess.showPaymentModal(10);
        } else {
            // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            alert('–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ: $10-100 USDT');
            this.showAuthForm();
        }
        
        if (this.services.terminal) {
            this.services.terminal.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', 'warning');
        }
    },
    
    showPaymentQR() {
        const qrSection = document.getElementById('qr-section');
        if (qrSection) {
            qrSection.style.display = 'block';
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥
            const qrContainer = document.getElementById('genesis-qr-code');
            if (qrContainer) {
                if (window.QRCode) {
                    new window.QRCode(qrContainer, {
                        text: window.GENESIS_CONFIG?.addresses?.system || '0x399B22170B0AC7BB20bdC86772BfF478f201fFCD',
                        width: 200,
                        height: 200,
                        colorDark: '#000000',
                        colorLight: '#ffffff',
                        correctLevel: window.QRCode.CorrectLevel.M
                    });
                } else {
                    // Fallback –¥–ª—è QR –∫–æ–¥–∞
                    console.warn('‚ö†Ô∏è QRCode –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é');
                    qrContainer.innerHTML = `
                        <div style="width:200px;height:200px;background:#f0f0f0;display:flex;align-items:center;justify-content:center;border-radius:10px;color:#333;text-align:center;font-size:12px;padding:10px;">
                            üì± QR –ö–û–î<br><br>
                            ${window.GENESIS_CONFIG?.addresses?.system || '0x399B22170B0AC7BB20bdC86772BfF478f201fFCD'}
                        </div>
                    `;
                }
            }
        }
    },
    
    updateLoadingStatus(message) {
        const statusEl = document.getElementById('loading-status');
        if (statusEl) {
            statusEl.textContent = message;
        }
    },
    
    hideLoadingScreen() {
        const loadingScreen = document.getElementById('genesis-loading');
        const mainApp = document.getElementById('genesis-app');
        
        if (loadingScreen) {
            loadingScreen.style.opacity = '0';
            setTimeout(() => {
                loadingScreen.style.display = 'none';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                if (mainApp) {
                    mainApp.classList.remove('hidden-initially');
                    mainApp.style.display = 'block';
                }
            }, 300);
        }
    },
    
    showError(message) {
        if (this.services.terminal) {
            this.services.terminal.log(message, 'error');
        }
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    },
    
    showSuccess(message) {
        if (this.services.terminal) {
            this.services.terminal.log(message, 'success');
        }
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    },
    
    updateSystemTime() {
        const timeElements = document.querySelectorAll('[data-time]');
        const now = new Date();
        timeElements.forEach(el => {
            el.textContent = now.toLocaleTimeString();
        });
    },
    
    updateDeviceInfo() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        if (window.updateTechInfo) {
            window.updateTechInfo();
        }
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    initAnimations() {
        // –ê–Ω–∏–º–∞—Ü–∏—è —à–∞–≥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const steps = document.querySelectorAll('.genesis-step-list li');
        let currentStep = 0;
        
        setInterval(() => {
            steps.forEach((step, index) => {
                step.classList.remove('step-active');
                if (index === currentStep) {
                    step.classList.add('step-active');
                }
            });
            currentStep = (currentStep + 1) % steps.length;
        }, 3000);
    },
    
    // MCP-MARKER:METHOD:CHECK_ACCESS_ON_LOAD - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    async checkPlatformAccessOnLoad() {
        const userAddress = localStorage.getItem('genesis_user_address');
        if (userAddress && this.services.platformAccess) {
            try {
                const accessData = await this.services.platformAccess.checkUserAccessBalance(userAddress);
                
                // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞
                const isBlocked = this.services.platformAccess.blockFunctionsIfNoAccess();
                
                if (isBlocked) {
                    console.log('üîí –§—É–Ω–∫—Ü–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã - –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ');
                } else {
                    console.log(`‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∞–∫—Ç–∏–≤–µ–Ω: ${accessData.daysRemaining} –¥–Ω–µ–π`);
                }
                
                return accessData;
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
            }
        }
        return null;
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (—Ç–æ–ª—å–∫–æ –Ω–∞ app.html)
document.addEventListener('DOMContentLoaded', () => {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª–∏: –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –∏ –∏–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    const path = (location && location.pathname) || '';
    const isAppPage = /app\.html$/i.test(path);
    if (!isAppPage || window.GENESIS_LANDING === true) {
        console.log('‚è≠Ô∏è GenesisApp init skipped on this page');
        return;
    }

    window.GenesisApp.init();
    
    // MCP-MARKER:ACCESS_CHECK_DOM_READY - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    setTimeout(() => {
        window.GenesisApp.checkPlatformAccessOnLoad();
    }, 2000);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.Genesis = window.GenesisApp;

console.log('üéÆ GENESIS APP loaded');
