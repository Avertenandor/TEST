                    try {
                        const accessData = await this.services.platformAccess.checkUserAccessBalance(address);
                        
                        if (accessData.isActive && accessData.daysRemaining > 0) {
                            this.showAuthorizedUI();
                            this.showSuccess(`–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ—Å—Ç—É–ø: ${accessData.daysRemaining} –¥–Ω–µ–π`);
                        } else {
                            this.showAccessPaymentRequired(address);
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
                        this.showAuthorizedUI();
                        this.showSuccess('–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!');
                    }
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã:', error);
            }
        }, 5000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
        setTimeout(() => clearInterval(checkInterval), 600000);
    },
    
    // MCP-MARKER:SECTION:UI_METHODS - –ú–µ—Ç–æ–¥—ã UI
    showAuthForm() {
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'block';
        }
    },
    
    showAuthorizedUI() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const loadingEl = document.createElement('div');
        loadingEl.className = 'genesis-transition-loading';
        loadingEl.innerHTML = `
            <div class="transition-content">
                <div class="spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞...</p>
            </div>
        `;
        document.body.appendChild(loadingEl);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'none';
        }
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–æ–¥—É–ª—å–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º –ø—É—Ç–µ–º –∏ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        setTimeout(() => {
            window.location.href = 'app.html';
        }, 500);
    },
    
    // MCP-MARKER:METHOD:SHOW_ACCESS_PAYMENT - –ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
    showAccessPaymentRequired(userAddress) {
        // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authSection = document.getElementById('genesis-auth-section');
        if (authSection) {
            authSection.style.display = 'none';
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
        if (this.services.platformAccess && this.services.platformAccess.showPaymentModal) {
            this.services.platformAccess.showPaymentModal(10);
        } else {
            // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            alert('–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ: $10-100 USDT');
            this.showAuthForm();
        }
        
        if (this.services.terminal) {
            this.services.terminal.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', 'warning');
        }
    },
    
    showPaymentQR() {
        const qrSection = document.getElementById('qr-section');
        if (qrSection) {
            qrSection.style.display = 'block';
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥
            const qrContainer = document.getElementById('genesis-qr-code');
            if (qrContainer) {
                if (window.QRCode) {
                    new window.QRCode(qrContainer, {
                        text: window.GENESIS_CONFIG?.addresses?.system || '0x399B22170B0AC7BB20bdC86772BfF478f201fFCD',
                        width: 200,
                        height: 200,
                        colorDark: '#000000',
                        colorLight: '#ffffff',
                        correctLevel: window.QRCode.CorrectLevel.M
                    });
                } else {
                    // Fallback –¥–ª—è QR –∫–æ–¥–∞
                    console.warn('‚ö†Ô∏è QRCode –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é');
                    qrContainer.innerHTML = `
                        <div style="width:200px;height:200px;background:#f0f0f0;display:flex;align-items:center;justify-content:center;border-radius:10px;color:#333;text-align:center;font-size:12px;padding:10px;">
                            üì± QR –ö–û–î<br><br>
                            ${window.GENESIS_CONFIG?.addresses?.system || '0x399B22170B0AC7BB20bdC86772BfF478f201fFCD'}
                        </div>
                    `;
                }
            }
        }
    },
    
    updateLoadingStatus(message) {
        const statusEl = document.getElementById('loading-status');
        if (statusEl) {
            statusEl.textContent = message;
        }
    },
    
    hideLoadingScreen() {
        const loadingScreen = document.getElementById('genesis-loading');
        const mainApp = document.getElementById('genesis-app');
        
        if (loadingScreen) {
            loadingScreen.style.opacity = '0';
            setTimeout(() => {
                loadingScreen.style.display = 'none';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                if (mainApp) {
                    mainApp.classList.remove('hidden-initially');
                    mainApp.style.display = 'block';
                }
            }, 300);
        }
    },
    
    showError(message) {
        if (this.services.terminal) {
            this.services.terminal.log(message, 'error');
        }
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    },
    
    showSuccess(message) {
        if (this.services.terminal) {
            this.services.terminal.log(message, 'success');
        }
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    },
    
    updateSystemTime() {
        const timeElements = document.querySelectorAll('[data-time]');
        const now = new Date();
        timeElements.forEach(el => {
            el.textContent = now.toLocaleTimeString();
        });
    },
    
    updateDeviceInfo() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        if (window.updateTechInfo) {
            window.updateTechInfo();
        }
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    initAnimations() {
        // –ê–Ω–∏–º–∞—Ü–∏—è —à–∞–≥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const steps = document.querySelectorAll('.genesis-step-list li');
        let currentStep = 0;
        
        setInterval(() => {
            steps.forEach((step, index) => {
                step.classList.remove('step-active');
                if (index === currentStep) {
                    step.classList.add('step-active');
                }
            });
            currentStep = (currentStep + 1) % steps.length;
        }, 3000);
    },
    
    // MCP-MARKER:METHOD:CHECK_ACCESS_ON_LOAD - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    async checkPlatformAccessOnLoad() {
        const userAddress = localStorage.getItem('genesis_user_address');
        if (userAddress && this.services.platformAccess) {
            try {
                const accessData = await this.services.platformAccess.checkUserAccessBalance(userAddress);
                
                // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞
                const isBlocked = this.services.platformAccess.blockFunctionsIfNoAccess();
                
                if (isBlocked) {
                    console.log('üîí –§—É–Ω–∫—Ü–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã - –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ');
                } else {
                    console.log(`‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∞–∫—Ç–∏–≤–µ–Ω: ${accessData.daysRemaining} –¥–Ω–µ–π`);
                }
                
                return accessData;
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
            }
        }
        return null;
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (—Ç–æ–ª—å–∫–æ –Ω–∞ app.html)
document.addEventListener('DOMContentLoaded', () => {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª–∏: –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –∏ –∏–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    const path = (location && location.pathname) || '';
    const isAppPage = /app\.html$/i.test(path);
    if (!isAppPage || window.GENESIS_LANDING === true) {
        console.log('‚è≠Ô∏è GenesisApp init skipped on this page');
        return;
    }

    window.GenesisApp.init();
    
    // MCP-MARKER:ACCESS_CHECK_DOM_READY - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    setTimeout(() => {
        window.GenesisApp.checkPlatformAccessOnLoad();
    }, 2000);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.Genesis = window.GenesisApp;

console.log('üéÆ GENESIS APP loaded');
