                    <button onclick="window.DepositCreationSystem.viewInPortfolio()" 
                            class="btn" style="padding: 1rem 2rem;">
                        üíº –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å
                    </button>
                    <button onclick="window.DepositCreationSystem.createAnother()" 
                            class="btn-outline" style="padding: 1rem 2rem;">
                        ‚ûï –°–æ–∑–¥–∞—Ç—å –µ—â—ë
                    </button>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:SELECT_CURRENCY - –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
    selectCurrency(currency) {
        this.selectedCurrency = currency;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        document.querySelectorAll('.currency-card').forEach(card => {
            card.classList.remove('selected');
            card.style.borderColor = 'var(--border-color)';
        });
        
        document.querySelector(`[onclick="window.DepositCreationSystem.selectCurrency('${currency}')"]`).style.borderColor = 'var(--primary-color)';
        
        // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
        this.attachWizardEventListeners();
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üí≥ –í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: ${currency}`, 'info');
        }
    },
    
    // MCP-MARKER:METHOD:GENERATE_PAYMENT_INFO - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
    generatePaymentInfo() {
        const amount = this.selectedCurrency === 'USDT' ? 
            this.selectedPlan.usdtAmount : 
            this.selectedPlan.plexAmount;
            
        const tokenAddress = this.selectedCurrency === 'USDT' ? 
            window.GENESIS_CONFIG.usdt.address : 
            window.GENESIS_CONFIG.plex.address;
        
        this.paymentInfo = {
            amount: amount,
            currency: this.selectedCurrency,
            address: window.GENESIS_CONFIG.addresses.system,
            tokenAddress: tokenAddress,
            network: 'BSC',
            qrCodeData: this.generatePaymentURL(amount, tokenAddress)
        };
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
        setTimeout(() => {
            this.generateQRCode();
        }, 100);
    },
    
    // MCP-MARKER:METHOD:GENERATE_PAYMENT_URL - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
    generatePaymentURL(amount, tokenAddress) {
        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Trust Wallet / MetaMask
        return `https://link.trustwallet.com/send?coin=20000714&address=${window.GENESIS_CONFIG.addresses.system}&amount=${amount}&token_id=${tokenAddress}`;
    },
    
    // MCP-MARKER:METHOD:GENERATE_QR_CODE - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞
    generateQRCode() {
        const container = document.getElementById('qr-code-container');
        if (!container || !this.paymentInfo) return;
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É QR.js)
        container.innerHTML = `
            <div style="text-align: center; color: #333; font-size: 0.7rem; padding: 1rem; line-height: 1.4;">
                <div style="font-weight: bold; margin-bottom: 0.5rem;">–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:</div>
                <div>–ê–¥—Ä–µ—Å: ...${this.paymentInfo.address.slice(-8)}</div>
                <div>–°—É–º–º–∞: ${this.paymentInfo.amount} ${this.paymentInfo.currency}</div>
                <div style="margin-top: 0.5rem; font-size: 0.6rem;">–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –∫–æ—à–µ–ª—å–∫–µ</div>
            </div>
        `;
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å QR.js:
        // const qr = qrcode(0, 'M');
        // qr.addData(this.paymentInfo.qrCodeData);
        // qr.make();
        // container.innerHTML = qr.createImgTag(4);
    },
    
    // MCP-MARKER:METHOD:COPY_TO_CLIPBOARD - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            this.showNotification('üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ', '–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å', 'error');
        });
    },
    
    // MCP-MARKER:METHOD:NEXT_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    nextStep() {
        if (this.currentStep === 2 && !this.selectedCurrency) {
            this.showError('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è');
            return;
        }
        
        if (this.currentStep === 4) {
            this.completeDeposit();
            return;
        }
        
        if (this.currentStep < 4) {
            this.currentStep++;
            document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
            this.attachWizardEventListeners();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã –Ω–∞ —à–∞–≥–µ 3
            if (this.currentStep === 3) {
                this.startPaymentMonitoring();
            }
        }
    },
    
    // MCP-MARKER:METHOD:PREVIOUS_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
    previousStep() {
        if (this.currentStep > 1) {
            this.currentStep--;
            document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
            this.attachWizardEventListeners();
            
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—Å–ª–∏ –ø–æ–∫–∏–¥–∞–µ–º —à–∞–≥ 3
            if (this.currentStep !== 3) {
                this.stopPaymentMonitoring();
            }
        }
    },
    
    // MCP-MARKER:METHOD:START_PAYMENT_MONITORING - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
    startPaymentMonitoring() {
        this.stopPaymentMonitoring(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        
        this.transactionMonitoring = setInterval(() => {
            this.checkPaymentStatus();
        }, 30000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üîç –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã', 'info');
        }
    },
    
    // MCP-MARKER:METHOD:STOP_PAYMENT_MONITORING - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
    stopPaymentMonitoring() {
        if (this.transactionMonitoring) {
            clearInterval(this.transactionMonitoring);
            this.transactionMonitoring = null;
        }
    },
    
    // MCP-MARKER:METHOD:CHECK_PAYMENT_STATUS - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
    async checkPaymentStatus() {
        try {
            const userAddress = localStorage.getItem('genesis_user_address');
            if (!userAddress || !this.paymentInfo) return;
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const transactions = await window.CabinetDepositService.getTransactionsForAddress(userAddress);
            
            // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –Ω—É–∂–Ω–æ–π —Å—É–º–º–æ–π –∏ –≤–∞–ª—é—Ç–æ–π
            const matchingTx = transactions.find(tx => {
                const amount = window.CabinetDepositService.parseTransactionAmount(tx);
                const currency = window.CabinetDepositService.getTransactionCurrency(tx);
                
                return currency === this.selectedCurrency && 
                       Math.abs(amount - this.paymentInfo.amount) < (this.paymentInfo.amount * 0.05);
            });
            
            if (matchingTx) {
                this.onPaymentConfirmed(matchingTx);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã:', error);
        }
    },
    
    // MCP-MARKER:METHOD:ON_PAYMENT_CONFIRMED - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    onPaymentConfirmed(transaction) {
        this.stopPaymentMonitoring();
        
        const statusElement = document.getElementById('payment-status');
        if (statusElement) {
            statusElement.innerHTML = '‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!';
            statusElement.style.color = 'var(--success-color)';
        }
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –¥–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', 'success');
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            this.nextStep();
        }, 2000);
    },
    
    // MCP-MARKER:METHOD:COMPLETE_DEPOSIT - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    completeDeposit() {
        this.closeAllModals();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
        if (window.CabinetDepositService) {
            window.CabinetDepositService.refreshData();
        }
        
        this.showNotification('üéâ –£—Å–ø–µ—Ö!', '–î–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', 'success');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.resetState();
    },
    
    // MCP-MARKER:METHOD:VIEW_IN_PORTFOLIO - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ
    viewInPortfolio() {
        this.closeAllModals();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª –ø–æ—Ä—Ç—Ñ–µ–ª—è
        if (window.cabinetApp && window.cabinetApp.navigateTo) {
            window.cabinetApp.navigateTo('portfolio');
        }
        
        this.resetState();
    },
    
    // MCP-MARKER:METHOD:CREATE_ANOTHER - –°–æ–∑–¥–∞–Ω–∏–µ –µ—â–µ –æ–¥–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    createAnother() {
        this.resetState();
        this.closeAllModals();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        if (window.CabinetDepositService && window.CabinetDepositService.showCreateDepositModal) {
            window.CabinetDepositService.showCreateDepositModal();
        }
    },
    
    // MCP-MARKER:METHOD:ATTACH_WIZARD_EVENT_LISTENERS - –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
    attachWizardEventListeners() {
        // –£–∂–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –≤ HTML —á–µ—Ä–µ–∑ onclick
    },
    
    // MCP-MARKER:METHOD:CLOSE_ALL_MODALS - –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeAllModals() {
        const modal = document.getElementById('create-deposit-modal');
        if (modal) {
            modal.classList.add('hidden');
        }
        
        this.stopPaymentMonitoring();
    },
    
    // MCP-MARKER:METHOD:RESET_STATE - –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    resetState() {
        this.currentStep = 1;
        this.selectedPlan = null;
        this.selectedCurrency = null;
        this.paymentInfo = null;
        this.stopPaymentMonitoring();
    },
    
    // MCP-MARKER:METHOD:SHOW_ERROR - –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
    showError(message) {
        if (window.CabinetDepositService && window.CabinetDepositService.showNotification) {
            window.CabinetDepositService.showNotification('‚ùå –û—à–∏–±–∫–∞', message, 'error');
        } else {
            alert('‚ùå ' + message);
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_NOTIFICATION - –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification(title, message, type = 'info') {
        if (window.CabinetDepositService && window.CabinetDepositService.showNotification) {
            window.CabinetDepositService.showNotification(title, message, type);
        } else {
            alert(title + '\n' + message);
        }
    },
    
    // MCP-MARKER:UTILITY_METHODS - –£—Ç–∏–ª–∏—Ç—ã
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserPlanIds() {
        if (window.CabinetDepositService && window.CabinetDepositService.userDeposits) {
            return window.CabinetDepositService.userDeposits.map(d => d.planId);
        }
        return [];
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–ª–∞–Ω–∞
    getPlanIcon(planName) {
        const icons = {
            'TRIAL': 'üß™',
            'BASIC': 'üíº',
            'STARTER': 'üöÄ',
            'PROGRESSIVE1': 'üìà',
            'PROGRESSIVE2': 'üí´',
            'PROGRESSIVE3': '‚≠ê',
            'PROGRESSIVE4': 'üåü',
            'PROGRESSIVE5': '‚ú®',
            'PROGRESSIVE6': 'üíé',
            'PROGRESSIVE7': 'üëë',
            'PROGRESSIVE8': 'üèÜ',
            'RECOMMENDED': 'üéØ',
            'PLATINUM': 'ü•à',
            'MAXIMUM': 'ü•á'
        };
        return icons[planName] || 'üí∞';
    }
};

// MCP-MARKER:GLOBAL_FUNCTIONS - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.closeDepositModal = () => window.DepositCreationSystem.closeAllModals();

// MCP-MARKER:INITIALIZATION:AUTO_INIT - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.DepositCreationSystem.init();
});

console.log('üí∞ GENESIS Deposit Creation System loaded');
