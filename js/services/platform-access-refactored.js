/**
 * GENESIS 1.4.2 - Platform Access Service (Refactored)
 * MCP-MARKER:MODULE:PLATFORM_ACCESS_REFACTORED
 *
 * –£–õ–£–ß–®–ï–ù–ò–Ø:
 * - –£–±—Ä–∞–Ω demo mode bypass (security fix)
 * - –†–∞–∑–±–∏—Ç–æ –Ω–∞ –º–æ–¥—É–ª–∏ (config, checker, ui, monitor)
 * - –£–ª—É—á—à–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞
 * - –£–º–µ–Ω—å—à–µ–Ω —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ —Å 983 –¥–æ ~200 —Å—Ç—Ä–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞
 */

import { PlatformAccessConfig } from './platform-access/config.js';
import { PlatformAccessChecker } from './platform-access/checker.js';
import { PlatformAccessUI } from './platform-access/ui.js';
import { PlatformAccessMonitor } from './platform-access/monitor.js';

class GenesisPlatformAccessService {
    constructor() {
        this.config = new PlatformAccessConfig();
        this.checker = new PlatformAccessChecker(this.config);
        this.ui = new PlatformAccessUI(this.config);
        this.monitor = new PlatformAccessMonitor(this.config, this.checker, this.ui);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–∞
     */
    async init() {
        console.log('üí≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞ (refactored)...');

        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üí≥ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...', 'system');
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        this.monitor.startMonitoring();

        return true;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async checkUserAccessBalance(userAddress) {
        return await this.checker.checkUserAccess(userAddress);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è QR –∫–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
     */
    generateAccessPaymentQR(amount = 10) {
        if (!this.config.isValidPaymentAmount(amount)) {
            console.warn(`‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞: ${amount}. –î–æ–ø—É—Å—Ç–∏–º–æ: $${this.config.minPayment}-$${this.config.maxPayment}`);
            amount = this.config.minPayment;
        }

        const accessAddress = this.config.getAccessAddress();
        const usdtAddress = this.config.getUSDTAddress();

        // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è QR –∫–æ–¥–∞
        const qrData = {
            address: accessAddress,
            amount: amount,
            token: 'USDT',
            purpose: 'platform_access'
        };

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞
        const transferUrl = `https://link.trustwallet.com/send?coin=20000714&address=${accessAddress}&amount=${amount}&token_id=${usdtAddress}`;

        return {
            url: transferUrl,
            qrData: transferUrl,
            amount: amount,
            currency: 'USDT',
            address: accessAddress,
            days: this.config.calculateDaysFromAmount(amount),
            description: `–û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–∞ ${this.config.calculateDaysFromAmount(amount)} –¥–Ω–µ–π`
        };
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã
     */
    showPaymentModal(defaultAmount = 10) {
        const modal = document.createElement('div');
        modal.id = 'access-payment-modal';
        modal.className = 'modal-overlay';

        const paymentData = this.generateAccessPaymentQR(defaultAmount);

        modal.innerHTML = `
            <div class="modal-content access-payment-modal">
                <div class="modal-header">
                    <h2>üí≥ –û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h2>
                    <button class="modal-close" onclick="this.closest('.modal-overlay').remove()">√ó</button>
                </div>

                <div class="modal-body">
                    <div class="payment-info">
                        <div class="payment-details">
                            <h3>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞</h3>
                            <div class="price-info">
                                <div class="price-item">
                                    <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                    <strong>$1 –≤ –¥–µ–Ω—å</strong>
                                </div>
                                <div class="price-item">
                                    <span>–ú–∏–Ω–∏–º—É–º:</span>
                                    <strong>$10 (10 –¥–Ω–µ–π)</strong>
                                </div>
                                <div class="price-item">
                                    <span>–ö –æ–ø–ª–∞—Ç–µ:</span>
                                    <strong>$${defaultAmount} (${defaultAmount} –¥–Ω–µ–π)</strong>
                                </div>
                            </div>
                        </div>

                        <div class="payment-qr">
                            <h3>QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã</h3>
                            <div id="access-payment-qr" class="qr-container"></div>
                            <div class="payment-address">
                                <label>–ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:</label>
                                <div class="address-container">
                                    <code class="payment-address-value">${paymentData.address}</code>
                                    <button class="copy-btn" onclick="window.GenesisUtils.copyToClipboard('${paymentData.address}')">üìã</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="payment-instructions">
                        <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ</h3>
                        <ol>
                            <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç <strong>$10 –¥–æ $100 USDT</strong> –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å</li>
                            <li>–ö–∞–∂–¥—ã–π $1 USDT = 1 –¥–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</li>
                            <li>–î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –º–∏–Ω—É—Ç</li>
                            <li>–ü—Ä–∏ –Ω—É–ª–µ–≤–æ–º –±–∞–ª–∞–Ω—Å–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è</li>
                        </ol>
                    </div>

                    <div class="payment-amounts">
                        <h3>–ë—ã—Å—Ç—Ä–∞—è –æ–ø–ª–∞—Ç–∞</h3>
                        <div class="amount-buttons">
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(10)">$10 (10 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(30)">$30 (30 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(60)">$60 (60 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(100)">$100 (100 –¥–Ω–µ–π)</button>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button class="btn-secondary" onclick="this.closest('.modal-overlay').remove()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    <button class="btn-primary" onclick="window.GenesisPlatformAccess.startPaymentMonitoring()">–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–ø–ª–∞—Ç—É</button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥
        this.ui.generateQRCode('access-payment-qr', paymentData.qrData);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            modal.classList.add('show');
        }, 100);
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
     */
    updatePaymentAmount(amount) {
        const modal = document.getElementById('access-payment-modal');
        if (!modal) return;

        const paymentData = this.generateAccessPaymentQR(amount);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ
        const amountElement = modal.querySelector('.price-item:last-child strong');
        if (amountElement) {
            amountElement.textContent = `$${amount} (${amount} –¥–Ω–µ–π)`;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥—Ä–µ—Å (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è)
        const addressElement = modal.querySelector('.payment-address-value');
        if (addressElement) {
            addressElement.textContent = paymentData.address;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º QR –∫–æ–¥
        this.ui.generateQRCode('access-payment-qr', paymentData.qrData);

        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        modal.querySelectorAll('.amount-btn').forEach(btn => btn.classList.remove('active'));
        if (event && event.target) {
            event.target.classList.add('active');
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
     */
    async startPaymentMonitoring() {
        await this.monitor.startPaymentMonitoring();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞
     */
    getAccessStatus() {
        return this.checker.getAccessData();
    }

    /**
     * –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
     */
    blockFunctionsIfNoAccess() {
        const accessData = this.checker.getAccessData();
        if (!accessData || !accessData.isActive) {
            this.ui.blockFunctions();
            return true;
        }
        return false;
    }

    /**
     * –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
     */
    unblockFunctions() {
        this.ui.unblockFunctions();
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        this.monitor.stopMonitoring();

        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notifications = document.querySelectorAll('.access-notification');
        notifications.forEach(notification => notification.remove());

        console.log('üßπ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—á–∏—â–µ–Ω–∞');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const platformAccessService = new GenesisPlatformAccessService();

// –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
window.GenesisPlatformAccess = platformAccessService;

export default platformAccessService;

console.log('üí≥ GENESIS PLATFORM ACCESS loaded (refactored, modular, secure)');
