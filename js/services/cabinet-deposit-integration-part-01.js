                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å
                    </button>
                </div>
                
                <div style="text-align: center;">
                    <div id="qr-${currency}" style="margin-bottom: 1rem;">
                        <!-- QR –∫–æ–¥ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–¥–µ—Å—å -->
                    </div>
                    <button onclick="window.GenesisCabinet.generateQRCode('${address}', '${amount}', '${currency}')" class="btn-outline" style="font-size: 0.8rem;">
                        üì± –ü–æ–∫–∞–∑–∞—Ç—å QR –∫–æ–¥
                    </button>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SELECT_CURRENCY - –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –æ–ø–ª–∞—Ç—ã
    selectPaymentCurrency: function(currency) {
        console.log('üí± –í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã:', currency);
        
        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        document.querySelectorAll('.payment-option').forEach(option => {
            option.style.borderColor = 'var(--border-color)';
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        event.currentTarget.style.borderColor = 'var(--primary-color)';
        
        this.selectedCurrency = currency;
        
        // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
        const checkBtn = document.getElementById('check-payment-btn');
        if (checkBtn) {
            checkBtn.style.opacity = '1';
            checkBtn.disabled = false;
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:COPY_CLIPBOARD - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    copyToClipboard: function(text, message = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!') {
        navigator.clipboard.writeText(text).then(() => {
            this.showNotification('üìã ' + message, '', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement('textarea');
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            this.showNotification('üìã ' + message, '', 'success');
        });
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GENERATE_QR - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
    generateQRCode: function(address, amount, currency) {
        const qrContainer = document.getElementById(`qr-${currency}`);
        if (!qrContainer) return;
        
        // –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞ —á–µ—Ä–µ–∑ API
        const qrData = currency === 'USDT' ? 
            `${address}` : 
            `${address}?amount=${amount}`;
        
        const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(qrData)}`;
        
        qrContainer.innerHTML = `
            <div style="text-align: center;">
                <img src="${qrUrl}" alt="QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã" style="border-radius: 8px; border: 2px solid var(--border-color);">
                <div style="color: var(--text-secondary); font-size: 0.8rem; margin-top: 0.5rem;">
                    QR –∫–æ–¥ –¥–ª—è ${currency} –æ–ø–ª–∞—Ç—ã
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CHECK_PAYMENT - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
    checkPaymentStatus: async function() {
        if (!this.selectedPlan || !this.selectedCurrency) {
            alert('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –∏ –≤–∞–ª—é—Ç—É –æ–ø–ª–∞—Ç—ã');
            return;
        }
        
        const checkBtn = document.getElementById('check-payment-btn');
        if (checkBtn) {
            checkBtn.innerHTML = 'üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º...';
            checkBtn.disabled = true;
        }
        
        try {
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã...');
            
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã ${this.selectedPlan.name} –≤ ${this.selectedCurrency}...`, 'info');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ API
            const result = await this.verifyPayment();
            
            if (result.success) {
                this.showNotification('‚úÖ –û–ø–ª–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞!', '–î–µ–ø–æ–∑–∏—Ç –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç', 'success');
                this.nextWizardStep();
            } else {
                this.showNotification('‚è≥ –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç', 'warning');
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏', error.message, 'error');
        } finally {
            if (checkBtn) {
                checkBtn.innerHTML = 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É';
                checkBtn.disabled = false;
            }
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:VERIFY_PAYMENT - –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞
    verifyPayment: async function() {
        try {
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç BSC API)
            if (window.GenesisAPI && window.GenesisAPI.checkPayment) {
                return await window.GenesisAPI.checkPayment({
                    userAddress: this.currentUser,
                    planId: this.selectedPlan.id,
                    currency: this.selectedCurrency,
                    amount: this.selectedCurrency === 'USDT' ? 
                        this.selectedPlan.usdtAmount : 
                        this.selectedPlan.plexAmount
                });
            }
            
            // –°–∏–º—É–ª—è—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (—É–¥–∞–ª–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // 30% —à–∞–Ω—Å –Ω–∞–π—Ç–∏ "–æ–ø–ª–∞—Ç—É" –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const found = Math.random() > 0.7;
            
            return {
                success: found,
                transactionHash: found ? this.generateMockTxHash() : null,
                message: found ? '–û–ø–ª–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞' : '–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
            };
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
            return {
                success: false,
                error: error.message
            };
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:LOAD_CONFIRM - –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    loadConfirmationStep: function() {
        const confirmationContainer = document.getElementById('confirmation-details');
        const plan = this.selectedPlan;
        
        confirmationContainer.innerHTML = `
            <div style="text-align: center;">
                <div style="font-size: 3rem; margin-bottom: 1rem; animation: pulse 2s infinite;">üéâ</div>
                <h4 style="color: var(--success-color); margin-bottom: 1rem;">
                    –î–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
                </h4>
                <p style="color: var(--text-secondary); margin-bottom: 2rem;">
                    –í–∞—à –¥–µ–ø–æ–∑–∏—Ç –ø–æ –ø–ª–∞–Ω—É <strong style="color: var(--primary-color);">${plan.name}</strong> –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—á–∞–ª –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å
                </p>
            </div>
            
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 2rem; border: 1px solid var(--success-color);">
                <h5 style="color: var(--success-color); margin-bottom: 1rem; text-align: center;">üìä –î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞:</h5>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                    <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:</div>
                        <div style="color: var(--text-primary); font-size: 1.2rem; font-weight: 600;">
                            $${plan.usdtAmount} ${this.selectedCurrency || 'USDT'}
                        </div>
                    </div>
                    <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</div>
                        <div style="color: var(--success-color); font-size: 1.2rem; font-weight: 600;">
                            ${plan.percentage}% (${plan.days} –¥–Ω–µ–π)
                        </div>
                    </div>
                </div>
                
                <div style="margin-top: 1rem; text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–û–∂–∏–¥–∞–µ–º–∞—è –ø—Ä–∏–±—ã–ª—å:</div>
                    <div style="color: var(--gold-color); font-size: 1.5rem; font-weight: 700; font-family: 'Orbitron', monospace;">
                        $${((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount).toFixed(2)}
                    </div>
                    <div style="color: var(--warning-color); font-size: 0.9rem; margin-top: 0.3rem;">
                        (~$${(((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount) / plan.days).toFixed(2)} –≤ –¥–µ–Ω—å)
                    </div>
                </div>
            </div>
            
            <div style="background: rgba(0, 212, 255, 0.1); padding: 1.5rem; border-radius: 12px; margin-bottom: 2rem; border: 1px solid var(--secondary-color);">
                <h5 style="color: var(--secondary-color); margin-bottom: 1rem;">üì± –ß—Ç–æ –¥–∞–ª—å—à–µ?</h5>
                <ul style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                    <li>–í–∞—à –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å</li>
                    <li>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Ä—Ç—Ñ–µ–ª—å"</li>
                    <li>–ü—Ä–∏–±—ã–ª—å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                    <li>–ß–µ—Ä–µ–∑ ${plan.days} –¥–Ω–µ–π –¥–µ–ø–æ–∑–∏—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø—è—Ç –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å</li>
                </ul>
            </div>
            
            <div style="display: flex; gap: 1rem; justify-content: center;">
                <button onclick="window.GenesisCabinet.viewPortfolio()" class="btn">
                    üìä –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å
                </button>
                <button onclick="window.GenesisCabinet.closeDepositModal()" class="btn-outline">
                    ‚úÖ –ì–æ—Ç–æ–≤–æ
                </button>
            </div>
            
            <style>
                @keyframes pulse {
                    0% { opacity: 1; }
                    50% { opacity: 0.7; }
                    100% { opacity: 1; }
                }
            </style>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:PREV_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
    previousWizardStep: function() {
        const currentStep = document.querySelector('.wizard-step.active');
        const currentStepNumber = parseInt(currentStep.id.split('-')[1]);
        
        if (currentStepNumber === 1) return;
        
        const prevStepNumber = currentStepNumber - 1;
        const prevStep = document.getElementById(`step-${prevStepNumber}`);
        
        if (!prevStep) return;
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        currentStep.classList.remove('active');
        currentStep.classList.add('hidden');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        prevStep.classList.remove('hidden');
        prevStep.classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —à–∞–≥–æ–≤
        document.querySelectorAll('.step').forEach(step => {
            step.classList.remove('active');
        });
        document.querySelector(`[data-step="${prevStepNumber}"]`).classList.add('active');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:VIEW_PORTFOLIO - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é
    viewPortfolio: function() {
        this.closeDepositModal();
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ä—Ç—Ñ–µ–ª—è
        if (window.cabinetApp && window.cabinetApp.navigateTo) {
            window.cabinetApp.navigateTo('portfolio');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if (window.CabinetDepositService && window.CabinetDepositService.refreshData) {
            window.CabinetDepositService.refreshData();
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CLOSE_MODAL - –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    closeDepositModal: function() {
        const modal = document.getElementById('create-deposit-modal');
        if (modal) {
            modal.classList.add('hidden');
        }
        
        this.activeModal = null;
        this.selectedPlan = null;
        this.selectedCurrency = null;
        
        console.log('üö™ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –∑–∞–∫—Ä—ã—Ç–æ');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CLOSE_ALL - –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeAllModals: function() {
        const modals = [
            'create-deposit-modal',
            'confirm-deposit-modal', 
            'transaction-result-modal'
        ];
        
        modals.forEach(modalId => {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('hidden');
            }
        });
        
        this.activeModal = null;
        this.selectedPlan = null;
        this.selectedCurrency = null;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SHOW_PURCHASE - –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –ø–ª–∞–Ω–∞
    showPurchaseModal: function(planId) {
        console.log('üõí –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∞:', planId);
        this.showDepositModal(planId);
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:NOTIFICATION - –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification: function(title, message = '', type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            min-width: 300px;
            max-width: 400px;
            z-index: 10000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        const color = {
            'success': 'var(--success-color)',
            'error': 'var(--error-color)',
            'warning': 'var(--warning-color)',
            'info': 'var(--secondary-color)'
        }[type] || 'var(--primary-color)';
        
        notification.style.borderLeftColor = color;
        notification.style.borderLeftWidth = '4px';
        
        notification.innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <div style="color: ${color}; font-weight: 600; margin-bottom: ${message ? '0.5rem' : '0'};">
                        ${title}
                    </div>
                    ${message ? `<div style="color: var(--text-secondary); font-size: 0.9rem;">${message}</div>` : ''}
                </div>
                <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: var(--text-secondary); font-size: 1.2rem; cursor: pointer; padding: 0; margin-left: 1rem;">√ó</button>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                notification.remove();
            }, 300);
        }, type === 'error' ? 7000 : 4000);
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        if (window.GenesisTerminal) {
            const prefix = {
                'success': '‚úÖ',
                'error': '‚ùå', 
                'warning': '‚ö†Ô∏è',
                'info': '‚ÑπÔ∏è'
            }[type] || '‚ÑπÔ∏è';
            
            window.GenesisTerminal.log(`${prefix} ${title}${message ? ': ' + message : ''}`, type);
        }
    },
    
    // MCP-MARKER:UTILITY_METHODS - –£—Ç–∏–ª–∏—Ç—ã
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GET_USER_PLANS - –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserPlanIds: function() {
        // –ü–æ–ª—É—á–∞–µ–º ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
        if (window.CabinetDepositService && window.CabinetDepositService.userDeposits) {
            return window.CabinetDepositService.userDeposits.map(d => d.planId);
        }
        
        // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        return ['trial']; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ trial
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:IS_PLAN_LOCKED - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∞
    isPlanLocked: function(plan, userPlanIds) {
        if (plan.id === 'trial') return false;
        
        const allPlans = window.GENESIS_CONFIG.depositPlans;
        const planIndex = allPlans.findIndex(p => p.id === plan.id);
        
        if (planIndex === 0) return false;
        
        for (let i = 0; i < planIndex; i++) {
            const prevPlan = allPlans[i];
            if (prevPlan.id !== 'trial' && !userPlanIds.includes(prevPlan.id)) {
                return true;
            }
        }
        
        return false;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GET_PLAN_ICON - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–ª–∞–Ω–∞
    getPlanIcon: function(planName) {
        const icons = {
            'TRIAL': 'üß™',
            'STARTER': 'üöÄ',
            'PROGRESSIVE1': 'üìà',
            'PROGRESSIVE2': 'üí´',
            'PROGRESSIVE3': '‚≠ê',
            'PROGRESSIVE4': 'üåü',
            'PROGRESSIVE5': '‚ú®',
            'PROGRESSIVE6': 'üíé',
            'PROGRESSIVE7': 'üëë',
            'PROGRESSIVE8': 'üèÜ',
            'RECOMMENDED': 'üéØ',
            'PLATINUM': 'ü•à',
            'MAXIMUM': 'ü•á'
        };
        return icons[planName] || 'üí∞';
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:MOCK_TX_HASH - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ö–µ—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    generateMockTxHash: function() {
        const chars = '0123456789abcdef';
        let hash = '0x';
        for (let i = 0; i < 64; i++) {
            hash += chars[Math.floor(Math.random() * chars.length)];
        }
        return hash;
    }
};

// MCP-MARKER:SECTION:GLOBAL_FUNCTIONS - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

// MCP-MARKER:FUNCTION:CLOSE_MODALS - –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω (–¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ HTML)
window.closeDepositModal = () => window.GenesisCabinet.closeDepositModal();
window.closeConfirmModal = () => window.GenesisCabinet.closeAllModals();
window.closeTransactionResultModal = () => window.GenesisCabinet.closeAllModals();

