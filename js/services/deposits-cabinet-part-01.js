                                class="btn-secondary" style="font-size: 0.7rem; padding: 0.3rem 0.6rem;">
                            üëÅÔ∏è –î–µ—Ç–∞–ª–∏
                        </button>
                        <button onclick="window.CabinetDepositService.viewInBlockchain('${deposit.txHash}')" 
                                class="btn-outline" style="font-size: 0.7rem; padding: 0.3rem 0.6rem;">
                            üåê BSCScan
                        </button>
                    </div>
                </td>
            </tr>
        `;
    },
    
    // MCP-MARKER:METHOD:UPDATE_DEPOSIT_PLANS_GRID - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    updateDepositPlansGrid() {
        const container = document.getElementById('deposit-plans-grid');
        if (!container) return;
        
        const plans = window.GENESIS_CONFIG.depositPlans;
        const userPlanIds = this.userDeposits.map(d => d.planId);
        
        container.innerHTML = `
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 1.5rem;">
                ${plans.map(plan => this.renderPlanCard(plan, userPlanIds)).join('')}
            </div>
            
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="margin-bottom: 1rem; color: var(--primary-color);">üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h3>
                <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 2rem;">
                    <div>
                        <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ GENESIS 1.1:</h4>
                        <ul style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                            <li>‚úÖ <strong>–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</strong> –ó–∞—â–∏—Ç–∞ —á–µ—Ä–µ–∑ –ø–æ—ç—Ç–∞–ø–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤</li>
                            <li>‚úÖ <strong>–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:</strong> –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</li>
                            <li>‚úÖ <strong>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:</strong> –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</li>
                            <li>‚úÖ <strong>–ì–∏–±–∫–æ—Å—Ç—å:</strong> –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –æ–ø–ª–∞—Ç—ã (USDT/PLEX) –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–ª–∞–Ω–æ–≤</li>
                            <li>‚úÖ <strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã</li>
                        </ul>
                    </div>
                    <div style="text-align: center; padding: 2rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="font-size: 3rem; margin-bottom: 1rem;">üîí</div>
                        <h4 style="color: var(--success-color); margin-bottom: 0.5rem;">–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–µ–Ω–∞</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 1rem;">
                            –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –ø–ª–∞–Ω–æ–≤
                        </p>
                        <div style="background: var(--bg-secondary); padding: 0.8rem; border-radius: 6px; font-family: monospace; font-size: 0.7rem; word-break: break-all;">
                            ${window.GENESIS_CONFIG.addresses.system}
                        </div>
                    </div>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:RENDER_PLAN_CARD - –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–ª–∞–Ω–∞
    renderPlanCard(plan, userPlanIds) {
        const hasThisPlan = userPlanIds.includes(plan.id);
        const isLocked = this.isPlanLocked(plan, userPlanIds);
        const profit = (plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount;
        const dailyProfit = profit / plan.days;
        
        let statusBadge, buttonContent, buttonAction;
        
        if (hasThisPlan) {
            statusBadge = '<div style="background: rgba(0, 255, 65, 0.2); color: var(--success-color); padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem;">‚úÖ –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω</div>';
            buttonContent = 'üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä';
            buttonAction = `window.CabinetDepositService.viewPlanDetails('${plan.id}')`;
        } else if (isLocked) {
            statusBadge = '<div style="background: rgba(255, 165, 0, 0.2); color: var(--warning-color); padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem;">üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</div>';
            buttonContent = 'üîí –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
            buttonAction = 'void(0)';
        } else {
            statusBadge = '<div style="background: rgba(0, 212, 255, 0.2); color: var(--secondary-color); padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem;">üöÄ –î–æ—Å—Ç—É–ø–µ–Ω</div>';
            buttonContent = 'üí∞ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç';
            buttonAction = `window.CabinetDepositService.startDepositProcess('${plan.id}')`;
        }
        
        return `
            <div class="stats-card" style="border-left: 4px solid ${this.getPlanColor(plan.id)}; ${isLocked && !hasThisPlan ? 'opacity: 0.7;' : ''}">
                <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                    <div>
                        <h4 style="color: ${this.getPlanColor(plan.id)}; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1.5rem;">${this.getPlanIcon(plan.name)}</span>
                            ${plan.name}
                        </h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">
                            ${plan.description}
                        </p>
                        ${statusBadge}
                    </div>
                    <div style="text-align: right;">
                        <div style="font-size: 1.5rem; font-weight: 700; color: var(--text-primary);">
                            $${plan.usdtAmount.toLocaleString()}
                        </div>
                        <div style="color: var(--success-color); font-size: 0.9rem;">
                            ${plan.percentage}% (${plan.days} –¥–Ω–µ–π)
                        </div>
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 0.8rem; margin-bottom: 1.5rem; font-size: 0.8rem;">
                    <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                        <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                        <div style="color: var(--text-primary); font-weight: 600;">$${plan.usdtAmount}</div>
                    </div>
                    <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                        <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–ü—Ä–∏–±—ã–ª—å</div>
                        <div style="color: var(--success-color); font-weight: 600;">$${profit.toFixed(2)}</div>
                    </div>
                    <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                        <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–í –¥–µ–Ω—å</div>
                        <div style="color: var(--primary-color); font-weight: 600;">$${dailyProfit.toFixed(2)}</div>
                    </div>
                </div>
                
                <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                        <span style="color: var(--text-secondary);">–í–∞–ª—é—Ç—ã:</span>
                        <span style="color: var(--secondary-color); font-weight: 500;">${plan.currencies.join(', ')}</span>
                    </div>
                    <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                        <span style="color: var(--text-secondary);">ROI:</span>
                        <span style="color: var(--warning-color); font-weight: 500;">${plan.percentage - 100}% –ø—Ä–∏–±—ã–ª—å</span>
                    </div>
                </div>
                
                <button class="${hasThisPlan || isLocked ? 'btn-outline' : 'btn'}" 
                        onclick="${buttonAction}" 
                        style="width: 100%; font-size: 0.9rem; ${isLocked && !hasThisPlan ? 'opacity: 0.5; cursor: not-allowed;' : ''}"
                        ${isLocked && !hasThisPlan ? 'disabled' : ''}>
                    ${buttonContent}
                </button>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:IS_PLAN_LOCKED - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∞
    isPlanLocked(plan, userPlanIds) {
        if (plan.id === 'trial') return false; // –ü—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
        
        const allPlans = window.GENESIS_CONFIG.depositPlans;
        const planIndex = allPlans.findIndex(p => p.id === plan.id);
        
        if (planIndex === 0) return false; // –ü–µ—Ä–≤—ã–π –ø–ª–∞–Ω –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–ª–∞–Ω—ã –∫—É–ø–ª–µ–Ω—ã
        for (let i = 0; i < planIndex; i++) {
            const prevPlan = allPlans[i];
            if (prevPlan.id !== 'trial' && !userPlanIds.includes(prevPlan.id)) {
                return true;
            }
        }
        
        return false;
    },
    
    // MCP-MARKER:METHOD:UPDATE_NEXT_AVAILABLE_PLAN - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
    updateNextAvailablePlan() {
        const userPlanIds = this.userDeposits.map(d => d.planId);
        const allPlans = window.GENESIS_CONFIG.depositPlans;
        
        // –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–ª–∞–Ω
        let nextPlan = allPlans.find(plan => 
            !userPlanIds.includes(plan.id) && !this.isPlanLocked(plan, userPlanIds)
        );
        
        if (!nextPlan) {
            nextPlan = allPlans[allPlans.length - 1]; // –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞–Ω –µ—Å–ª–∏ –≤—Å–µ –∫—É–ø–ª–µ–Ω—ã
        }
        
        const updates = {
            'next-available-plan': nextPlan.name,
            'next-plan-status': userPlanIds.includes(nextPlan.id) ? '–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω' : '–î–æ—Å—Ç—É–ø–µ–Ω'
        };
        
        Object.entries(updates).forEach(([id, value]) => {
            const element = document.getElementById(id);
            if (element) element.textContent = value;
        });
        
        const nextPlanInfo = document.getElementById('next-plan-info');
        if (nextPlanInfo) {
            nextPlanInfo.innerHTML = `
                <div>üí∞ –ú–∏–Ω–∏–º—É–º: $${nextPlan.usdtAmount}</div>
                <div>üìä –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${nextPlan.percentage}%</div>
            `;
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_CREATE_DEPOSIT_MODAL - –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    showCreateDepositModal() {
        if (window.GenesisCabinet && window.GenesisCabinet.showDepositModal) {
            window.GenesisCabinet.showDepositModal();
        } else {
            alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        }
    },
    
    // MCP-MARKER:METHOD:START_DEPOSIT_PROCESS - –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    startDepositProcess(planId) {
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        if (!plan) {
            alert('‚ùå –ü–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üí∞ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}`, 'info');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–ª–∞–Ω–∞
        const userPlanIds = this.userDeposits.map(d => d.planId);
        if (this.isPlanLocked(plan, userPlanIds)) {
            alert('üîí –≠—Ç–æ—Ç –ø–ª–∞–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–ª–∞–Ω—ã.');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–ª–∞–Ω–æ–º
        if (window.GenesisCabinet && window.GenesisCabinet.showPurchaseModal) {
            window.GenesisCabinet.showPurchaseModal(planId);
        } else {
            alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        }
    },
    
    // MCP-MARKER:METHOD:VIEW_DEPOSIT_DETAILS - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –¥–µ–ø–æ–∑–∏—Ç–∞
    viewDepositDetails(txHash) {
        const deposit = this.userDeposits.find(d => d.txHash === txHash);
        if (!deposit) {
            alert('‚ùå –î–µ–ø–æ–∑–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === deposit.planId);
        const now = new Date();
        const daysPassed = Math.floor((now - deposit.timestamp) / (1000 * 60 * 60 * 24));
        const progress = Math.min(100, (daysPassed / plan.days) * 100);
        
        const totalProfit = (deposit.amount * plan.percentage / 100) - deposit.amount;
        const dailyProfit = totalProfit / plan.days;
        const earnedProfit = Math.min(totalProfit, dailyProfit * daysPassed);
        const remainingProfit = totalProfit - earnedProfit;
        
        const modalContent = `
            <div style="max-width: 500px; margin: 0 auto;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                    üíº –î–µ—Ç–∞–ª–∏ –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}
                </h3>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem;">
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</div>
                            <div style="color: var(--text-primary); font-weight: 600; font-size: 1.2rem;">
                                $${deposit.amount.toFixed(2)} ${deposit.tokenType}
                            </div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ç–∞—Ç—É—Å:</div>
                            <div style="color: var(--success-color); font-weight: 600;">
                                ${deposit.status === 'ACTIVE' ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω'}
                            </div>
                        </div>
                    </div>
                    
                    <div style="background: var(--bg-secondary); padding: 1rem; border-radius: 8px; margin-bottom: 1rem;">
                        <div style="color: var(--warning-color); font-weight: 600; margin-bottom: 0.5rem;">
                            –ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress.toFixed(1)}%
                        </div>
                        <div style="background: var(--bg-primary); height: 8px; border-radius: 4px; overflow: hidden;">
                            <div style="background: var(--success-color); height: 100%; width: ${progress}%; transition: width 0.3s ease;"></div>
                        </div>
                        <div style="color: var(--text-secondary); font-size: 0.8rem; margin-top: 0.5rem;">
                            ${daysPassed} –∏–∑ ${plan.days} –¥–Ω–µ–π –ø—Ä–æ—à–ª–æ
                        </div>
                    </div>
                    
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                        <div style="text-align: center; padding: 0.8rem; background: var(--bg-secondary); border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem;">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</div>
                            <div style="color: var(--success-color); font-weight: 600;">$${earnedProfit.toFixed(2)}</div>
                        </div>
                        <div style="text-align: center; padding: 0.8rem; background: var(--bg-secondary); border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem;">–û—Å—Ç–∞–ª–æ—Å—å:</div>
                            <div style="color: var(--warning-color); font-weight: 600;">$${remainingProfit.toFixed(2)}</div>
                        </div>
                    </div>
                </div>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem;">
                    <h4 style="color: var(--secondary-color); margin-bottom: 1rem;">üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h4>
                    <div style="display: flex; flex-direction: column; gap: 0.8rem;">
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–æ—Ö–æ–¥:</span>
                            <span style="color: var(--primary-color); font-weight: 600;">$${dailyProfit.toFixed(2)}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å:</span>
                            <span style="color: var(--success-color); font-weight: 600;">$${totalProfit.toFixed(2)}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–û–±—â–∏–π –≤–æ–∑–≤—Ä–∞—Ç:</span>
                            <span style="color: var(--warning-color); font-weight: 600;">$${(deposit.amount + totalProfit).toFixed(2)}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">ROI:</span>
                            <span style="color: var(--gold-color); font-weight: 600;">${((totalProfit / deposit.amount) * 100).toFixed(1)}%</span>
                        </div>
                    </div>
                </div>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem;">
                    <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üîó –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h4>
                    <div style="display: flex; flex-direction: column; gap: 0.8rem;">
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.8rem;">Hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</div>
                            <div style="font-family: monospace; font-size: 0.9rem; color: var(--secondary-color); word-break: break-all;">
                                ${txHash}
                            </div>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                            <span style="color: var(--text-primary);">${deposit.timestamp.toLocaleDateString()}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:</span>
                            <span style="color: var(--text-primary);">${deposit.endDate.toLocaleDateString()}</span>
                        </div>
                    </div>
                </div>
                
                <div style="display: flex; gap: 1rem; justify-content: center;">
                    <button onclick="window.CabinetDepositService.viewInBlockchain('${txHash}')" 
                            class="btn-secondary" style="padding: 0.8rem 1.5rem;">
                        üåê –ü—Ä–æ—Å–º–æ—Ç—Ä –≤ BSCScan
                    </button>
                    <button onclick="window.CabinetDepositService.copyDepositInfo('${txHash}')" 
                            class="btn-outline" style="padding: 0.8rem 1.5rem;">
                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                    </button>
                </div>
            </div>
        `;
        
        this.showModal('–î–µ—Ç–∞–ª–∏ –¥–µ–ø–æ–∑–∏—Ç–∞', modalContent);
    },
    
    // MCP-MARKER:METHOD:VIEW_IN_BLOCKCHAIN - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
    viewInBlockchain(txHash) {
        const url = `https://bscscan.com/tx/${txHash}`;
        window.open(url, '_blank');
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üåê –û—Ç–∫—Ä—ã—Ç BSCScan –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${txHash.substring(0, 10)}...`, 'info');
        }
    },
    
    // MCP-MARKER:METHOD:COPY_DEPOSIT_INFO - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ–ø–æ–∑–∏—Ç–µ
    copyDepositInfo(txHash) {
        const deposit = this.userDeposits.find(d => d.txHash === txHash);
        if (!deposit) return;
        
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === deposit.planId);
        const info = `
GENESIS 1.1 - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–æ–∑–∏—Ç–µ

–ü–ª–∞–Ω: ${plan.name}
–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è: $${deposit.amount.toFixed(2)} ${deposit.tokenType}
–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${plan.percentage}%
–°—Ä–æ–∫: ${plan.days} –¥–Ω–µ–π
–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${txHash}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${deposit.timestamp.toLocaleDateString()}
–°—Ç–∞—Ç—É—Å: ${deposit.status}

–°–æ–∑–¥–∞–Ω–æ –≤ GENESIS 1.1 DeFi Platform
        `.trim();
        
        navigator.clipboard.writeText(info).then(() => {
            this.showNotification('üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–æ–∑–∏—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
        });
    },
    
    // MCP-MARKER:METHOD:VIEW_PLAN_DETAILS - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –ø–ª–∞–Ω–∞
    viewPlanDetails(planId) {
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        if (!plan) {
            alert('‚ùå –ü–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const userDepositsForPlan = this.userDeposits.filter(d => d.planId === planId);
        const profit = (plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount;
        const dailyProfit = profit / plan.days;
        
        const modalContent = `
            <div style="max-width: 600px; margin: 0 auto;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                    ${this.getPlanIcon(plan.name)} –î–µ—Ç–∞–ª–∏ –ø–ª–∞–Ω–∞: ${plan.name}
                </h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; margin-bottom: 2rem;">
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px;">
                        <h4 style="color: var(--secondary-color); margin-bottom: 1rem;">üìä –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h4>
                        <div style="display: flex; flex-direction: column; gap: 0.8rem;">
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</span>
                                <span style="color: var(--text-primary); font-weight: 600;">$${plan.usdtAmount}</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</span>
                                <span style="color: var(--success-color); font-weight: 600;">${plan.percentage}%</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–°—Ä–æ–∫:</span>
                                <span style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–í–∞–ª—é—Ç—ã:</span>
                                <span style="color: var(--secondary-color); font-weight: 600;">${plan.currencies.join(', ')}</span>
                            </div>
                        </div>
                    </div>
                    
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px;">
                        <h4 style="color: var(--primary-color); margin-bottom: 1rem;">üí∞ –†–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª–∏</h4>
                        <div style="display: flex; flex-direction: column; gap: 0.8rem;">
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</span>
                                <span style="color: var(--primary-color); font-weight: 600;">$${dailyProfit.toFixed(2)}</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å:</span>
                                <span style="color: var(--success-color); font-weight: 600;">$${profit.toFixed(2)}</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">–û–±—â–∏–π –≤–æ–∑–≤—Ä–∞—Ç:</span>
                                <span style="color: var(--gold-color); font-weight: 600;">$${(plan.usdtAmount + profit).toFixed(2)}</span>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span style="color: var(--text-secondary);">ROI:</span>
                                <span style="color: var(--warning-color); font-weight: 600;">${((profit / plan.usdtAmount) * 100).toFixed(1)}%</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem;">
                    <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üìù –û–ø–∏—Å–∞–Ω–∏–µ</h4>
