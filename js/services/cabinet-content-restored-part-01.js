                                –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö
                            </p>
                            <button class="btn btn-secondary" onclick="window.CabinetApp.requestPushPermission()">
                                ${Notification.permission === 'granted' ? '‚úÖ –í–∫–ª—é—á–µ–Ω—ã' : 'üîî –í–∫–ª—é—á–∏—Ç—å'}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ò–ù–¢–ï–†–§–ï–ô–° -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--accent-color); margin-bottom: 1.5rem;">üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å</h3>
                
                <div style="display: grid; gap: 1rem;">
                    <!-- –¢–µ–º–∞ -->
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.8rem; display: block;">–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</label>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem;">
                            <button class="theme-selector ${localStorage.getItem('theme') === 'dark' || !localStorage.getItem('theme') ? 'active' : ''}" 
                                    onclick="window.CabinetApp.setTheme('dark')">
                                <span style="font-size: 2rem;">üåô</span>
                                <span>–¢–µ–º–Ω–∞—è</span>
                            </button>
                            <button class="theme-selector ${localStorage.getItem('theme') === 'light' ? 'active' : ''}" 
                                    onclick="window.CabinetApp.setTheme('light')">
                                <span style="font-size: 2rem;">‚òÄÔ∏è</span>
                                <span>–°–≤–µ—Ç–ª–∞—è</span>
                            </button>
                            <button class="theme-selector ${localStorage.getItem('theme') === 'auto' ? 'active' : ''}" 
                                    onclick="window.CabinetApp.setTheme('auto')">
                                <span style="font-size: 2rem;">üåì</span>
                                <span>–ê–≤—Ç–æ</span>
                            </button>
                        </div>
                    </div>
                    
                    <!-- –Ø–∑—ã–∫ -->
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
                        <select style="width: 100%; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 8px; color: var(--text-primary);"
                                onchange="window.CabinetApp.setLanguage(this.value)">
                            <option value="ru" ${localStorage.getItem('language') === 'ru' || !localStorage.getItem('language') ? 'selected' : ''}>üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
                            <option value="en" ${localStorage.getItem('language') === 'en' ? 'selected' : ''}>üá¨üáß English</option>
                            <option value="es" ${localStorage.getItem('language') === 'es' ? 'selected' : ''}>üá™üá∏ Espa√±ol</option>
                            <option value="de" ${localStorage.getItem('language') === 'de' ? 'selected' : ''}>üá©üá™ Deutsch</option>
                            <option value="zh" ${localStorage.getItem('language') === 'zh' ? 'selected' : ''}>üá®üá≥ ‰∏≠Êñá</option>
                        </select>
                    </div>
                    
                    <!-- –ê–Ω–∏–º–∞—Ü–∏–∏ -->
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <h4 style="color: var(--text-primary); margin-bottom: 0.3rem;">–ê–Ω–∏–º–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</h4>
                            <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0;">
                                –ü–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã
                            </p>
                        </div>
                        <label class="switch">
                            <input type="checkbox" 
                                   ${localStorage.getItem('animations') !== 'false' ? 'checked' : ''}
                                   onchange="window.CabinetApp.toggleAnimations(this.checked)">
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>
            </div>
            
            <!-- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û -->
            <div class="stats-card">
                <h3 style="color: var(--gold-color); margin-bottom: 1.5rem;">üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h3>
                
                <div style="display: grid; gap: 1rem;">
                    <button class="btn btn-outline" onclick="window.CabinetApp.exportUserData()">
                        üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
                    </button>
                    
                    <button class="btn btn-outline" onclick="window.CabinetApp.clearCache()">
                        üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    </button>
                    
                    <button class="btn btn-outline" style="color: var(--error-color); border-color: var(--error-color);" 
                            onclick="if(confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!')) window.CabinetApp.resetAccount()">
                        ‚ö†Ô∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                </div>
                
                <div style="margin-top: 2rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                    <p style="color: var(--text-secondary); font-size: 0.85rem; margin: 0; text-align: center;">
                        –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: <strong>1.1.0</strong> | 
                        –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: <strong>02.08.2025</strong>
                    </p>
                </div>
            </div>
            
            <style>
                .switch {
                    position: relative;
                    display: inline-block;
                    width: 50px;
                    height: 28px;
                }
                
                .switch input {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
                
                .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: var(--bg-secondary);
                    transition: 0.4s;
                    border-radius: 34px;
                }
                
                .slider:before {
                    position: absolute;
                    content: "";
                    height: 20px;
                    width: 20px;
                    left: 4px;
                    bottom: 4px;
                    background-color: white;
                    transition: 0.4s;
                    border-radius: 50%;
                }
                
                input:checked + .slider {
                    background-color: var(--primary-color);
                }
                
                input:checked + .slider:before {
                    transform: translateX(22px);
                }
                
                .theme-selector {
                    padding: 1rem;
                    background: var(--bg-primary);
                    border: 2px solid var(--border-color);
                    border-radius: 12px;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    gap: 0.5rem;
                    color: var(--text-primary);
                }
                
                .theme-selector:hover {
                    border-color: var(--primary-color);
                    transform: translateY(-2px);
                }
                
                .theme-selector.active {
                    border-color: var(--primary-color);
                    background: rgba(255, 107, 53, 0.1);
                }
            </style>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:EXPERIENCE_CONTENT - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞–∂–∞
    getExperienceContent() {
        const startDate = localStorage.getItem('firstLogin') || Date.now();
        const daysInSystem = Math.floor((Date.now() - new Date(startDate)) / (1000 * 60 * 60 * 24));
        
        return `
            <div class="page-header">
                <h2 class="page-title">üìÖ –°—Ç–∞–∂ –≤ —Å–∏—Å—Ç–µ–º–µ GENESIS</h2>
                <p class="page-subtitle">–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ</p>
            </div>
            
            <!-- –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–¢–ê–ñ–ê -->
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ</span>
                        <span class="stats-icon">üìÖ</span>
                    </div>
                    <div class="stats-value">${daysInSystem}</div>
                    <div class="stats-change">–¥–Ω–µ–π</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ú–æ–Ω–µ—Ç—ã —Å—Ç–∞–∂–∞</span>
                        <span class="stats-icon">ü™ô</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">–º–æ–Ω–µ—Ç</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è</span>
                        <span class="stats-icon">üî•</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–õ—É—á—à–∞—è —Å–µ—Ä–∏—è</span>
                        <span class="stats-icon">üèÜ</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">—Ä–µ–∫–æ—Ä–¥ –¥–Ω–µ–π</div>
                </div>
            </div>
            
            <!-- –ö–ê–õ–ï–ù–î–ê–†–¨ –ê–ö–¢–ò–í–ù–û–°–¢–ò -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px;">
                    <div style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 0.5rem; margin-bottom: 1rem;">
                        ${['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map(day => `
                            <div style="text-align: center; color: var(--text-secondary); font-size: 0.85rem; font-weight: 600;">
                                ${day}
                            </div>
                        `).join('')}
                    </div>
                    
                    <div style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 0.5rem;">
                        ${Array.from({length: 35}, (_, i) => {
                            const isToday = i === new Date().getDate() + 2;
                            const hasActivity = Math.random() > 0.3;
                            const color = hasActivity ? (Math.random() > 0.5 ? 'var(--success-color)' : 'var(--primary-color)') : 'var(--bg-secondary)';
                            
                            return `
                                <div style="aspect-ratio: 1; background: ${color}; border-radius: 8px; display: flex; align-items: center; justify-content: center; position: relative; ${isToday ? 'border: 2px solid var(--warning-color);' : ''}">
                                    ${isToday ? '<span style="position: absolute; top: -20px; left: 50%; transform: translateX(-50%); font-size: 0.7rem; color: var(--warning-color);">–°–µ–≥–æ–¥–Ω—è</span>' : ''}
                                    ${hasActivity ? '<span style="font-size: 0.8rem;">‚úì</span>' : ''}
                                </div>
                            `;
                        }).join('')}
                    </div>
                    
                    <div style="display: flex; gap: 2rem; margin-top: 1.5rem; justify-content: center;">
                        <div style="display: flex; align-items: center; gap: 0.5rem;">
                            <div style="width: 20px; height: 20px; background: var(--success-color); border-radius: 4px;"></div>
                            <span style="color: var(--text-secondary); font-size: 0.85rem;">–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                        </div>
                        <div style="display: flex; align-items: center; gap: 0.5rem;">
                            <div style="width: 20px; height: 20px; background: var(--primary-color); border-radius: 4px;"></div>
                            <span style="color: var(--text-secondary); font-size: 0.85rem;">–û–±—ã—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                        </div>
                        <div style="display: flex; align-items: center; gap: 0.5rem;">
                            <div style="width: 20px; height: 20px; background: var(--bg-secondary); border-radius: 4px;"></div>
                            <span style="color: var(--text-secondary); font-size: 0.85rem;">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –£–†–û–í–ù–ò –°–¢–ê–ñ–ê -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üéñÔ∏è –£—Ä–æ–≤–Ω–∏ —Å—Ç–∞–∂–∞</h3>
                
                <div style="display: grid; gap: 1rem;">
                    ${[
                        { level: 1, name: '–ù–æ–≤–∏—á–æ–∫', days: 0, icon: 'üå±', color: 'var(--text-secondary)', reward: '100 –º–æ–Ω–µ—Ç —Å—Ç–∞–∂–∞' },
                        { level: 2, name: '–£—á–∞—Å—Ç–Ω–∏–∫', days: 7, icon: 'üåø', color: 'var(--success-color)', reward: '250 –º–æ–Ω–µ—Ç + –º–Ω–æ–∂–∏—Ç–µ–ª—å x0.1 –Ω–∞ 24—á' },
                        { level: 3, name: '–ê–∫—Ç–∏–≤–Ω—ã–π', days: 30, icon: 'üå≥', color: 'var(--primary-color)', reward: '500 –º–æ–Ω–µ—Ç + –±–æ–Ω—É—Å 5 PLEX' },
                        { level: 4, name: '–û–ø—ã—Ç–Ω—ã–π', days: 90, icon: 'üèÜ', color: 'var(--warning-color)', reward: '1000 –º–æ–Ω–µ—Ç + –º–Ω–æ–∂–∏—Ç–µ–ª—å x0.25 –Ω–∞ 48—á' },
                        { level: 5, name: '–í–µ—Ç–µ—Ä–∞–Ω', days: 180, icon: '‚≠ê', color: 'var(--secondary-color)', reward: '2500 –º–æ–Ω–µ—Ç + –±–æ–Ω—É—Å 50 PLEX' },
                        { level: 6, name: '–ú–∞—Å—Ç–µ—Ä', days: 365, icon: 'üíé', color: 'var(--accent-color)', reward: '5000 –º–æ–Ω–µ—Ç + –º–Ω–æ–∂–∏—Ç–µ–ª—å x0.5 –Ω–∞ 72—á' },
                        { level: 7, name: '–õ–µ–≥–µ–Ω–¥–∞', days: 730, icon: 'üëë', color: 'var(--gold-color)', reward: '$100 USDT + VIP —Å—Ç–∞—Ç—É—Å –Ω–∞–≤—Å–µ–≥–¥–∞' }
                    ].map(level => {
                        const isUnlocked = daysInSystem >= level.days;
                        const progress = isUnlocked ? 100 : (daysInSystem / level.days * 100);
                        
                        return `
                            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; border: 2px solid ${isUnlocked ? level.color : 'var(--border-color)'}; ${!isUnlocked ? 'opacity: 0.6;' : ''}">
                                <div style="display: flex; justify-content: space-between; align-items: start; margin-bottom: 1rem;">
                                    <div style="display: flex; align-items: center; gap: 1rem;">
                                        <span style="font-size: 2.5rem;">${level.icon}</span>
                                        <div>
                                            <h4 style="color: ${level.color}; margin-bottom: 0.3rem;">–£—Ä–æ–≤–µ–Ω—å ${level.level}: ${level.name}</h4>
                                            <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0;">
                                                –¢—Ä–µ–±—É–µ—Ç—Å—è: ${level.days} –¥–Ω–µ–π
                                            </p>
                                        </div>
                                    </div>
                                    ${isUnlocked ? `
                                        <span style="background: ${level.color}; color: var(--bg-primary); padding: 0.3rem 0.8rem; border-radius: 20px; font-size: 0.85rem; font-weight: 600;">
                                            ‚úì –î–æ—Å—Ç–∏–≥–Ω—É—Ç
                                        </span>
                                    ` : ''}
                                </div>
                                
                                <div style="margin-bottom: 1rem;">
                                    <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                                        <span style="color: var(--text-secondary); font-size: 0.85rem;">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                                        <span style="color: var(--text-secondary); font-size: 0.85rem;">${Math.min(progress, 100).toFixed(0)}%</span>
                                    </div>
                                    <div style="height: 8px; background: var(--bg-secondary); border-radius: 4px; overflow: hidden;">
                                        <div style="width: ${Math.min(progress, 100)}%; height: 100%; background: ${level.color}; transition: width 0.5s ease;"></div>
                                    </div>
                                </div>
                                
                                <div style="background: var(--bg-secondary); padding: 0.8rem; border-radius: 8px;">
                                    <span style="color: var(--text-secondary); font-size: 0.85rem;">–ù–∞–≥—Ä–∞–¥–∞:</span>
                                    <span style="color: var(--text-primary); font-size: 0.9rem; margin-left: 0.5rem;">${level.reward}</span>
                                </div>
                            </div>
                        `;
                    }).join('')}
                </div>
            </div>
            
            <!-- –ï–ñ–ï–î–ù–ï–í–ù–´–ï –ó–ê–î–ê–ù–ò–Ø -->
            <div class="stats-card">
                <h3 style="color: var(--warning-color); margin-bottom: 1.5rem;">üéØ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —Å—Ç–∞–∂–∞</h3>
                
                <div style="display: grid; gap: 1rem;">
                    ${[
                        { task: '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É', reward: '10 –º–æ–Ω–µ—Ç', completed: true, icon: '‚úÖ' },
                        { task: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã', reward: '15 –º–æ–Ω–µ—Ç', completed: false, icon: 'üìä' },
                        { task: '–ü–æ—Å–µ—Ç–∏—Ç—å —Ä–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏', reward: '20 –º–æ–Ω–µ—Ç', completed: false, icon: 'üìà' },
                        { task: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π', reward: '25 –º–æ–Ω–µ—Ç', completed: false, icon: 'üîó' },
                        { task: '–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è', reward: '–ë–æ–Ω—É—Å x2 –∫ –º–æ–Ω–µ—Ç–∞–º', completed: false, icon: 'üéÅ' }
                    ].map((task, index) => `
                        <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px; display: flex; justify-content: space-between; align-items: center; ${task.completed ? 'opacity: 0.7;' : ''}">
                            <div style="display: flex; align-items: center; gap: 1rem;">
                                <span style="font-size: 1.5rem;">${task.icon}</span>
                                <div>
                                    <h5 style="color: var(--text-primary); margin-bottom: 0.2rem;">${task.task}</h5>
                                    <span style="color: var(--text-secondary); font-size: 0.85rem;">–ù–∞–≥—Ä–∞–¥–∞: ${task.reward}</span>
                                </div>
                            </div>
                            ${task.completed ? `
                                <span style="color: var(--success-color); font-weight: 600;">‚úì –í—ã–ø–æ–ª–Ω–µ–Ω–æ</span>
                            ` : `
                                <button class="btn btn-outline" style="padding: 0.5rem 1rem; font-size: 0.9rem;" onclick="window.CabinetApp.completeDaily(${index})">
                                    –í—ã–ø–æ–ª–Ω–∏—Ç—å
                                </button>
                            `}
                        </div>
                    `).join('')}
                </div>
                
                <div style="margin-top: 1.5rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px; text-align: center;">
                    <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0;">
                        üí° –°–æ–≤–µ—Ç: –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–µ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!
                    </p>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:RANK_CONTENT - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–Ω–≥–∞
    getRankContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üèÖ –†–∞–Ω–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ GENESIS</h2>
                <p class="page-subtitle">–ü–æ–≤—ã—à–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏</p>
            </div>
            
            <!-- –¢–ï–ö–£–©–ò–ô –†–ê–ù–ì -->
            <div class="stats-card" style="margin-bottom: 2rem; background: linear-gradient(135deg, var(--bg-secondary), rgba(156, 39, 176, 0.1));">
                <div style="text-align: center; padding: 2rem;">
                    <div style="font-size: 5rem; margin-bottom: 1rem;">ü•â</div>
                    <h2 style="color: var(--primary-color); margin-bottom: 0.5rem; font-size: 2rem;">–ë—Ä–æ–Ω–∑–æ–≤—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä</h2>
                    <p style="color: var(--text-secondary); font-size: 1.1rem;">–†–∞–Ω–≥ 1 –∏–∑ 10</p>
                    
                    <div style="margin: 2rem 0;">
                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                            <span style="color: var(--text-secondary);">–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–Ω–≥–∞</span>
                            <span style="color: var(--primary-color); font-weight: 600;">15%</span>
                        </div>
                        <div style="height: 12px; background: var(--bg-primary); border-radius: 6px; overflow: hidden;">
                            <div style="width: 15%; height: 100%; background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));"></div>
                        </div>
                    </div>
                    
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem; margin-top: 2rem;">
                        <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.85rem;">–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç</div>
                            <div style="color: var(--primary-color); font-size: 1.5rem; font-weight: 700;">$0</div>
                        </div>
                        <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.85rem;">–ú–æ–Ω–µ—Ç—ã —Ä–∞–Ω–≥–∞</div>
                            <div style="color: var(--warning-color); font-size: 1.5rem; font-weight: 700;">0</div>
                        </div>
                        <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.85rem;">–ü–∞—Ä—Ç–Ω–µ—Ä–æ–≤</div>
                            <div style="color: var(--success-color); font-size: 1.5rem; font-weight: 700;">0</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ü–†–ò–í–ò–õ–ï–ì–ò–ò –¢–ï–ö–£–©–ï–ì–û –†–ê–ù–ì–ê -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üéÅ –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏</h3>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem;">
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; text-align: center;">
                        <span style="font-size: 2rem;">üí∞</span>
                        <h4 style="color: var(--text-primary); margin: 0.5rem 0;">–ë–∞–∑–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º</p>
                    </div>
                    
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; text-align: center;">
                        <span style="font-size: 2rem;">üìä</span>
                        <h4 style="color: var(--text-primary); margin: 0.5rem 0;">–õ–∏–º–∏—Ç –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ $1,000 –Ω–∞ –ø–ª–∞–Ω</p>
                    </div>
                    
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; text-align: center;">
                        <span style="font-size: 2rem;">üéØ</span>
                        <h4 style="color: var(--text-primary); margin: 0.5rem 0;">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">5% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</p>
                    </div>
                </div>
            </div>
            
            <!-- –í–°–ï –†–ê–ù–ì–ò -->
            <div class="stats-card">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üèÜ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤</h3>
                
                <div style="display: grid; gap: 1rem;">
                    ${[
                        { rank: 1, name: '–ë—Ä–æ–Ω–∑–æ–≤—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä', icon: 'ü•â', color: '#CD7F32', turnover: 0, partners: 0, bonus: '5%', limit: '$1,000' },
                        { rank: 2, name: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π —Ç—Ä–µ–π–¥–µ—Ä', icon: 'ü•à', color: '#C0C0C0', turnover: 5000, partners: 3, bonus: '7%', limit: '$2,500' },
                        { rank: 3, name: '–ó–æ–ª–æ—Ç–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä', icon: 'ü•á', color: '#FFD700', turnover: 15000, partners: 7, bonus: '10%', limit: '$5,000' },
                        { rank: 4, name: '–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π –ª–∏–¥–µ—Ä', icon: 'üíé', color: '#E5E5E5', turnover: 50000, partners: 15, bonus: '12%', limit: '$10,000' },
                        { rank: 5, name: '–†—É–±–∏–Ω–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', icon: '‚ô¶Ô∏è', color: '#E0115F', turnover: 100000, partners: 25, bonus: '15%', limit: '$25,000' },
                        { rank: 6, name: '–ò–∑—É–º—Ä—É–¥–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä', icon: '‚ô£Ô∏è', color: '#50C878', turnover: 250000, partners: 50, bonus: '17%', limit: '$50,000' },
                        { rank: 7, name: '–°–∞–ø—Ñ–∏—Ä–æ–≤—ã–π –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç', icon: 'üî∑', color: '#0F52BA', turnover: 500000, partners: 100, bonus: '20%', limit: '$100,000' },
                        { rank: 8, name: '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π –∞–º–±–∞—Å—Å–∞–¥–æ—Ä', icon: 'üí†', color: '#B9F2FF', turnover: 1000000, partners: 200, bonus: '25%', limit: '$250,000' },
                        { rank: 9, name: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫', icon: 'üëë', color: '#FFD700', turnover: 2500000, partners: 500, bonus: '30%', limit: '$500,000' },
                        { rank: 10, name: '–õ–µ–≥–µ–Ω–¥–∞ GENESIS', icon: 'üåü', color: '#FFD700', turnover: 5000000, partners: 1000, bonus: '50%', limit: '–ë–µ–∑ –ª–∏–º–∏—Ç–∞' }
                    ].map(r => {
                        const isAchieved = r.rank === 1;
                        const isCurrent = r.rank === 1;
                        
                        return `
                            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; border: 2px solid ${isCurrent ? 'var(--primary-color)' : (isAchieved ? 'var(--success-color)' : 'var(--border-color)')}; ${!isAchieved && !isCurrent ? 'opacity: 0.7;' : ''}">
                                <div style="display: flex; justify-content: space-between; align-items: start;">
                                    <div style="display: flex; gap: 1rem;">
