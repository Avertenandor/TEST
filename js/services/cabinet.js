/**
 * GENESIS 1.1 - –°–µ—Ä–≤–∏—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
 * MCP-MARKER:MODULE:CABINET_SERVICE - –°–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º
 */

window.GenesisCabinet = {
    // –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    currentPage: 'dashboard',
    
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userData: null,
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞
    async init() {
        console.log('üèõÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const userAddress = localStorage.getItem('genesis_user_address');
        if (!userAddress) {
            window.location.href = '/';
            return;
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.userData = { address: userAddress };
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
        this.initializeUI();
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.updateUserDisplay();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
        this.navigateTo('dashboard');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        this.startDataRefresh();
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('‚úÖ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', 'success');
        }
        
        console.log('‚úÖ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async loadUserData(address) {
        try {
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...', 'info');
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            this.userData = await window.GenesisAuth.getUserInfo(address);
            
            if (this.userData) {
                // –û–±–Ω–æ–≤–ª—è–µ–º UI —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                this.updateUserDisplay();
                
                if (window.GenesisTerminal) {
                    window.GenesisTerminal.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                }
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', 'error');
            }
        }
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
    initializeUI() {
        // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const page = link.getAttribute('data-page');
                if (page) {
                    this.navigateTo(page);
                }
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
        const logoutBtn = document.querySelector('[onclick="logout()"]');
        if (logoutBtn) {
            logoutBtn.onclick = () => this.logout();
        }
    },
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    navigateTo(page) {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
        document.querySelectorAll('.nav-link').forEach(link => {
            link.classList.remove('active');
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ —Ç–µ–∫—É—â–µ–π —Å—Å—ã–ª–∫–µ
        const activeLink = document.querySelector(`[data-page="${page}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
        
        this.currentPage = page;
        this.loadPageContent(page);
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üìÑ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${page}`, 'system');
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadPageContent(page) {
        const contentContainer = document.getElementById('page-content');
        if (!contentContainer) return;
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        let content = '';
        
        switch(page) {
            case 'dashboard':
                content = this.getDashboardContent();
                break;
            case 'portfolio':
                content = this.getPortfolioContent();
                break;
            case 'deposits':
                content = this.getDepositsContent();
                break;
            case 'transactions':
                content = this.getTransactionsContent();
                break;
            case 'analytics':
                content = this.getAnalyticsContent();
                break;
            case 'access':
                content = this.getAccessContent();
                break;
            case 'bonuses':
                content = this.getBonusesContent();
                break;
            case 'referrals':
                content = this.getReferralsContent();
                break;
            case 'settings':
                content = this.getSettingsContent();
                break;
            default:
                content = '<div class="empty-state"><h3>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3></div>';
        }
        
        contentContainer.innerHTML = content;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.initializePageComponents(page);
    },
    
    // –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü
    getDashboardContent() {
        const stats = this.calculateUserStats();
        
        return `
            <div class="page-header">
                <h2 class="page-title">üìä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
                <p class="page-subtitle">–û–±–∑–æ—Ä –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º–µ GENESIS 1.1</p>
            </div>
            
            <div class="stats-grid">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</span>
                        <span class="stats-icon">üí∞</span>
                    </div>
                    <div class="stats-value">$${stats.totalBalance.toFixed(2)}</div>
                    <div class="stats-change positive">USDT + PLEX</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã</span>
                        <span class="stats-icon">üìà</span>
                    </div>
                    <div class="stats-value">${stats.activeDeposits}</div>
                    <div class="stats-change">–∏–∑ ${stats.totalDeposits} –≤—Å–µ–≥–æ</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–û–±—â–∏–π –¥–æ—Ö–æ–¥</span>
                        <span class="stats-icon">üíé</span>
                    </div>
                    <div class="stats-value">$${stats.totalProfit.toFixed(2)}</div>
                    <div class="stats-change positive">+${stats.dailyProfit.toFixed(2)}/–¥–µ–Ω—å</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–î–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞</span>
                        <span class="stats-icon">üìÖ</span>
                    </div>
                    <div class="stats-value">${stats.accessDays}</div>
                    <div class="stats-change ${stats.accessDays > 0 ? 'positive' : 'negative'}">
                        ${stats.accessDays > 0 ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞'}
                    </div>
                </div>
            </div>
            
            ${this.getQuickActionsSection()}
            ${this.getRecentActivitySection()}
        `;
    },
    
    getDepositsContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üí∞ –î–µ–ø–æ–∑–∏—Ç—ã</h2>
                <p class="page-subtitle">–°–æ–∑–¥–∞–π—Ç–µ –¥–µ–ø–æ–∑–∏—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥</p>
            </div>
            
            <!-- –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–ê–Ø –ü–ê–ù–ï–õ–¨ -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –¥–µ–ø–æ–∑–∏—Ç—ã –≤ GENESIS 1.1</h3>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem;">
                    <div style="padding: 1rem; background: var(--bg-primary); border-radius: 8px; border-left: 4px solid var(--success-color);">
                        <h4 style="color: var(--success-color); margin-bottom: 0.5rem;">üìà –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–ü–æ–ª—É—á–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø—Ä–∏–±—ã–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫</p>
                    </div>
                    <div style="padding: 1rem; background: var(--bg-primary); border-radius: 8px; border-left: 4px solid var(--secondary-color);">
                        <h4 style="color: var(--secondary-color); margin-bottom: 0.5rem;">üîí –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–ü–æ–∫—É–ø–∞–π—Ç–µ –ø–ª–∞–Ω—ã –ø–æ –ø–æ—Ä—è–¥–∫—É –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É</p>
                    </div>
                    <div style="padding: 1rem; background: var(--bg-primary); border-radius: 8px; border-left: 4px solid var(--warning-color);">
                        <h4 style="color: var(--warning-color); margin-bottom: 0.5rem;">‚è±Ô∏è –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–ö–∞–∂–¥—ã–π –ø–ª–∞–Ω –∏–º–µ–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</p>
                    </div>
                    <div style="padding: 1rem; background: var(--bg-primary); border-radius: 8px; border-left: 4px solid var(--primary-color);">
                        <h4 style="color: var(--primary-color); margin-bottom: 0.5rem;">üíé –í–∞–ª—é—Ç—ã –æ–ø–ª–∞—Ç—ã</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –≤ USDT –∏–ª–∏ PLEX –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞–Ω–∞</p>
                    </div>
                </div>
            </div>
            
            <!-- –ü–†–û–ì–†–ï–°–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</h3>
                <div id="user-deposits-progress">
                    <div style="text-align: center; color: var(--text-secondary); padding: 2rem;">
                        <div class="loading-spinner" style="margin: 0 auto 1rem;"></div>
                        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...</p>
                    </div>
                </div>
            </div>
            
            <!-- –î–û–°–¢–£–ü–ù–´–ï –ü–õ–ê–ù–´ –î–ï–ü–û–ó–ò–¢–û–í -->
            <div class="stats-card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
                    <h3 style="color: var(--warning-color); margin: 0;">üèÜ –ü–ª–∞–Ω—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤ GENESIS 1.1</h3>
                    <div style="display: flex; gap: 1rem; align-items: center;">
                        <span style="background: rgba(255, 165, 0, 0.2); color: var(--warning-color); padding: 0.5rem 1rem; border-radius: 8px; font-size: 0.9rem;">
                            üí° –ù–∞—á–Ω–∏—Ç–µ —Å –ø–ª–∞–Ω–∞ TRIAL –∑–∞ $25
                        </span>
                    </div>
                </div>
                
                <div id="all-deposit-plans" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 1.5rem;">
                    ${this.renderAllDepositPlans()}
                </div>
            </div>
        `;
    },
    
    getPortfolioContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h2>
                <p class="page-subtitle">–ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏ –≤ GENESIS 1.1</p>
            </div>
            
            <!-- –ü–û–†–¢–§–ï–õ–¨–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê -->
            <div class="stats-grid" style="margin-bottom: 3rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è</span>
                        <span class="stats-icon">üí∞</span>
                    </div>
                    <div class="stats-value" id="portfolio-total-value">$0.00</div>
                    <div class="stats-change positive" id="portfolio-change">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                    <div style="margin-top: 1rem; font-size: 0.9rem; color: var(--text-secondary);">
                        <div id="portfolio-roi">üìä ROI: –í—ã—á–∏—Å–ª—è–µ—Ç—Å—è...</div>
                        <div id="portfolio-duration">‚è≥ –°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫: --</div>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã</span>
                        <span class="stats-icon">üìà</span>
                    </div>
                    <div class="stats-value" id="active-deposits-count">0</div>
                    <div class="stats-change" id="active-deposits-status">–ü—Ä–æ–≤–µ—Ä–∫–∞...</div>
                    <div style="margin-top: 1rem; font-size: 0.9rem; color: var(--text-secondary);" id="deposits-breakdown">
                        <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</div>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ</span>
                        <span class="stats-icon">üíé</span>
                    </div>
                    <div class="stats-value" id="total-earned">$0.00</div>
                    <div class="stats-change positive" id="daily-earnings">+$0.00 —Å–µ–≥–æ–¥–Ω—è</div>
                    <div style="margin-top: 1rem; font-size: 0.9rem; color: var(--text-secondary);">
                        <div id="earnings-daily">üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: $0.00</div>
                        <div id="earnings-trend">üìà –¢—Ä–µ–Ω–¥: --</div>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞–Ω</span>
                        <span class="stats-icon">üöÄ</span>
                    </div>
                    <div class="stats-value" id="next-available-plan">TRIAL</div>
                    <div class="stats-change neutral" id="next-plan-status">–î–æ—Å—Ç—É–ø–µ–Ω</div>
                    <div style="margin-top: 1rem; font-size: 0.9rem; color: var(--text-secondary);" id="next-plan-info">
                        <div>üí∞ –ú–∏–Ω–∏–º—É–º: $25</div>
                        <div>üìä –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 110%</div>
                    </div>
                </div>
            </div>
            
            <!-- –ê–ö–¢–ò–í–ù–´–ï –î–ï–ü–û–ó–ò–¢–´ -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3 style="color: var(--primary-color); margin: 0;">üíé –ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã</h3>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.showDepositModal()" style="font-size: 0.9rem;">
                        üìà –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
                    </button>
                </div>
                
                <div id="active-deposits-container">
                    <div class="empty-state">
                        <div class="empty-icon">üîÑ</div>
                        <h3>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤...</h3>
                        <p>–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</p>
                    </div>
                </div>
            </div>
            
            <!-- –ü–õ–ê–ù–´ –î–ï–ü–û–ó–ò–¢–û–í -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3 style="color: var(--secondary-color); margin: 0;">üìä –ü–ª–∞–Ω—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤ GENESIS 1.1</h3>
                    <div style="display: flex; gap: 1rem; align-items: center;">
                        <span style="background: rgba(0,212,255,0.2); color: var(--secondary-color); padding: 0.5rem 1rem; border-radius: 8px; font-size: 0.9rem;">
                            üíº –ê–¥—Ä–µ—Å —Å–∏—Å—Ç–µ–º—ã: ${window.GENESIS_CONFIG.addresses.system.substring(0, 20)}...
                        </span>
                    </div>
                </div>
                
                <div id="deposit-plans-grid">
                    <div class="empty-state">
                        <div class="empty-icon">‚öôÔ∏è</div>
                        <h3>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤...</h3>
                        <p>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤</p>
                    </div>
                </div>
            </div>
            
            <!-- –ò–°–¢–û–†–ò–Ø –î–û–•–û–î–ù–û–°–¢–ò -->
            <div class="stats-card">
                <h3 style="color: var(--warning-color); margin-bottom: 1.5rem; display: flex; align-items: center; gap: 0.5rem;">
                    <span>üìà</span> –ò—Å—Ç–æ—Ä–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏
                </h3>
                
                <div id="profitability-history">
                    <div style="text-align: center; color: var(--text-secondary); padding: 2rem;">
                        üìä –ò—Å—Ç–æ—Ä–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
                    </div>
                </div>
            </div>
        `;
    },
    
    getTransactionsContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üìã –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h2>
                <p class="page-subtitle">–í—Å–µ –≤–∞—à–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ GENESIS 1.1</p>
            </div>
            
            <!-- –§–ò–õ–¨–¢–†–´ –ò –ü–û–ò–°–ö -->
            <div class="stats-card" style="margin-bottom: 2rem;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3 style="color: var(--primary-color); margin: 0;">üîç –§–∏–ª—å—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
                    <div style="display: flex; gap: 1rem;">
                        <button class="btn-secondary" onclick="window.GenesisCabinet.exportTransactions('csv')" style="font-size: 0.9rem;">
                            üì• –≠–∫—Å–ø–æ—Ä—Ç CSV
                        </button>
                        <button class="btn-secondary" onclick="window.GenesisCabinet.refreshTransactions()" style="font-size: 0.9rem;">
                            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;">
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏:</label>
                        <select id="transaction-type-filter" style="width: 100%; padding: 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <option value="all">–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</option>
                            <option value="deposit">–î–µ–ø–æ–∑–∏—Ç—ã</option>
                            <option value="authorization">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</option>
                            <option value="subscription">–ü–æ–¥–ø–∏—Å–∫–∞</option>
                            <option value="withdrawal">–í—ã–≤–æ–¥—ã</option>
                        </select>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–í–∞–ª—é—Ç–∞:</label>
                        <select id="transaction-currency-filter" style="width: 100%; padding: 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <option value="all">–í—Å–µ –≤–∞–ª—é—Ç—ã</option>
                            <option value="USDT">USDT</option>
                            <option value="PLEX">PLEX</option>
                            <option value="BNB">BNB</option>
                        </select>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–ü–µ—Ä–∏–æ–¥:</label>
                        <select id="transaction-period-filter" style="width: 100%; padding: 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <option value="all">–í—Å–µ –≤—Ä–µ–º—è</option>
                            <option value="today">–°–µ–≥–æ–¥–Ω—è</option>
                            <option value="week">–ù–µ–¥–µ–ª—è</option>
                            <option value="month">–ú–µ—Å—è—Ü</option>
                            <option value="quarter">–ö–≤–∞—Ä—Ç–∞–ª</option>
                        </select>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–ü–æ–∏—Å–∫:</label>
                        <input type="text" id="transaction-search" placeholder="Hash –∏–ª–∏ —Å—É–º–º–∞..." style="width: 100%; padding: 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                    </div>
                </div>
                
                <button class="btn" onclick="window.GenesisCabinet.applyTransactionFilters()" style="font-size: 0.9rem;">
                    üîç –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </button>
            </div>
            
            <!-- –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–ô -->
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</span>
                        <span class="stats-icon">üìä</span>
                    </div>
                    <div class="stats-value" id="total-transactions-count">0</div>
                    <div class="stats-change" id="transactions-period-change">–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–û–±—â–∏–π –æ–±—ä–µ–º</span>
                        <span class="stats-icon">üí∞</span>
                    </div>
                    <div class="stats-value" id="total-transactions-volume">$0.00</div>
                    <div class="stats-change positive" id="volume-change">USDT + PLEX</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø–µ—Ä–∞—Ü–∏—è</span>
                        <span class="stats-icon">üïê</span>
                    </div>
                    <div class="stats-value" id="last-transaction-time">--</div>
                    <div class="stats-change" id="last-transaction-type">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–£—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π</span>
                        <span class="stats-icon">‚úÖ</span>
                    </div>
                    <div class="stats-value" id="successful-transactions">0</div>
                    <div class="stats-change positive" id="success-rate">0% —É—Å–ø–µ—à–Ω—ã—Ö</div>
                </div>
            </div>
            
            <!-- –¢–ê–ë–õ–ò–¶–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–ô -->
            <div class="stats-card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h3 style="color: var(--secondary-color); margin: 0;">üìã –°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
                    <div style="display: flex; gap: 0.5rem; align-items: center;">
                        <span style="color: var(--text-secondary); font-size: 0.9rem;">–ü–æ–∫–∞–∑–∞—Ç—å:</span>
                        <select id="transactions-per-page" style="padding: 0.3rem 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 4px; color: var(--text-primary); font-size: 0.8rem;">
                            <option value="10">10</option>
                            <option value="25" selected>25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
                
                <div id="transactions-table-container">
                    <div class="empty-state">
                        <div class="empty-icon">üîç</div>
                        <h3>–ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...</h3>
                        <p>–ò—â–µ–º –≤–∞—à–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</p>
                        <div style="margin-top: 1rem;">
                            <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px; color: var(--text-secondary); font-size: 0.9rem;">
                                üì° –ü–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É: <span style="color: var(--primary-color); font-family: monospace;">${this.userData?.address || '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- –ü–ê–ì–ò–ù–ê–¶–ò–Ø -->
                <div id="transactions-pagination" style="display: none; margin-top: 1.5rem; text-align: center;">
                    <div style="display: flex; justify-content: center; align-items: center; gap: 1rem;">
                        <button class="btn-outline" onclick="window.GenesisCabinet.previousTransactionsPage()" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                            ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                        </button>
                        <span id="pagination-info" style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 1</span>
                        <button class="btn-outline" onclick="window.GenesisCabinet.nextTransactionsPage()" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                            –°–ª–µ–¥—É—é—â–∞—è ‚Üí
                        </button>
                    </div>
                </div>
            </div>
        `;
    },
    
    getAnalyticsContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h2>
                <p class="page-subtitle">–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
            </div>
            
            <div class="stats-card">
                <h3>üìä –ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</h3>
                <div style="height: 300px; display: flex; align-items: center; justify-content: center; background: var(--bg-primary); border-radius: 10px;">
                    <p style="color: var(--text-secondary);">–ì—Ä–∞—Ñ–∏–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö</p>
                </div>
            </div>
            
            <div class="stats-grid">
                ${this.getAnalyticsCards()}
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:ACCESS_MANAGEMENT - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
    getAccessContent() {
        const accessDays = this.userData?.access?.accessDays || 0;
        const isActive = accessDays > 0;
        
        return `
            <div class="page-header">
                <h2 class="page-title">üí≥ –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h2>
                <p class="page-subtitle">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ GENESIS 1.1</p>
            </div>
            
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞</span>
                        <span class="stats-icon">${isActive ? '‚úÖ' : '‚ùå'}</span>
                    </div>
                    <div class="stats-value" style="color: ${isActive ? 'var(--success-color)' : 'var(--error-color)'}">
                        ${isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                    </div>
                    <div class="stats-change ${isActive ? 'positive' : 'negative'}">
                        ${isActive ? `–û—Å—Ç–∞–ª–æ—Å—å ${accessDays} –¥–Ω–µ–π` : '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞'}
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞</span>
                        <span class="stats-icon">üí∞</span>
                    </div>
                    <div class="stats-value">$1.00</div>
                    <div class="stats-change">–≤ –¥–µ–Ω—å (USDT)</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</span>
                        <span class="stats-icon">üìÖ</span>
                    </div>
                    <div class="stats-value">$10.00</div>
                    <div class="stats-change">–Ω–∞ 10 –¥–Ω–µ–π</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</span>
                        <span class="stats-icon">üìã</span>
                    </div>
                    <div class="stats-value" id="access-payments-count">0</div>
                    <div class="stats-change">—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</div>
                </div>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üîê –û —Å–∏—Å—Ç–µ–º–µ –¥–æ—Å—Ç—É–ø–∞</h3>
                <div style="line-height: 1.8; color: var(--text-secondary);">
                    <p style="margin-bottom: 1rem;">GENESIS 1.1 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–∏—Å–∞.</p>
                    <ul style="margin: 0; padding-left: 1.5rem;">
                        <li>‚úÖ <strong>–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞:</strong> $1 –≤ –¥–µ–Ω—å —á–µ—Ä–µ–∑ –±–ª–æ–∫—á–µ–π–Ω BSC</li>
                        <li>‚úÖ <strong>–ì–∏–±–∫–æ—Å—Ç—å:</strong> –ü–æ–ø–æ–ª–Ω—è–π—Ç–µ –Ω–∞ –ª—é–±–æ–π –ø–µ—Ä–∏–æ–¥ –æ—Ç 10 –¥–Ω–µ–π</li>
                        <li>‚úÖ <strong>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:</strong> –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –±–µ–∑ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è</li>
                        <li>‚úÖ <strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –≤–∏–¥–Ω—ã –≤ –±–ª–æ–∫—á–µ–π–Ω–µ</li>
                        <li>‚úÖ <strong>–ö–æ–Ω—Ç—Ä–æ–ª—å:</strong> –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</li>
                    </ul>
                </div>
            </div>
            
            <div class="stats-card">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üí≥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞</h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
                    <div>
                        <h4 style="color: var(--text-primary); margin-bottom: 1rem;">–ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:</h4>
                        <div style="display: flex; gap: 1rem; flex-wrap: wrap; margin-bottom: 1.5rem;">
                            <button class="btn-secondary" onclick="window.GenesisCabinet.topUpAccess(10)" style="flex: 1; min-width: 120px;">
                                üíµ $10<br><small>10 –¥–Ω–µ–π</small>
                            </button>
                            <button class="btn-secondary" onclick="window.GenesisCabinet.topUpAccess(30)" style="flex: 1; min-width: 120px;">
                                üíµ $30<br><small>30 –¥–Ω–µ–π</small>
                            </button>
                            <button class="btn-secondary" onclick="window.GenesisCabinet.topUpAccess(90)" style="flex: 1; min-width: 120px;">
                                üíµ $90<br><small>90 –¥–Ω–µ–π</small>
                            </button>
                        </div>
                        
                        <div>
                            <label style="color: var(--text-secondary); font-size: 0.9rem;">–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞ (–º–∏–Ω. $10):</label>
                            <div style="display: flex; gap: 0.5rem; margin-top: 0.5rem;">
                                <input type="number" id="custom-access-amount" min="10" step="1" value="10" 
                                       style="flex: 1; padding: 0.5rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                                <button class="btn" onclick="window.GenesisCabinet.topUpAccessCustom()">
                                    –ü–æ–ø–æ–ª–Ω–∏—Ç—å
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px;">
                        <h4 style="color: var(--warning-color); margin-bottom: 1rem;">‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                        <ul style="color: var(--text-secondary); font-size: 0.9rem; margin: 0; padding-left: 1.5rem; line-height: 1.6;">
                            <li>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <strong>$10 USDT</strong></li>
                            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ—Ç—å <strong>BSC (BEP-20)</strong></li>
                            <li>–ü–ª–∞—Ç–µ–∂ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                            <li>–ë–∞–ª–∞–Ω—Å –¥–Ω–µ–π –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ</li>
                            <li>–ü—Ä–∏ –Ω—É–ª–µ–≤–æ–º –±–∞–ª–∞–Ω—Å–µ –¥–æ—Å—Ç—É–ø –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è</li>
                        </ul>
                    </div>
                </div>
            </div>
            
            ${!isActive ? this.getAccessPaymentInstructions() : this.getAccessHistoryTable()}
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:BONUSES_MANAGEMENT - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏
    getBonusesContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">üéÅ –ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h2>
                <p class="page-subtitle">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –≤ GENESIS 1.1</p>
            </div>
            
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ë–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å</span>
                        <span class="stats-icon">üíé</span>
                    </div>
                    <div class="stats-value">0 PLEX</div>
                    <div class="stats-change positive">‚âà $0.00</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤</span>
                        <span class="stats-icon">üéØ</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">–∏–∑ 5 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ</span>
                        <span class="stats-icon">üìà</span>
                    </div>
                    <div class="stats-value">0 PLEX</div>
                    <div class="stats-change">–∑–∞ –≤—Å–µ –≤—Ä–µ–º—è</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ú–Ω–æ–∂–∏—Ç–µ–ª—å –±–æ–Ω—É—Å–æ–≤</span>
                        <span class="stats-icon">üöÄ</span>
                    </div>
                    <div class="stats-value">x1.0</div>
                    <div class="stats-change">–±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å</div>
                </div>
            </div>
            
            <div class="stats-card">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã</h3>
                
                <div style="display: grid; gap: 1rem;">
                    ${this.getBonusItems()}
                </div>
            </div>
            
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìä –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –±–æ–Ω—É—Å–æ–≤</h3>
                <div style="text-align: center; color: var(--text-secondary); padding: 2rem;">
                    <p>üöß –ù–æ–≤—ã–µ –±–æ–Ω—É—Å—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ –º–µ—Ä–µ —Ä–∞–∑–≤–∏—Ç–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</p>
                    <p style="margin-top: 1rem;">–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!</p>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:REFERRALS_MANAGEMENT - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏
    getReferralsContent() {
        const refLink = `https://genesis.app/ref/${this.userData?.address?.substring(2, 8) || 'xxxxx'}`;
        
        return `
            <div class="page-header">
                <h2 class="page-title">üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h2>
                <p class="page-subtitle">–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ</p>
            </div>
            
            <div class="stats-grid" style="margin-bottom: 2rem;">
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</span>
                        <span class="stats-icon">üë•</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</span>
                        <span class="stats-icon">‚úÖ</span>
                    </div>
                    <div class="stats-value">0</div>
                    <div class="stats-change">—Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</span>
                        <span class="stats-icon">üí∞</span>
                    </div>
                    <div class="stats-value">$0.00</div>
                    <div class="stats-change positive">–≤—Å–µ–≥–æ</div>
                </div>
                
                <div class="stats-card">
                    <div class="stats-header">
                        <span class="stats-title">–ü—Ä–æ—Ü–µ–Ω—Ç —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</span>
                        <span class="stats-icon">üìä</span>
                    </div>
                    <div class="stats-value">10%</div>
                    <div class="stats-change">–æ—Ç –∏—Ö –ø—Ä–∏–±—ã–ª–∏</div>
                </div>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</h3>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; margin-bottom: 1rem;">
                    <div style="display: flex; gap: 1rem; align-items: center;">
                        <input type="text" value="${refLink}" readonly 
                               style="flex: 1; padding: 0.8rem; background: var(--bg-secondary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary); font-family: monospace;">
                        <button class="btn" onclick="window.GenesisCabinet.copyRefLink('${refLink}')">
                            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                    <button class="btn-secondary" onclick="window.GenesisCabinet.shareRefLink('telegram')">
                        <span style="font-size: 1.2rem;">üì±</span> Telegram
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.shareRefLink('whatsapp')">
                        <span style="font-size: 1.2rem;">üí¨</span> WhatsApp
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.shareRefLink('twitter')">
                        <span style="font-size: 1.2rem;">üê¶</span> Twitter
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.generateRefQR()">
                        <span style="font-size: 1.2rem;">üì±</span> QR-–∫–æ–¥
                    </button>
                </div>
            </div>
            
            <div class="stats-card">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìä –£—Å–ª–æ–≤–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã</h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
                    <div>
                        <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üéÅ –í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h4>
                        <ul style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                            <li><strong>10%</strong> –æ—Ç –ø—Ä–∏–±—ã–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</li>
                            <li><strong>–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ</strong> –≤—ã–ø–ª–∞—Ç—ã</li>
                            <li><strong>–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ</strong> –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ</li>
                            <li><strong>–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</strong> –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É</li>
                            <li><strong>–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è</strong> —Å–∏—Å—Ç–µ–º–∞ (—Å–∫–æ—Ä–æ)</li>
                        </ul>
                    </div>
                    
                    <div>
                        <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üìà –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h4>
                        <ol style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                            <li>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π</li>
                            <li>–î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ</li>
                            <li>–î—Ä—É–≥ —Å–æ–∑–¥–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç</li>
                            <li>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç –µ–≥–æ –ø—Ä–∏–±—ã–ª–∏</li>
                            <li>–í—ã–ø–ª–∞—Ç—ã –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                        </ol>
                    </div>
                </div>
            </div>
            
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--warning-color); margin-bottom: 1.5rem;">üë• –°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</h3>
                <div class="empty-state">
                    <div class="empty-icon">üë•</div>
                    <h3>–†–µ—Ñ–µ—Ä–∞–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</h3>
                    <p>–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ!</p>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET:SETTINGS_MANAGEMENT - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    getSettingsContent() {
        return `
            <div class="page-header">
                <h2 class="page-title">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                <p class="page-subtitle">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞—à–µ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ GENESIS 1.1</p>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
                
                <div style="display: grid; gap: 1.5rem;">
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">BSC –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:</label>
                        <div style="display: flex; gap: 0.5rem;">
                            <input type="text" value="${this.userData?.address || ''}" readonly 
                                   style="flex: 1; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary); font-family: monospace; font-size: 0.9rem;">
                            <button class="btn-secondary" onclick="navigator.clipboard.writeText('${this.userData?.address || ''}'); this.innerHTML = '‚úÖ'">
                                üìã
                            </button>
                        </div>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</label>
                        <div style="display: flex; gap: 0.5rem;">
                            <input type="email" id="user-email" placeholder="your@email.com" 
                                   style="flex: 1; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <button class="btn" onclick="window.GenesisCabinet.saveEmail()">
                                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </button>
                        </div>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–ù–∏–∫–Ω–µ–π–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
                        <div style="display: flex; gap: 0.5rem;">
                            <input type="text" id="user-nickname" placeholder="CryptoKing" 
                                   style="flex: 1; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <button class="btn" onclick="window.GenesisCabinet.saveNickname()">
                                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
                
                <div style="display: grid; gap: 1rem;">
                    ${this.getNotificationSettings()}
                </div>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--warning-color); margin-bottom: 1.5rem;">üé® –í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h3>
                
                <div style="display: grid; gap: 1.5rem;">
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:</label>
                        <select id="theme-select" onchange="window.GenesisCabinet.changeTheme(this.value)" 
                                style="width: 100%; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <option value="dark">üåô –¢–µ–º–Ω–∞—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)</option>
                            <option value="light" disabled>‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è (—Å–∫–æ—Ä–æ)</option>
                            <option value="cyber" disabled>üéÆ –ö–∏–±–µ—Ä–ø–∞–Ω–∫ (—Å–∫–æ—Ä–æ)</option>
                        </select>
                    </div>
                    
                    <div>
                        <label style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; display: block;">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:</label>
                        <select id="language-select" onchange="window.GenesisCabinet.changeLanguage(this.value)" 
                                style="width: 100%; padding: 0.8rem; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary);">
                            <option value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
                            <option value="en" disabled>üá¨üáß English (soon)</option>
                            <option value="es" disabled>üá™üá∏ Espa√±ol (soon)</option>
                        </select>
                    </div>
                </div>
            </div>
            
            <div class="stats-card" style="margin-bottom: 2rem;">
                <h3 style="color: var(--error-color); margin-bottom: 1.5rem;">‚ö†Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                
                <div style="display: grid; gap: 1rem;">
                    <button class="btn-outline" onclick="window.GenesisCabinet.enableTwoFactor()" disabled>
                        üîê –í–∫–ª—é—á–∏—Ç—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (—Å–∫–æ—Ä–æ)
                    </button>
                    
                    <button class="btn-outline" onclick="window.GenesisCabinet.exportPrivateData()">
                        üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–∏ –¥–∞–Ω–Ω—ã–µ
                    </button>
                    
                    <button class="btn-outline" style="color: var(--error-color); border-color: var(--error-color);" 
                            onclick="if(confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!')) window.GenesisCabinet.clearAllData()">
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                    </button>
                </div>
            </div>
            
            <div class="stats-card">
                <h3 style="color: var(--text-primary); margin-bottom: 1.5rem;">‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ</h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; color: var(--text-secondary); font-size: 0.9rem;">
                    <div>
                        <strong>–í–µ—Ä—Å–∏—è:</strong> GENESIS 1.1.0
                    </div>
                    <div>
                        <strong>–°–±–æ—Ä–∫–∞:</strong> ${new Date().toISOString().split('T')[0]}
                    </div>
                    <div>
                        <strong>–°–µ—Ç—å:</strong> BSC Mainnet
                    </div>
                    <div>
                        <strong>–°—Ç–∞—Ç—É—Å:</strong> <span style="color: var(--success-color);">‚úÖ –ê–∫—Ç–∏–≤–Ω–∞</span>
                    </div>
                </div>
                
                <div style="margin-top: 1.5rem; padding-top: 1.5rem; border-top: 1px solid var(--border-color); text-align: center;">
                    <p style="color: var(--text-secondary); font-size: 0.8rem;">
                        ¬© 2025 GENESIS 1.1 - DeFi Platform<br>
                        –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
                    </p>
                </div>
            </div>
        `;
    },
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    calculateUserStats() {
        const deposits = window.GenesisTransaction.getActiveDeposits();
        const totalProfit = window.GenesisTransaction.calculateTotalProfit(deposits);
        
        let totalBalance = 0;
        let dailyProfit = 0;
        let activeDeposits = 0;
        
        deposits.forEach(deposit => {
            if (deposit.status === 'success') {
                totalBalance += deposit.data.amount;
                dailyProfit += deposit.data.dailyProfit;
                activeDeposits++;
            }
        });
        
        return {
            totalBalance: totalBalance,
            activeDeposits: activeDeposits,
            totalDeposits: deposits.length,
            totalProfit: totalProfit,
            dailyProfit: dailyProfit,
            accessDays: this.userData?.access?.accessDays || 0
        };
    },
    
    updateUserDisplay() {
        const addressDisplay = document.getElementById('user-address-display');
        if (addressDisplay && this.userData) {
            addressDisplay.textContent = window.GenesisUtils.formatAddress(this.userData.address);
        }
    },
    
    renderDepositsTable(deposits) {
        return `
            <table style="width: 100%; border-collapse: collapse;">
                <thead>
                    <tr style="border-bottom: 1px solid var(--border-color);">
                        <th style="padding: 12px; text-align: left;">–ü–ª–∞–Ω</th>
                        <th style="padding: 12px; text-align: right;">–°—É–º–º–∞</th>
                        <th style="padding: 12px; text-align: right;">–î–æ—Ö–æ–¥/–¥–µ–Ω—å</th>
                        <th style="padding: 12px; text-align: right;">–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π</th>
                        <th style="padding: 12px; text-align: right;">–°—Ç–∞—Ç—É—Å</th>
                    </tr>
                </thead>
                <tbody>
                    ${deposits.map(d => `
                        <tr style="border-bottom: 1px solid var(--bg-primary);">
                            <td style="padding: 12px;">${d.data.planName}</td>
                            <td style="padding: 12px; text-align: right;">$${d.data.amount}</td>
                            <td style="padding: 12px; text-align: right; color: var(--success-color);">+$${d.data.dailyProfit.toFixed(2)}</td>
                            <td style="padding: 12px; text-align: right;">${this.calculateDaysLeft(d.data.expiresAt)}</td>
                            <td style="padding: 12px; text-align: right;">
                                <span style="color: var(--success-color);">–ê–∫—Ç–∏–≤–µ–Ω</span>
                            </td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
        `;
    },
    
    calculateDaysLeft(expiresAt) {
        const now = new Date();
        const expires = new Date(expiresAt);
        const daysLeft = Math.ceil((expires - now) / (24 * 60 * 60 * 1000));
        return Math.max(0, daysLeft);
    },
    
    getEmptyDepositsMessage() {
        return `
            <div class="empty-state">
                <div class="empty-icon">üíº</div>
                <h3>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h3>
                <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏</p>
                <button class="btn" onclick="window.GenesisCabinet.showDepositModal()">
                    –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç
                </button>
            </div>
        `;
    },
    
    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    startDataRefresh() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(() => {
            if (this.userData) {
                this.loadUserData(this.userData.address);
            }
        }, 30000);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞
        this.updateAccessStatusIndicator();
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞
    async updateAccessStatusIndicator() {
        const indicator = document.getElementById('access-status-indicator');
        if (!indicator || !this.userData?.address) return;
        
        try {
            const accessData = await window.GenesisPlatformAccess.checkUserAccessBalance(this.userData.address);
            
            const iconEl = document.getElementById('access-status-icon');
            const textEl = document.getElementById('access-status-text');
            const daysEl = document.getElementById('access-days-count');
            
            indicator.classList.remove('hidden');
            
            if (accessData.isActive) {
                iconEl.textContent = '‚úÖ';
                textEl.textContent = '–ê–∫—Ç–∏–≤–µ–Ω';
                daysEl.textContent = `(${accessData.daysRemaining} –¥–Ω–µ–π)`;
                indicator.style.color = 'var(--success-color)';
            } else {
                iconEl.textContent = '‚ùå';
                textEl.textContent = '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
                daysEl.textContent = '';
                indicator.style.color = 'var(--error-color)';
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞:', error);
        }
    },
    
    // MCP-MARKER:METHOD:CABINET:DEPOSITS_MANAGEMENT - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    showDepositModal() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        if (window.CabinetDepositService && window.CabinetDepositService.showCreateDepositModal) {
            window.CabinetDepositService.showCreateDepositModal();
        } else {
            // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É
            this.createDepositModal();
            const modal = document.getElementById('deposit-modal');
            if (modal) {
                modal.classList.remove('hidden');
                this.loadDepositPlans();
            }
        }
    },
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    createDepositModal() {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingModal = document.getElementById('deposit-modal');
        if (existingModal) {
            existingModal.remove();
        }
        
        const modalHTML = `
            <div id="deposit-modal" class="modal-overlay hidden">
                <div class="modal-container">
                    <div class="modal-header">
                        <h3>üí∞ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞</h3>
                        <button class="modal-close" onclick="window.GenesisCabinet.closeDepositModal()">&times;</button>
                    </div>
                    
                    <div class="modal-content">
                        <div class="deposit-steps">
                            <div class="step active" data-step="1">
                                <span class="step-number">1</span>
                                <span class="step-title">–í—ã–±–æ—Ä –ø–ª–∞–Ω–∞</span>
                            </div>
                            <div class="step" data-step="2">
                                <span class="step-number">2</span>
                                <span class="step-title">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã</span>
                            </div>
                            <div class="step" data-step="3">
                                <span class="step-number">3</span>
                                <span class="step-title">–û–ø–ª–∞—Ç–∞</span>
                            </div>
                        </div>
                        
                        <div id="deposit-step-content">
                            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–æ–≤ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                        </div>
                    </div>
                </div>
            </div>
            
            <style>
                .modal-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0, 0, 0, 0.8);
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    z-index: 1000;
                }
                
                .modal-container {
                    background: var(--bg-secondary);
                    border-radius: 15px;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
                    border: 1px solid var(--border-color);
                    width: 90%;
                    max-width: 800px;
                    max-height: 90vh;
                    overflow-y: auto;
                }
                
                .modal-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 1.5rem 2rem;
                    border-bottom: 1px solid var(--border-color);
                }
                
                .modal-header h3 {
                    color: var(--primary-color);
                    margin: 0;
                    font-family: 'Orbitron', monospace;
                }
                
                .modal-close {
                    background: none;
                    border: none;
                    color: var(--text-secondary);
                    font-size: 2rem;
                    cursor: pointer;
                    line-height: 1;
                    padding: 0;
                    width: 30px;
                    height: 30px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                
                .modal-close:hover {
                    color: var(--primary-color);
                }
                
                .modal-content {
                    padding: 2rem;
                }
                
                .deposit-steps {
                    display: flex;
                    justify-content: center;
                    margin-bottom: 2rem;
                    gap: 2rem;
                }
                
                .step {
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                    padding: 0.5rem 1rem;
                    border-radius: 8px;
                    background: var(--bg-primary);
                    border: 1px solid var(--border-color);
                    opacity: 0.5;
                }
                
                .step.active {
                    opacity: 1;
                    background: var(--primary-color);
                    color: white;
                }
                
                .step-number {
                    background: rgba(255, 255, 255, 0.2);
                    width: 24px;
                    height: 24px;
                    border-radius: 50%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 0.8rem;
                    font-weight: bold;
                }
                
                .step-title {
                    font-size: 0.9rem;
                    font-weight: 500;
                }
                
                .deposit-plan-card {
                    border: 2px solid var(--border-color);
                    border-radius: 12px;
                    padding: 1.5rem;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    margin-bottom: 1rem;
                }
                
                .deposit-plan-card:hover {
                    border-color: var(--primary-color);
                    background: rgba(255, 107, 53, 0.05);
                }
                
                .deposit-plan-card.selected {
                    border-color: var(--primary-color);
                    background: rgba(255, 107, 53, 0.1);
                }
                
                .deposit-plan-card.locked {
                    opacity: 0.5;
                    cursor: not-allowed;
                }
                
                .deposit-plan-card.locked:hover {
                    border-color: var(--border-color);
                    background: transparent;
                }
            </style>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
    },
    
    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    closeDepositModal() {
        const modal = document.getElementById('deposit-modal');
        if (modal) {
            modal.classList.add('hidden');
            setTimeout(() => modal.remove(), 300);
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    loadDepositPlans() {
        const stepContent = document.getElementById('deposit-step-content');
        if (!stepContent) return;
        
        const plans = window.GENESIS_CONFIG.depositPlans;
        
        stepContent.innerHTML = `
            <h4 style="color: var(--text-primary); margin-bottom: 1.5rem;">–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞:</h4>
            <div class="deposit-plans-list">
                ${plans.map((plan, index) => {
                    const isLocked = index > 0; // –ü–µ—Ä–≤—ã–π –ø–ª–∞–Ω –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
                    const lockIcon = isLocked ? 'üîí' : 'üöÄ';
                    const lockClass = isLocked ? 'locked' : '';
                    
                    return `
                        <div class="deposit-plan-card ${lockClass}" 
                             onclick="${!isLocked ? `window.GenesisCabinet.selectPlan('${plan.id}')` : 'void(0)'}">
                            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                                <div>
                                    <h4 style="color: var(--primary-color); margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                                        <span>${lockIcon}</span>
                                        ${plan.name}
                                    </h4>
                                    <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">
                                        ${plan.description}
                                    </p>
                                    ${isLocked ? '<div style="color: var(--warning-color); font-size: 0.8rem;">üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–ª–∞–Ω</div>' : ''}
                                </div>
                                <div style="text-align: right;">
                                    <div style="font-size: 1.2rem; font-weight: 700; color: var(--text-primary);">
                                        ${plan.usdtAmount.toLocaleString()}
                                    </div>
                                    <div style="color: var(--success-color); font-size: 0.9rem;">
                                        ${plan.percentage}% (${plan.days} –¥–Ω–µ–π)
                                    </div>
                                </div>
                            </div>
                            
                            <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 1rem; font-size: 0.8rem;">
                                <div style="text-align: center; padding: 0.5rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary);">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                                    <div style="color: var(--text-primary); font-weight: 600;">${plan.usdtAmount}</div>
                                </div>
                                <div style="text-align: center; padding: 0.5rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary);">–ü—Ä–∏–±—ã–ª—å</div>
                                    <div style="color: var(--success-color); font-weight: 600;">${((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount).toFixed(2)}</div>
                                </div>
                                <div style="text-align: center; padding: 0.5rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary);">–í –¥–µ–Ω—å</div>
                                    <div style="color: var(--primary-color); font-weight: 600;">${(((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount) / plan.days).toFixed(2)}</div>
                                </div>
                            </div>
                        </div>
                    `;
                }).join('')}
            </div>
        `;
    },
    
    // –í—ã–±–æ—Ä –ø–ª–∞–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    selectPlan(planId) {
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        if (!plan) return;
        
        // –ü–æ–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–ª–∞–Ω
        document.querySelectorAll('.deposit-plan-card').forEach(card => {
            card.classList.remove('selected');
        });
        
        const selectedCard = document.querySelector(`[onclick*="${planId}"]`);
        if (selectedCard) {
            selectedCard.classList.add('selected');
        }
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        setTimeout(() => {
            this.showDepositStep2(plan);
        }, 500);
    },
    
    // –®–∞–≥ 2: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–æ–∑–∏—Ç–∞
    showDepositStep2(plan) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∞–≥–æ–≤
        document.querySelectorAll('.step').forEach(step => step.classList.remove('active'));
        document.querySelector('[data-step="2"]').classList.add('active');
        
        const stepContent = document.getElementById('deposit-step-content');
        stepContent.innerHTML = `
            <h4 style="color: var(--text-primary); margin-bottom: 1.5rem;">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}</h4>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem;">
                <div class="stats-card" style="margin: 0;">
                    <h5 style="color: var(--primary-color); margin-bottom: 1rem;">üìä –î–µ—Ç–∞–ª–∏ –ø–ª–∞–Ω–∞</h5>
                    <div style="display: flex; flex-direction: column; gap: 0.8rem;">
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</span>
                            <span style="color: var(--text-primary); font-weight: 600;">${plan.usdtAmount}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</span>
                            <span style="color: var(--success-color); font-weight: 600;">${plan.percentage}%</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–°—Ä–æ–∫:</span>
                            <span style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–ü—Ä–∏–±—ã–ª—å:</span>
                            <span style="color: var(--primary-color); font-weight: 600;">${((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount).toFixed(2)}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between;">
                            <span style="color: var(--text-secondary);">–í –¥–µ–Ω—å:</span>
                            <span style="color: var(--secondary-color); font-weight: 600;">${(((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount) / plan.days).toFixed(2)}</span>
                        </div>
                    </div>
                </div>
                
                <div class="stats-card" style="margin: 0;">
                    <h5 style="color: var(--secondary-color); margin-bottom: 1rem;">üí≥ –í–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã</h5>
                    <div style="display: flex; flex-direction: column; gap: 1rem;">
                        ${plan.currencies.map(currency => `
                            <label style="display: flex; align-items: center; gap: 0.5rem; padding: 0.8rem; background: var(--bg-primary); border-radius: 8px; cursor: pointer; border: 2px solid transparent;" onclick="this.style.border='2px solid var(--primary-color)'; document.querySelectorAll('label').forEach(l => l !== this && (l.style.border='2px solid transparent'));">
                                <input type="radio" name="currency" value="${currency}" style="margin-right: 0.5rem;">
                                <div>
                                    <div style="color: var(--text-primary); font-weight: 600;">${currency}</div>
                                    <div style="color: var(--text-secondary); font-size: 0.8rem;">
                                        ${currency === 'USDT' ? `${plan.usdtAmount} USDT` : `${plan.plexAmount.toLocaleString()} PLEX`}
                                    </div>
                                </div>
                            </label>
                        `).join('')}
                    </div>
                </div>
            </div>
            
            <div style="display: flex; gap: 1rem; justify-content: space-between;">
                <button class="btn-outline" onclick="window.GenesisCabinet.loadDepositPlans()">
                    ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–ª–∞–Ω–∞–º
                </button>
                <button class="btn" onclick="window.GenesisCabinet.showDepositStep3('${plan.id}')">
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫ –æ–ø–ª–∞—Ç–µ ‚Üí
                </button>
            </div>
        `;
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≤–∞–ª—é—Ç—É
        setTimeout(() => {
            const firstCurrency = stepContent.querySelector('input[name="currency"]');
            if (firstCurrency) {
                firstCurrency.checked = true;
                firstCurrency.closest('label').style.border = '2px solid var(--primary-color)';
            }
        }, 100);
    },
    
    // –®–∞–≥ 3: –û–ø–ª–∞—Ç–∞
    showDepositStep3(planId) {
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        const selectedCurrency = document.querySelector('input[name="currency"]:checked')?.value;
        
        if (!plan || !selectedCurrency) {
            alert('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã');
            return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∞–≥–æ–≤
        document.querySelectorAll('.step').forEach(step => step.classList.remove('active'));
        document.querySelector('[data-step="3"]').classList.add('active');
        
        const amount = selectedCurrency === 'USDT' ? plan.usdtAmount : plan.plexAmount;
        const tokenAddress = selectedCurrency === 'USDT' ? window.GENESIS_CONFIG.usdt.address : window.GENESIS_CONFIG.plex.address;
        const systemAddress = window.GENESIS_CONFIG.addresses.system;
        
        const stepContent = document.getElementById('deposit-step-content');
        stepContent.innerHTML = `
            <h4 style="color: var(--text-primary); margin-bottom: 1.5rem;">üí≥ –û–ø–ª–∞—Ç–∞ –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}</h4>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem;">
                <div class="stats-card" style="margin: 0;">
                    <h5 style="color: var(--primary-color); margin-bottom: 1rem;">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ</h5>
                    <div style="color: var(--text-secondary); line-height: 1.6; font-size: 0.9rem;">
                        <p style="margin-bottom: 1rem;">1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <strong style="color: var(--success-color);">${amount} ${selectedCurrency}</strong> –Ω–∞ –∞–¥—Ä–µ—Å —Å–∏—Å—Ç–µ–º—ã</p>
                        <p style="margin-bottom: 1rem;">2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ç—å <strong style="color: var(--warning-color);">BSC (BEP-20)</strong></p>
                        <p style="margin-bottom: 1rem;">3. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ (1-3 –º–∏–Ω—É—Ç—ã)</p>
                        <p style="margin-bottom: 1rem;">4. –î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</p>
                        
                        <div style="background: var(--bg-primary); padding: 1rem; border-radius: 8px; margin-top: 1rem; border-left: 4px solid var(--warning-color);">
                            <strong style="color: var(--warning-color);">‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong><br>
                            –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É —á–µ—Ä–µ–∑ BSC —Å–µ—Ç—å. –î–µ–ø–æ–∑–∏—Ç—ã —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ —Å–µ—Ç–∏ –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è!
                        </div>
                    </div>
                </div>
                
                <div class="stats-card" style="margin: 0;">
                    <h5 style="color: var(--secondary-color); margin-bottom: 1rem;">üí∞ –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞</h5>
                    
                    <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; margin-bottom: 1rem;">
                        <div style="text-align: center; margin-bottom: 1rem;">
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</div>
                            <div style="color: var(--primary-color); font-size: 2rem; font-weight: bold; font-family: 'Orbitron', monospace;">
                                ${amount.toLocaleString()} ${selectedCurrency}
                            </div>
                        </div>
                        
                        <div style="margin-bottom: 1rem;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.5rem;">–ê–¥—Ä–µ—Å —Å–∏—Å—Ç–µ–º—ã:</div>
                            <div style="background: var(--bg-secondary); padding: 0.8rem; border-radius: 6px; font-family: monospace; font-size: 0.9rem; word-break: break-all; color: var(--success-color);">
                                ${systemAddress}
                            </div>
                            <button class="btn-secondary" onclick="navigator.clipboard.writeText('${systemAddress}'); this.innerHTML = '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!'" style="width: 100%; margin-top: 0.5rem; font-size: 0.8rem;">
                                üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å
                            </button>
                        </div>
                        
                        <div style="margin-bottom: 1rem;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.5rem;">–ö–æ–Ω—Ç—Ä–∞–∫—Ç —Ç–æ–∫–µ–Ω–∞:</div>
                            <div style="background: var(--bg-secondary); padding: 0.8rem; border-radius: 6px; font-family: monospace; font-size: 0.8rem; word-break: break-all; color: var(--secondary-color);">
                                ${tokenAddress}
                            </div>
                        </div>
                    </div>
                    
                    <!-- QR –∫–æ–¥ –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                    <div style="text-align: center; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); margin-bottom: 0.5rem;">QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã:</div>
                        <div style="color: var(--warning-color); font-size: 0.9rem;">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞...</div>
                    </div>
                </div>
            </div>
            
            <div style="display: flex; gap: 1rem; justify-content: space-between;">
                <button class="btn-outline" onclick="window.GenesisCabinet.showDepositStep2(${JSON.stringify(plan).replace(/"/g, '&quot;')})">
                    ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
                </button>
                <button class="btn" onclick="window.GenesisCabinet.startDepositMonitoring('${planId}', '${selectedCurrency}', ${amount})" style="background: var(--success-color);">
                    ‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª –ø–ª–∞—Ç–µ–∂
                </button>
            </div>
            
            <div style="text-align: center; margin-top: 2rem; padding: 1rem; background: rgba(0, 212, 255, 0.1); border-radius: 8px; border: 1px solid var(--secondary-color);">
                <div style="color: var(--secondary-color); font-weight: 600; margin-bottom: 0.5rem;">üïê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ</div>
                <div style="color: var(--text-secondary); font-size: 0.9rem;">–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à –ø–ª–∞—Ç–µ–∂ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –¥–µ–ø–æ–∑–∏—Ç</div>
            </div>
        `;
    },
    
    // –ù–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–æ–∑–∏—Ç–∞
    startDepositMonitoring(planId, currency, amount) {
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üîç –ù–∞—á–∞—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–æ–∑–∏—Ç–∞ ${plan.name} (${amount} ${currency})`, 'info');
        }
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –¥–µ–ø–æ–∑–∏—Ç–µ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏
        const depositData = {
            planId: planId,
            planName: plan.name,
            currency: currency,
            amount: amount,
            status: 'pending',
            createdAt: new Date().toISOString(),
            userAddress: this.userData?.address || localStorage.getItem('genesis_user_address')
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        const pendingDeposits = JSON.parse(localStorage.getItem('genesis_pending_deposits') || '[]');
        pendingDeposits.push(depositData);
        localStorage.setItem('genesis_pending_deposits', JSON.stringify(pendingDeposits));
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.closeDepositModal();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('üïê –î–µ–ø–æ–∑–∏—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ', '–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC', 'info');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–µ–ø–æ–∑–∏—Ç–∞
        this.checkDepositStatus(depositData);
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    async checkDepositStatus(depositData) {
        try {
            if (window.GenesisAPI && window.GenesisAPI.checkTransaction) {
                const result = await window.GenesisAPI.checkTransaction(
                    depositData.userAddress,
                    window.GENESIS_CONFIG.addresses.system,
                    depositData.amount,
                    depositData.currency
                );
                
                if (result.found) {
                    this.activateDeposit(depositData, result.transaction);
                } else {
                    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
                    setTimeout(() => this.checkDepositStatus(depositData), 30000);
                }
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞:', error);
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞: ${error.message}`, 'error');
            }
        }
    },
    
    // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    activateDeposit(depositData, transaction) {
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`‚úÖ –î–µ–ø–æ–∑–∏—Ç ${depositData.planName} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`, 'success');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–µ–ø–æ–∑–∏—Ç–∞
        depositData.status = 'active';
        depositData.transactionHash = transaction.hash;
        depositData.activatedAt = new Date().toISOString();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç
        const activeDeposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
        activeDeposits.push(depositData);
        localStorage.setItem('genesis_active_deposits', JSON.stringify(activeDeposits));
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
        const pendingDeposits = JSON.parse(localStorage.getItem('genesis_pending_deposits') || '[]');
        const updatedPending = pendingDeposits.filter(d => d.createdAt !== depositData.createdAt);
        localStorage.setItem('genesis_pending_deposits', JSON.stringify(updatedPending));
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('üéâ –î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!', `–î–µ–ø–æ–∑–∏—Ç ${depositData.planName} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`, 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if (this.currentPage === 'portfolio') {
            this.loadPageContent('portfolio');
        }
    },
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(title, message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.innerHTML = `
            <div class="notification-content">
                <h4>${title}</h4>
                <p>${message}</p>
            </div>
            <button class="notification-close" onclick="this.parentElement.remove()">&times;</button>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if (!document.getElementById('notification-styles')) {
            const styles = document.createElement('style');
            styles.id = 'notification-styles';
            styles.textContent = `
                .notification {
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: var(--bg-secondary);
                    border: 1px solid var(--border-color);
                    border-radius: 8px;
                    padding: 1rem;
                    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
                    z-index: 1001;
                    max-width: 350px;
                    animation: slideIn 0.3s ease;
                }
                
                .notification-content h4 {
                    margin: 0 0 0.5rem 0;
                    color: var(--primary-color);
                    font-size: 1rem;
                }
                
                .notification-content p {
                    margin: 0;
                    color: var(--text-secondary);
                    font-size: 0.9rem;
                    line-height: 1.4;
                }
                
                .notification-close {
                    position: absolute;
                    top: 8px;
                    right: 8px;
                    background: none;
                    border: none;
                    color: var(--text-secondary);
                    cursor: pointer;
                    font-size: 1.2rem;
                    line-height: 1;
                    padding: 0;
                    width: 20px;
                    height: 20px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                
                .notification-close:hover {
                    color: var(--primary-color);
                }
                
                @keyframes slideIn {
                    from {
                        transform: translateX(100%);
                        opacity: 0;
                    }
                    to {
                        transform: translateX(0);
                        opacity: 1;
                    }
                }
            `;
            document.head.appendChild(styles);
        }
        
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 5000);
    },
    
    // MCP-MARKER:METHOD:CABINET:DEPOSITS_DATA_LOAD - –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async loadUserDeposits() {
        const userAddress = this.userData?.address || localStorage.getItem('genesis_user_address');
        if (!userAddress) return;
        
        try {
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log('üîç –ü–æ–∏—Å–∫ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ BSC...', 'info');
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∏–∑ localStorage –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
            const localDeposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –¥–µ–ø–æ–∑–∏—Ç –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
            const verifiedDeposits = [];
            for (const deposit of localDeposits) {
                if (await this.verifyDepositInBlockchain(deposit)) {
                    verifiedDeposits.push(deposit);
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            this.updatePortfolioStats(verifiedDeposits);
            this.displayActiveDeposits(verifiedDeposits);
            
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${verifiedDeposits.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤`, 'success');
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', error);
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${error.message}`, 'error');
            }
        }
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
    async verifyDepositInBlockchain(deposit) {
        try {
            if (window.GenesisAPI && window.GenesisAPI.verifyTransaction) {
                return await window.GenesisAPI.verifyTransaction(deposit.transactionHash);
            }
            return true; // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Å—á–∏—Ç–∞–µ–º –¥–µ–ø–æ–∑–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–º
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ:', error);
            return false;
        }
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
    updatePortfolioStats(deposits) {
        let totalValue = 0;
        let totalEarned = 0;
        let dailyEarnings = 0;
        
        deposits.forEach(deposit => {
            totalValue += deposit.amount;
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ –¥–Ω—è–º
            const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === deposit.planId);
            if (plan) {
                const totalProfit = (deposit.amount * plan.percentage / 100) - deposit.amount;
                const dailyProfit = totalProfit / plan.days;
                
                // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                const activatedDate = new Date(deposit.activatedAt || deposit.createdAt);
                const daysPassed = Math.floor((Date.now() - activatedDate.getTime()) / (1000 * 60 * 60 * 24));
                
                totalEarned += Math.min(totalProfit, dailyProfit * daysPassed);
                dailyEarnings += dailyProfit;
            }
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const portfolioValue = document.getElementById('portfolio-total-value');
        const portfolioChange = document.getElementById('portfolio-change');
        const portfolioROI = document.getElementById('portfolio-roi');
        const activeDepositsCount = document.getElementById('active-deposits-count');
        const activeDepositsStatus = document.getElementById('active-deposits-status');
        const totalEarnedEl = document.getElementById('total-earned');
        const dailyEarningsEl = document.getElementById('daily-earnings');
        
        if (portfolioValue) portfolioValue.textContent = `${totalValue.toFixed(2)}`;
        if (portfolioChange) portfolioChange.textContent = `+${totalEarned.toFixed(2)} –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ`;
        if (portfolioROI) portfolioROI.textContent = `üìä ROI: +${totalValue > 0 ? ((totalEarned / totalValue) * 100).toFixed(1) : 0}%`;
        if (activeDepositsCount) activeDepositsCount.textContent = deposits.length;
        if (activeDepositsStatus) activeDepositsStatus.textContent = deposits.length > 0 ? '–ê–∫—Ç–∏–≤–Ω—ã' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç';
        if (totalEarnedEl) totalEarnedEl.textContent = `${totalEarned.toFixed(2)}`;
        if (dailyEarningsEl) dailyEarningsEl.textContent = `+${dailyEarnings.toFixed(2)} —Å–µ–≥–æ–¥–Ω—è`;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–º –ø–ª–∞–Ω–µ
        this.updateNextAvailablePlan(deposits);
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ª–µ–¥—É—é—â–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–º –ø–ª–∞–Ω–µ
    updateNextAvailablePlan(deposits) {
        const completedPlans = deposits.map(d => d.planId);
        const allPlans = window.GENESIS_CONFIG.depositPlans;
        
        // –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–ª–∞–Ω
        let nextPlan = allPlans[0]; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é TRIAL
        
        for (const plan of allPlans) {
            if (!completedPlans.includes(plan.id)) {
                nextPlan = plan;
                break;
            }
        }
        
        const nextPlanName = document.getElementById('next-available-plan');
        const nextPlanStatus = document.getElementById('next-plan-status');
        const nextPlanInfo = document.getElementById('next-plan-info');
        
        if (nextPlanName) nextPlanName.textContent = nextPlan.name;
        if (nextPlanStatus) nextPlanStatus.textContent = '–î–æ—Å—Ç—É–ø–µ–Ω';
        if (nextPlanInfo) {
            nextPlanInfo.innerHTML = `
                <div>üí∞ –ú–∏–Ω–∏–º—É–º: ${nextPlan.usdtAmount}</div>
                <div>üìä –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${nextPlan.percentage}%</div>
            `;
        }
    },
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    displayActiveDeposits(deposits) {
        const container = document.getElementById('active-deposits-container');
        if (!container) return;
        
        if (deposits.length === 0) {
            container.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">üíº</div>
                    <h3>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h3>
                    <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ –≤ GENESIS 1.1</p>
                    <button class="btn" onclick="window.GenesisCabinet.showDepositModal()">
                        üöÄ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç
                    </button>
                </div>
            `;
            return;
        }
        
        container.innerHTML = `
            <div style="overflow-x: auto;">
                <table style="width: 100%; border-collapse: collapse;">
                    <thead>
                        <tr style="border-bottom: 2px solid var(--border-color);">
                            <th style="padding: 12px; text-align: left; color: var(--text-primary);">–ü–ª–∞–Ω</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–î–æ—Ö–æ–¥/–¥–µ–Ω—å</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–ü—Ä–æ–≥—Ä–µ—Å—Å</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${deposits.map(deposit => {
                            const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === deposit.planId);
                            const totalProfit = plan ? (deposit.amount * plan.percentage / 100) - deposit.amount : 0;
                            const dailyProfit = plan ? totalProfit / plan.days : 0;
                            
                            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                            const activatedDate = new Date(deposit.activatedAt || deposit.createdAt);
                            const daysPassed = Math.floor((Date.now() - activatedDate.getTime()) / (1000 * 60 * 60 * 24));
                            const daysTotal = plan ? plan.days : 0;
                            const progress = Math.min(100, (daysPassed / daysTotal) * 100);
                            
                            return `
                                <tr style="border-bottom: 1px solid var(--bg-primary);">
                                    <td style="padding: 12px;">
                                        <div style="display: flex; align-items: center; gap: 0.5rem;">
                                            <span style="font-size: 1.2rem;">üíé</span>
                                            <div>
                                                <div style="color: var(--text-primary); font-weight: 600;">${deposit.planName}</div>
                                                <div style="color: var(--text-secondary); font-size: 0.8rem;">${plan ? plan.days : 0} –¥–Ω–µ–π</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td style="padding: 12px; text-align: right;">
                                        <div style="color: var(--text-primary); font-weight: 600;">${deposit.amount}</div>
                                        <div style="color: var(--text-secondary); font-size: 0.8rem;">${deposit.currency}</div>
                                    </td>
                                    <td style="padding: 12px; text-align: right;">
                                        <div style="color: var(--success-color); font-weight: 600;">+${dailyProfit.toFixed(2)}</div>
                                        <div style="color: var(--text-secondary); font-size: 0.8rem;">–≤ –¥–µ–Ω—å</div>
                                    </td>
                                    <td style="padding: 12px; text-align: right;">
                                        <div style="color: var(--warning-color); font-weight: 600;">${progress.toFixed(1)}%</div>
                                        <div style="background: var(--bg-primary); height: 4px; border-radius: 2px; margin-top: 0.3rem; overflow: hidden;">
                                            <div style="background: var(--success-color); height: 100%; width: ${progress}%; transition: width 0.3s ease;"></div>
                                        </div>
                                    </td>
                                    <td style="padding: 12px; text-align: right;">
                                        <span style="background: rgba(0, 255, 65, 0.2); color: var(--success-color); padding: 0.3rem 0.6rem; border-radius: 12px; font-size: 0.8rem; font-weight: 500;">
                                            ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
                                        </span>
                                    </td>
                                </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            </div>
        `;
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async initializePageComponents(page) {
        if (page === 'portfolio') {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∫–∞–±–∏–Ω–µ—Ç–∞
            if (window.CabinetDepositService && this.userData?.address) {
                await window.CabinetDepositService.init(this.userData.address);
            } else {
                // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É
                this.loadUserDeposits();
                this.loadAndDisplayDepositPlans();
            }
        } else if (page === 'deposits') {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ–ø–æ–∑–∏—Ç–æ–≤
            this.loadUserDepositsProgress();
        } else if (page === 'access') {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ—Å—Ç—É–ø–∞
            this.loadAccessStatus();
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async loadUserDepositsProgress() {
        const progressContainer = document.getElementById('user-deposits-progress');
        if (!progressContainer) return;
        
        try {
            const activeDeposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
            const completedPlans = JSON.parse(localStorage.getItem('genesis_completed_plans') || '[]');
            const plans = window.GENESIS_CONFIG.depositPlans;
            
            const totalPlans = plans.length;
            const completedCount = completedPlans.length;
            const activeCount = activeDeposits.filter(d => d.status === 'active').length;
            const progressPercent = (completedCount / totalPlans) * 100;
            
            let totalInvested = 0;
            let totalEarned = 0;
            
            activeDeposits.forEach(deposit => {
                totalInvested += deposit.amount;
                const plan = plans.find(p => p.id === deposit.planId);
                if (plan) {
                    const profit = (deposit.amount * plan.percentage / 100) - deposit.amount;
                    const daysPassed = Math.floor((Date.now() - new Date(deposit.createdAt).getTime()) / (1000 * 60 * 60 * 24));
                    const earnedProfit = Math.min(profit, (profit / plan.days) * daysPassed);
                    totalEarned += earnedProfit;
                }
            });
            
            progressContainer.innerHTML = `
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1.5rem;">
                    <div style="text-align: center; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–ü—Ä–æ–π–¥–µ–Ω–æ –ø–ª–∞–Ω–æ–≤</div>
                        <div style="color: var(--primary-color); font-size: 1.5rem; font-weight: 700;">${completedCount} –∏–∑ ${totalPlans}</div>
                    </div>
                    <div style="text-align: center; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤</div>
                        <div style="color: var(--warning-color); font-size: 1.5rem; font-weight: 700;">${activeCount}</div>
                    </div>
                    <div style="text-align: center; padding: 1rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ</div>
                        <div style="color: var(--success-color); font-size: 1.5rem; font-weight: 700;">${totalInvested.toFixed(2)}</div>
                    </div>
                </div>
                
                <div style="margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                        <span style="color: var(--text-secondary);">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span style="color: var(--primary-color); font-weight: 600;">${progressPercent.toFixed(1)}%</span>
                    </div>
                    <div style="background: var(--bg-primary); height: 8px; border-radius: 4px; overflow: hidden;">
                        <div style="background: linear-gradient(90deg, var(--success-color), var(--primary-color)); height: 100%; width: ${progressPercent}%; transition: width 0.5s ease;"></div>
                    </div>
                </div>
                
                ${completedCount === 0 ? `
                    <div style="text-align: center; padding: 1rem; background: rgba(255, 107, 53, 0.1); border-radius: 8px; border: 1px solid var(--primary-color);">
                        <p style="color: var(--text-primary); margin-bottom: 0.5rem;">üöÄ –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ GENESIS 1.1!</p>
                        <p style="color: var(--text-secondary); font-size: 0.9rem;">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç TRIAL –∑–∞ $25 –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥</p>
                    </div>
                ` : `
                    <div style="text-align: center; color: var(--text-secondary); font-size: 0.9rem;">
                        üéØ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –≤–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å
                    </div>
                `}
            `;
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error);
            progressContainer.innerHTML = `
                <div style="text-align: center; color: var(--error-color); padding: 2rem;">
                    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                </div>
            `;
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞
    async loadAccessStatus() {
        // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å PlatformAccessService
        const accessDays = this.userData?.access?.accessDays || 0;
        const indicator = document.getElementById('access-status-indicator');
        
        if (indicator) {
            indicator.style.display = 'flex';
            const icon = document.getElementById('access-status-icon');
            const text = document.getElementById('access-status-text');
            const days = document.getElementById('access-days-count');
            
            if (accessDays > 0) {
                icon.textContent = '‚úÖ';
                text.textContent = '–ê–∫—Ç–∏–≤–µ–Ω';
                days.textContent = `${accessDays} –¥–Ω–µ–π`;
                indicator.style.borderColor = 'var(--success-color)';
            } else {
                icon.textContent = '‚ùå';
                text.textContent = '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
                days.textContent = '–û–ø–ª–∞—Ç–∏—Ç—å';
                indicator.style.borderColor = 'var(--error-color)';
            }
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    loadAndDisplayDepositPlans() {
        const container = document.getElementById('deposit-plans-grid');
        if (!container) return;
        
        const plans = window.GENESIS_CONFIG.depositPlans;
        
        container.innerHTML = `
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 1.5rem;">
                ${plans.map((plan, index) => {
                    const isLocked = false; // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                    const profit = (plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount;
                    const dailyProfit = profit / plan.days;
                    
                    return `
                        <div class="stats-card" style="border-left: 4px solid ${this.getPlanColor(plan.id)}; ${isLocked ? 'opacity: 0.6;' : ''}">
                            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                                <div>
                                    <h4 style="color: ${this.getPlanColor(plan.id)}; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                                        <span style="font-size: 1.5rem;">${isLocked ? 'üîí' : 'üí∞'}</span>
                                        ${plan.name}
                                    </h4>
                                    <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">
                                        ${plan.description}
                                    </p>
                                    ${isLocked ? 
                                        '<div style="background: rgba(255, 165, 0, 0.2); color: var(--warning-color); padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem;">üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–ª–∞–Ω</div>' : 
                                        '<div style="background: rgba(0, 255, 65, 0.2); color: var(--success-color); padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem;">üöÄ –î–æ—Å—Ç—É–ø–µ–Ω</div>'
                                    }
                                </div>
                                <div style="text-align: right;">
                                    <div style="font-size: 1.5rem; font-weight: 700; color: var(--text-primary);">
                                        ${plan.usdtAmount.toLocaleString()}
                                    </div>
                                    <div style="color: var(--success-color); font-size: 0.9rem;">
                                        ${plan.percentage}% (${plan.days} –¥–Ω–µ–π)
                                    </div>
                                </div>
                            </div>
                            
                            <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 0.8rem; margin-bottom: 1.5rem; font-size: 0.8rem;">
                                <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                                    <div style="color: var(--text-primary); font-weight: 600;">${plan.usdtAmount}</div>
                                </div>
                                <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–ü—Ä–∏–±—ã–ª—å</div>
                                    <div style="color: var(--success-color); font-weight: 600;">${profit.toFixed(2)}</div>
                                </div>
                                <div style="text-align: center; padding: 0.6rem; background: var(--bg-primary); border-radius: 6px;">
                                    <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–í –¥–µ–Ω—å</div>
                                    <div style="color: var(--primary-color); font-weight: 600;">${dailyProfit.toFixed(2)}</div>
                                </div>
                            </div>
                            
                            <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                                <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                                    <span style="color: var(--text-secondary);">–í–∞–ª—é—Ç—ã:</span>
                                    <span style="color: var(--secondary-color); font-weight: 500;">${plan.currencies.join(', ')}</span>
                                </div>
                                <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                                    <span style="color: var(--text-secondary);">ROI:</span>
                                    <span style="color: var(--warning-color); font-weight: 500;">${plan.percentage - 100}% –ø—Ä–∏–±—ã–ª—å</span>
                                </div>
                            </div>
                            
                            <button class="btn${isLocked ? '-outline" disabled style="opacity: 0.5; cursor: not-allowed;' : '"'} 
                                    onclick="${!isLocked ? `window.GenesisCabinet.showPurchaseModal('${plan.id}')` : 'void(0)'}" 
                                    style="width: 100%; margin-top: 1rem; font-size: 0.9rem;">
                                ${isLocked ? 'üîí –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' : 'üöÄ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç'}
                            </button>
                        </div>
                    `;
                }).join('')}
            </div>
            
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="margin-bottom: 1rem; color: var(--primary-color);">üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h3>
                <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 2rem;">
                    <div>
                        <h4 style="color: var(--text-primary); margin-bottom: 1rem;">üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ GENESIS 1.1:</h4>
                        <ul style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                            <li>‚úÖ <strong>–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</strong> –ó–∞—â–∏—Ç–∞ –æ—Ç —Ä–∏—Å–∫–æ–≤ —á–µ—Ä–µ–∑ –ø–æ—ç—Ç–∞–ø–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ</li>
                            <li>‚úÖ <strong>–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:</strong> –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–Ω—ã –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</li>
                            <li>‚úÖ <strong>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:</strong> –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</li>
                            <li>‚úÖ <strong>–ì–∏–±–∫–æ—Å—Ç—å:</strong> –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –æ–ø–ª–∞—Ç—ã (USDT/PLEX)</li>
                            <li>‚úÖ <strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</li>
                        </ul>
                    </div>
                    <div style="text-align: center; padding: 2rem; background: var(--bg-primary); border-radius: 8px;">
                        <div style="font-size: 3rem; margin-bottom: 1rem;">üîí</div>
                        <h4 style="color: var(--success-color); margin-bottom: 0.5rem;">–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–µ–Ω–∞</h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 1rem;">–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –ø–ª–∞–Ω–æ–≤</p>
                        <div style="background: var(--bg-secondary); padding: 0.8rem; border-radius: 6px; font-family: monospace; font-size: 0.8rem;">
                            ${window.GENESIS_CONFIG.addresses.system.substring(0, 20)}...
                        </div>
                    </div>
                </div>
            </div>
        `;
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø–ª–∞–Ω–∞
    getPlanColor(planId) {
        const colors = {
            'trial': '#00ff41',
            'starter': '#ff6b35', 
            'progressive1': '#ffa726',
            'progressive2': '#ffeb3b',
            'progressive3': '#4caf50',
            'progressive4': '#00bcd4',
            'progressive5': '#2196f3',
            'progressive6': '#3f51b5',
            'progressive7': '#673ab7',
            'progressive8': '#9c27b0',
            'recommended': '#e91e63',
            'platinum': '#ff5722',
            'maximum': '#ffd700'
        };
        return colors[planId] || '#ff6b35';
    },
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
    showPurchaseModal(planId) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        if (window.CabinetDepositService && window.CabinetDepositService.startDepositProcess) {
            window.CabinetDepositService.startDepositProcess(planId);
        } else {
            // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É
            const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
            if (!plan) return;
            
            this.createDepositModal();
            const modal = document.getElementById('deposit-modal');
            if (modal) {
                modal.classList.remove('hidden');
                this.showDepositStep2(plan);
            }
        }
    },
    
    // MCP-MARKER:METHOD:CABINET:TRANSACTIONS_HANDLERS - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    
    // –≠–∫—Å–ø–æ—Ä—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ CSV
    exportTransactions(format = 'csv') {
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üìÅ –≠–∫—Å–ø–æ—Ä—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ${format.toUpperCase()}...`, 'info');
        }
        
        try {
            const transactions = this.getAllTransactions();
            
            if (transactions.length === 0) {
                this.showNotification('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', 'warning');
                return;
            }
            
            if (format === 'csv') {
                const csvContent = this.generateCSV(transactions);
                this.downloadFile(csvContent, `genesis_transactions_${Date.now()}.csv`, 'text/csv');
            }
            
            this.showNotification('‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω', `–§–∞–π–ª —Å ${transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω`, 'success');
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞', error.message, 'error');
        }
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    async refreshTransactions() {
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...', 'info');
        }
        
        const container = document.getElementById('transactions-table-container');
        if (container) {
            container.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">üîÑ</div>
                    <h3>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...</h3>
                    <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞ BSC</p>
                </div>
            `;
        }
        
        try {
            await this.loadUserTransactions();
            this.showNotification('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ', '–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω', 'success');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', error.message, 'error');
        }
    },
    
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    applyTransactionFilters() {
        const typeFilter = document.getElementById('transaction-type-filter')?.value || 'all';
        const currencyFilter = document.getElementById('transaction-currency-filter')?.value || 'all';
        const periodFilter = document.getElementById('transaction-period-filter')?.value || 'all';
        const searchQuery = document.getElementById('transaction-search')?.value || '';
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üîç –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤: —Ç–∏–ø=${typeFilter}, –≤–∞–ª—é—Ç–∞=${currencyFilter}, –ø–µ—Ä–∏–æ–¥=${periodFilter}`, 'info');
        }
        
        const transactions = this.filterTransactions({
            type: typeFilter,
            currency: currencyFilter,
            period: periodFilter,
            search: searchQuery
        });
        
        this.displayTransactions(transactions);
        this.updateTransactionStats(transactions);
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async loadUserTransactions() {
        const userAddress = this.userData?.address || localStorage.getItem('genesis_user_address');
        if (!userAddress) return [];
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ BSC –±–ª–æ–∫—á–µ–π–Ω–µ
            if (window.GenesisAPI && window.GenesisAPI.getTransactionHistory) {
                const transactions = await window.GenesisAPI.getTransactionHistory(userAddress);
                this.displayTransactions(transactions);
                this.updateTransactionStats(transactions);
                return transactions;
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                const demoTransactions = this.generateDemoTransactions();
                this.displayTransactions(demoTransactions);
                this.updateTransactionStats(demoTransactions);
                return demoTransactions;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
            return [];
        }
    },
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    generateDemoTransactions() {
        const types = ['deposit', 'authorization', 'subscription'];
        const currencies = ['USDT', 'PLEX', 'BNB'];
        const statuses = ['success', 'pending', 'failed'];
        
        const transactions = [];
        
        for (let i = 0; i < 15; i++) {
            const type = types[Math.floor(Math.random() * types.length)];
            const currency = currencies[Math.floor(Math.random() * currencies.length)];
            const status = statuses[Math.floor(Math.random() * statuses.length)];
            
            let amount;
            if (type === 'authorization') {
                amount = 1;
                currency = 'PLEX';
            } else if (type === 'subscription') {
                amount = Math.random() * 10 + 10;
                currency = 'USDT';
            } else {
                amount = Math.random() * 2000 + 25;
                currency = Math.random() > 0.5 ? 'USDT' : 'PLEX';
            }
            
            transactions.push({
                id: `demo_${i}`,
                hash: `0x${Math.random().toString(16).substring(2, 66)}`,
                type: type,
                currency: currency,
                amount: amount,
                status: status,
                timestamp: Date.now() - (Math.random() * 30 * 24 * 60 * 60 * 1000), // –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
                from: this.userData?.address || '0x1234567890abcdef1234567890abcdef12345678',
                to: window.GENESIS_CONFIG?.addresses?.system || '0x399B22170B0AC7BB20bdC86772BfF478f201fFCD',
                blockNumber: Math.floor(Math.random() * 1000000) + 30000000,
                gasUsed: Math.floor(Math.random() * 100000) + 21000,
                gasPrice: Math.floor(Math.random() * 10) + 5
            });
        }
        
        return transactions.sort((a, b) => b.timestamp - a.timestamp);
    },
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ
    displayTransactions(transactions) {
        const container = document.getElementById('transactions-table-container');
        if (!container) return;
        
        if (transactions.length === 0) {
            container.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">üì≠</div>
                    <h3>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                    <p>–ü–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã</p>
                    <button class="btn-outline" onclick="window.GenesisCabinet.clearTransactionFilters()" style="margin-top: 1rem;">
                        üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                    </button>
                </div>
            `;
            return;
        }
        
        const perPage = parseInt(document.getElementById('transactions-per-page')?.value || '25');
        const currentPage = this.transactionPage || 1;
        const startIndex = (currentPage - 1) * perPage;
        const endIndex = startIndex + perPage;
        const pageTransactions = transactions.slice(startIndex, endIndex);
        
        container.innerHTML = `
            <div style="overflow-x: auto;">
                <table style="width: 100%; border-collapse: collapse;">
                    <thead>
                        <tr style="border-bottom: 2px solid var(--border-color);">
                            <th style="padding: 12px; text-align: left; color: var(--text-primary);">–¢–∏–ø</th>
                            <th style="padding: 12px; text-align: left; color: var(--text-primary);">Hash</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–°—É–º–º–∞</th>
                            <th style="padding: 12px; text-align: center; color: var(--text-primary);">–°—Ç–∞—Ç—É—Å</th>
                            <th style="padding: 12px; text-align: right; color: var(--text-primary);">–î–∞—Ç–∞</th>
                            <th style="padding: 12px; text-align: center; color: var(--text-primary);">–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${pageTransactions.map(tx => `
                            <tr style="border-bottom: 1px solid var(--bg-primary);">
                                <td style="padding: 12px;">
                                    <div style="display: flex; align-items: center; gap: 0.5rem;">
                                        <span style="font-size: 1.2rem;">${this.getTransactionIcon(tx.type)}</span>
                                        <div>
                                            <div style="color: var(--text-primary); font-weight: 600; text-transform: capitalize;">${this.getTransactionTypeName(tx.type)}</div>
                                            <div style="color: var(--text-secondary); font-size: 0.8rem;">–ë–ª–æ–∫ #${tx.blockNumber}</div>
                                        </div>
                                    </div>
                                </td>
                                <td style="padding: 12px;">
                                    <div style="font-family: monospace; font-size: 0.9rem; color: var(--secondary-color);">
                                        ${tx.hash.substring(0, 10)}...${tx.hash.substring(-8)}
                                    </div>
                                    <button onclick="window.GenesisCabinet.copyTransactionHash('${tx.hash}')" style="background: none; border: none; color: var(--text-secondary); font-size: 0.7rem; cursor: pointer; margin-top: 0.2rem;">
                                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                                    </button>
                                </td>
                                <td style="padding: 12px; text-align: right;">
                                    <div style="color: var(--text-primary); font-weight: 600;">${tx.amount.toFixed(4)}</div>
                                    <div style="color: var(--text-secondary); font-size: 0.8rem;">${tx.currency}</div>
                                </td>
                                <td style="padding: 12px; text-align: center;">
                                    <span style="${this.getTransactionStatusStyle(tx.status)}">
                                        ${this.getTransactionStatusIcon(tx.status)} ${this.getTransactionStatusName(tx.status)}
                                    </span>
                                </td>
                                <td style="padding: 12px; text-align: right;">
                                    <div style="color: var(--text-primary); font-weight: 500;">${new Date(tx.timestamp).toLocaleDateString()}</div>
                                    <div style="color: var(--text-secondary); font-size: 0.8rem;">${new Date(tx.timestamp).toLocaleTimeString()}</div>
                                </td>
                                <td style="padding: 12px; text-align: center;">
                                    <button onclick="window.GenesisCabinet.viewTransactionDetails('${tx.hash}')" class="btn-secondary" style="font-size: 0.7rem; padding: 0.3rem 0.6rem;">
                                        üëÅÔ∏è –î–µ—Ç–∞–ª–∏
                                    </button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        `;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        this.updateTransactionPagination(transactions.length, perPage, currentPage);
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    updateTransactionStats(transactions) {
        const totalCount = transactions.length;
        const successfulTx = transactions.filter(tx => tx.status === 'success');
        const totalVolume = transactions.reduce((sum, tx) => {
            if (tx.currency === 'USDT') return sum + tx.amount;
            if (tx.currency === 'PLEX') return sum + (tx.amount * 0.05); // –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ USD
            return sum;
        }, 0);
        
        const lastTransaction = transactions[0];
        const successRate = totalCount > 0 ? (successfulTx.length / totalCount * 100) : 0;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        const elements = {
            'total-transactions-count': totalCount,
            'total-transactions-volume': `${totalVolume.toFixed(2)}`,
            'last-transaction-time': lastTransaction ? new Date(lastTransaction.timestamp).toLocaleDateString() : '--',
            'last-transaction-type': lastTransaction ? this.getTransactionTypeName(lastTransaction.type) : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
            'successful-transactions': successfulTx.length,
            'success-rate': `${successRate.toFixed(1)}% —É—Å–ø–µ—à–Ω—ã—Ö`
        };
        
        Object.entries(elements).forEach(([id, value]) => {
            const element = document.getElementById(id);
            if (element) element.textContent = value;
        });
    },
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    getTransactionIcon(type) {
        const icons = {
            'deposit': 'üí∞',
            'authorization': 'üîê',
            'subscription': 'üìÖ',
            'withdrawal': 'üí∏',
            'transfer': 'üîÑ'
        };
        return icons[type] || '‚ùì';
    },
    
    getTransactionTypeName(type) {
        const names = {
            'deposit': '–î–µ–ø–æ–∑–∏—Ç',
            'authorization': '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
            'subscription': '–ü–æ–¥–ø–∏—Å–∫–∞',
            'withdrawal': '–í—ã–≤–æ–¥',
            'transfer': '–ü–µ—Ä–µ–≤–æ–¥'
        };
        return names[type] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    },
    
    getTransactionStatusIcon(status) {
        const icons = {
            'success': '‚úÖ',
            'pending': '‚è≥',
            'failed': '‚ùå'
        };
        return icons[status] || '‚ùì';
    },
    
    getTransactionStatusName(status) {
        const names = {
            'success': '–£—Å–ø–µ—à–Ω–æ',
            'pending': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
            'failed': '–û—à–∏–±–∫–∞'
        };
        return names[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    },
    
    getTransactionStatusStyle(status) {
        const styles = {
            'success': 'background: rgba(0, 255, 65, 0.2); color: var(--success-color); padding: 0.3rem 0.6rem; border-radius: 12px; font-size: 0.8rem; font-weight: 500;',
            'pending': 'background: rgba(255, 165, 0, 0.2); color: var(--warning-color); padding: 0.3rem 0.6rem; border-radius: 12px; font-size: 0.8rem; font-weight: 500;',
            'failed': 'background: rgba(255, 69, 58, 0.2); color: var(--error-color); padding: 0.3rem 0.6rem; border-radius: 12px; font-size: 0.8rem; font-weight: 500;'
        };
        return styles[status] || styles['pending'];
    },
    
    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–µ—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    copyTransactionHash(hash) {
        navigator.clipboard.writeText(hash).then(() => {
            this.showNotification('üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ', `Hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${hash.substring(0, 10)}...`, 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
        });
    },
    
    // –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    viewTransactionDetails(hash) {
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${hash.substring(0, 10)}...`, 'info');
        }
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ BSCScan
        window.open(`https://bscscan.com/tx/${hash}`, '_blank');
    },
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSV —Ñ–∞–π–ª–∞
    generateCSV(transactions) {
        const headers = ['–î–∞—Ç–∞', '–¢–∏–ø', 'Hash', '–°—É–º–º–∞', '–í–∞–ª—é—Ç–∞', '–°—Ç–∞—Ç—É—Å', '–ë–ª–æ–∫'];
        const rows = transactions.map(tx => [
            new Date(tx.timestamp).toISOString(),
            this.getTransactionTypeName(tx.type),
            tx.hash,
            tx.amount,
            tx.currency,
            this.getTransactionStatusName(tx.status),
            tx.blockNumber
        ]);
        
        const csvContent = [headers, ...rows].map(row => 
            row.map(field => `"${field}"`).join(',')
        ).join('\n');
        
        return csvContent;
    },
    
    // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    downloadFile(content, filename, contentType) {
        const blob = new Blob([content], { type: contentType });
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(url);
    },
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    getQuickActionsSection() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                    <button class="btn" onclick="window.GenesisCabinet.navigateTo('portfolio')">
                        üí∞ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('access')">
                        üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('transactions')">
                        üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('referrals')">
                        üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
                    </button>
                </div>
            </div>
        `;
    },
    
    getRecentActivitySection() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìä –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                <div style="text-align: center; color: var(--text-secondary); padding: 2rem;">
                    <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                </div>
            </div>
        `;
    },
    
    getAnalyticsCards() {
        return `
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">ROI –∑–∞ –º–µ—Å—è—Ü</span>
                    <span class="stats-icon">üìä</span>
                </div>
                <div class="stats-value">0%</div>
                <div class="stats-change">–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">–õ—É—á—à–∏–π –¥–µ–ø–æ–∑–∏—Ç</span>
                    <span class="stats-icon">üèÜ</span>
                </div>
                <div class="stats-value">‚Äî</div>
                <div class="stats-change">–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">–°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥</span>
                    <span class="stats-icon">üíπ</span>
                </div>
                <div class="stats-value">$0.00</div>
                <div class="stats-change">–≤ –¥–µ–Ω—å</div>
            </div>
        `;
    },
    
    getAccessPaymentInstructions() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--error-color); margin-bottom: 1.5rem;">‚ùå –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</h3>
                <div style="background: rgba(255, 69, 58, 0.1); border: 1px solid var(--error-color); border-radius: 8px; padding: 1.5rem;">
                    <p style="color: var(--text-primary); margin-bottom: 1rem;">–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:</p>
                    <ol style="color: var(--text-secondary); line-height: 1.8; margin: 0 0 1rem 0; padding-left: 1.5rem;">
                        <li>–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–º–∏–Ω–∏–º—É–º $10)</li>
                        <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ USDT –Ω–∞ –∞–¥—Ä–µ—Å —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–µ–∑ BSC</li>
                        <li>–î–æ–∂–¥–∏—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (1-3 –º–∏–Ω—É—Ç—ã)</li>
                        <li>–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</li>
                    </ol>
                    <button class="btn" onclick="window.GenesisCabinet.topUpAccess(10)" style="width: 100%;">
                        üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∑–∞ $10
                    </button>
                </div>
            </div>
        `;
    },
    
    getAccessHistoryTable() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--success-color); margin-bottom: 1.5rem;">üìã –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –¥–æ—Å—Ç—É–ø</h3>
                <div class="empty-state">
                    <div class="empty-icon">üìÖ</div>
                    <h3>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –ø—É—Å—Ç–∞</h3>
                    <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –≤–∞—à–∏ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</p>
                </div>
            </div>
        `;
    },
    
    getBonusItems() {
        const bonuses = [
            {
                id: 'daily',
                name: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å',
                icon: 'üéÅ',
                description: '–ü–æ–ª—É—á–∞–π—Ç–µ PLEX –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–∞ –≤—Ö–æ–¥',
                reward: '10 PLEX',
                status: 'available',
                progress: 0
            },
            {
                id: 'first-deposit',
                name: '–ü–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç',
                icon: 'üíé',
                description: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç',
                reward: '100 PLEX',
                status: 'locked',
                progress: 0
            },
            {
                id: 'referral',
                name: '–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞',
                icon: 'üë•',
                description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
                reward: '50 PLEX',
                status: 'locked',
                progress: 0
            },
            {
                id: 'volume',
                name: '–û–±—ä–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
                icon: 'üìà',
                description: '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ $1000 —Å—É–º–º–∞—Ä–Ω–æ',
                reward: '500 PLEX',
                status: 'locked',
                progress: 0
            },
            {
                id: 'loyalty',
                name: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏',
                icon: '‚≠ê',
                description: '–ë—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
                reward: '1000 PLEX',
                status: 'locked',
                progress: 0
            }
        ];
        
        return bonuses.map(bonus => `
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; border-left: 4px solid ${bonus.status === 'available' ? 'var(--success-color)' : 'var(--border-color)'}; opacity: ${bonus.status === 'locked' ? '0.6' : '1'};">
                <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                    <div style="flex: 1;">
                        <h4 style="color: var(--text-primary); margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1.5rem;">${bonus.icon}</span>
                            ${bonus.name}
                        </h4>
                        <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">
                            ${bonus.description}
                        </p>
                    </div>
                    <div style="text-align: right;">
                        <div style="color: var(--secondary-color); font-weight: 600; font-size: 1.1rem;">
                            ${bonus.reward}
                        </div>
                        <div style="font-size: 0.8rem; color: ${bonus.status === 'available' ? 'var(--success-color)' : 'var(--text-secondary)'};">
                            ${bonus.status === 'available' ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}
                        </div>
                    </div>
                </div>
                
                ${bonus.status === 'available' ? `
                    <button class="btn" onclick="window.GenesisCabinet.claimBonus('${bonus.id}')" style="width: 100%; font-size: 0.9rem;">
                        üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å
                    </button>
                ` : `
                    <div style="background: var(--bg-secondary); height: 4px; border-radius: 2px; overflow: hidden;">
                        <div style="background: var(--primary-color); height: 100%; width: ${bonus.progress}%; transition: width 0.3s ease;"></div>
                    </div>
                    <div style="text-align: center; margin-top: 0.5rem; color: var(--text-secondary); font-size: 0.8rem;">
                        –ü—Ä–æ–≥—Ä–µ—Å—Å: ${bonus.progress}%
                    </div>
                `}
            </div>
        `).join('');
    },
    
    getNotificationSettings() {
        const settings = [
            { id: 'deposits', name: '–ê–∫—Ç–∏–≤–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤', description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–∞—Ö', enabled: true },
            { id: 'profits', name: '–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏', description: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è', enabled: true },
            { id: 'access', name: '–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞', description: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ', enabled: true },
            { id: 'referrals', name: '–ù–æ–≤—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', description: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ', enabled: false },
            { id: 'news', name: '–ù–æ–≤–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∞–∫—Ü–∏–∏', enabled: false }
        ];
        
        return settings.map(setting => `
            <label style="display: flex; align-items: center; justify-content: space-between; padding: 1rem; background: var(--bg-primary); border-radius: 8px; cursor: pointer;">
                <div style="flex: 1;">
                    <div style="color: var(--text-primary); font-weight: 500; margin-bottom: 0.3rem;">
                        ${setting.name}
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.85rem;">
                        ${setting.description}
                    </div>
                </div>
                <div style="position: relative; width: 50px; height: 26px; background: ${setting.enabled ? 'var(--success-color)' : 'var(--bg-secondary)'}; border-radius: 13px; transition: background 0.3s ease;">
                    <input type="checkbox" id="notify-${setting.id}" ${setting.enabled ? 'checked' : ''} 
                           onchange="window.GenesisCabinet.toggleNotification('${setting.id}')" 
                           style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; top: 3px; ${setting.enabled ? 'right: 3px' : 'left: 3px'}; width: 20px; height: 20px; background: white; border-radius: 50%; transition: all 0.3s ease;"></span>
                </div>
            </label>
        `).join('');
    },
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"
    topUpAccess(days) {
        if (window.PlatformAccessService) {
            window.PlatformAccessService.showTopUpModal(days);
        } else {
            const amount = days;
            this.showNotification('üí≥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞', `–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ ${amount} USDT...`, 'info');
            // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–µ—Ä–≤–∏—Å–æ–º –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
        }
    },
    
    topUpAccessCustom() {
        const amountInput = document.getElementById('custom-access-amount');
        const amount = parseInt(amountInput?.value || '10');
        
        if (amount < 10) {
            this.showNotification('‚ö†Ô∏è –û—à–∏–±–∫–∞', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è $10', 'error');
            return;
        }
        
        this.topUpAccess(amount);
    },
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    copyRefLink(link) {
        navigator.clipboard.writeText(link).then(() => {
            this.showNotification('üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ', '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
        });
    },
    
    shareRefLink(platform) {
        const refLink = `https://genesis.app/ref/${this.userData?.address?.substring(2, 8) || 'xxxxx'}`;
        const text = encodeURIComponent('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ GENESIS 1.1 - –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π DeFi –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ! –ò—Å–ø–æ–ª—å–∑—É–π –º–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É:');
        
        const urls = {
            telegram: `https://t.me/share/url?url=${encodeURIComponent(refLink)}&text=${text}`,
            whatsapp: `https://wa.me/?text=${text}%20${encodeURIComponent(refLink)}`,
            twitter: `https://twitter.com/intent/tweet?text=${text}&url=${encodeURIComponent(refLink)}`
        };
        
        if (urls[platform]) {
            window.open(urls[platform], '_blank');
        }
    },
    
    generateRefQR() {
        const refLink = `https://genesis.app/ref/${this.userData?.address?.substring(2, 8) || 'xxxxx'}`;
        this.showNotification('üì± QR-–∫–æ–¥', '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏...', 'info');
        // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π QR-–∫–æ–¥–æ–≤
    },
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±–æ–Ω—É—Å–æ–≤
    claimBonus(bonusId) {
        this.showNotification('üéÅ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞', `–û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–Ω—É—Å–∞ ${bonusId}...`, 'info');
        // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –±–æ–Ω—É—Å–æ–≤
    },
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    saveEmail() {
        const emailInput = document.getElementById('user-email');
        const email = emailInput?.value;
        
        if (!email || !email.includes('@')) {
            this.showNotification('‚ö†Ô∏è –û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email', 'error');
            return;
        }
        
        localStorage.setItem('genesis_user_email', email);
        this.showNotification('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ', 'Email —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω', 'success');
    },
    
    saveNickname() {
        const nicknameInput = document.getElementById('user-nickname');
        const nickname = nicknameInput?.value;
        
        if (!nickname || nickname.length < 3) {
            this.showNotification('‚ö†Ô∏è –û—à–∏–±–∫–∞', '–ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞', 'error');
            return;
        }
        
        localStorage.setItem('genesis_user_nickname', nickname);
        this.showNotification('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ', '–ù–∏–∫–Ω–µ–π–º —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω', 'success');
    },
    
    toggleNotification(settingId) {
        const checkbox = document.getElementById(`notify-${settingId}`);
        const enabled = checkbox?.checked;
        
        const settings = JSON.parse(localStorage.getItem('genesis_notification_settings') || '{}');
        settings[settingId] = enabled;
        localStorage.setItem('genesis_notification_settings', JSON.stringify(settings));
        
        this.showNotification('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', `–ù–∞—Å—Ç—Ä–æ–π–∫–∞ ${enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}`, 'info');
    },
    
    changeTheme(theme) {
        localStorage.setItem('genesis_theme', theme);
        this.showNotification('üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞', '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏', 'info');
    },
    
    changeLanguage(language) {
        localStorage.setItem('genesis_language', language);
        this.showNotification('üåê –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω', '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏', 'info');
    },
    
    enableTwoFactor() {
        this.showNotification('üîê 2FA', '–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏', 'info');
    },
    
    exportPrivateData() {
        const data = {
            address: this.userData?.address,
            email: localStorage.getItem('genesis_user_email'),
            nickname: localStorage.getItem('genesis_user_nickname'),
            deposits: JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]'),
            settings: JSON.parse(localStorage.getItem('genesis_notification_settings') || '{}'),
            exportDate: new Date().toISOString()
        };
        
        const jsonData = JSON.stringify(data, null, 2);
        this.downloadFile(jsonData, `genesis_data_${Date.now()}.json`, 'application/json');
        this.showNotification('üì• –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω', '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª', 'success');
    },
    
    clearAllData() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
        const address = localStorage.getItem('genesis_user_address');
        
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        localStorage.clear();
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å
        if (address) {
            localStorage.setItem('genesis_user_address', address);
        }
        
        this.showNotification('üóëÔ∏è –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã', '–í—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞...', 'success');
        
        setTimeout(() => {
            location.reload();
        }, 2000);
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    updateTransactionPagination(totalCount, perPage, currentPage) {
        const totalPages = Math.ceil(totalCount / perPage);
        const paginationContainer = document.getElementById('transactions-pagination');
        const paginationInfo = document.getElementById('pagination-info');
        
        if (paginationContainer) {
            paginationContainer.style.display = totalPages > 1 ? 'block' : 'none';
        }
        
        if (paginationInfo) {
            paginationInfo.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage} –∏–∑ ${totalPages}`;
        }
    },
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    previousTransactionsPage() {
        if (this.transactionPage > 1) {
            this.transactionPage--;
            this.applyTransactionFilters();
        }
    },
    
    nextTransactionsPage() {
        this.transactionPage = (this.transactionPage || 1) + 1;
        this.applyTransactionFilters();
    },
    
    // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    clearTransactionFilters() {
        document.getElementById('transaction-type-filter').value = 'all';
        document.getElementById('transaction-currency-filter').value = 'all';
        document.getElementById('transaction-period-filter').value = 'all';
        document.getElementById('transaction-search').value = '';
        this.applyTransactionFilters();
    },
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    filterTransactions(filters) {
        const allTransactions = this.getAllTransactions();
        
        return allTransactions.filter(tx => {
            // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É
            if (filters.type !== 'all' && tx.type !== filters.type) return false;
            
            // –§–∏–ª—å—Ç—Ä –ø–æ –≤–∞–ª—é—Ç–µ
            if (filters.currency !== 'all' && tx.currency !== filters.currency) return false;
            
            // –§–∏–ª—å—Ç—Ä –ø–æ –ø–µ—Ä–∏–æ–¥—É
            if (filters.period !== 'all') {
                const now = Date.now();
                const txTime = tx.timestamp;
                const periods = {
                    today: 24 * 60 * 60 * 1000,
                    week: 7 * 24 * 60 * 60 * 1000,
                    month: 30 * 24 * 60 * 60 * 1000,
                    quarter: 90 * 24 * 60 * 60 * 1000
                };
                
                if (now - txTime > periods[filters.period]) return false;
            }
            
            // –ü–æ–∏—Å–∫
            if (filters.search) {
                const searchLower = filters.search.toLowerCase();
                if (!tx.hash.toLowerCase().includes(searchLower) &&
                    !tx.amount.toString().includes(searchLower)) {
                    return false;
                }
            }
            
            return true;
        });
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    getAllTransactions() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        const deposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
        const accessPayments = JSON.parse(localStorage.getItem('genesis_access_payments') || '[]');
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        const allTx = [];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–ø–æ–∑–∏—Ç—ã
        deposits.forEach(dep => {
            allTx.push({
                id: dep.transactionHash || `dep_${dep.createdAt}`,
                hash: dep.transactionHash || '0x0000000000000000000000000000000000000000',
                type: 'deposit',
                currency: dep.currency,
                amount: dep.amount,
                status: dep.status === 'active' ? 'success' : dep.status,
                timestamp: new Date(dep.createdAt).getTime(),
                from: dep.userAddress,
                to: window.GENESIS_CONFIG?.addresses?.system || '',
                blockNumber: 0,
                gasUsed: 0,
                gasPrice: 0
            });
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –∑–∞ –¥–æ—Å—Ç—É–ø
        accessPayments.forEach(payment => {
            allTx.push({
                id: payment.hash || `access_${payment.timestamp}`,
                hash: payment.hash || '0x0000000000000000000000000000000000000000',
                type: 'subscription',
                currency: 'USDT',
                amount: payment.amount,
                status: 'success',
                timestamp: payment.timestamp,
                from: this.userData?.address || '',
                to: window.GENESIS_CONFIG?.addresses?.system || '',
                blockNumber: payment.blockNumber || 0,
                gasUsed: payment.gasUsed || 0,
                gasPrice: payment.gasPrice || 0
            });
        });
        
        // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
        if (allTx.length === 0) {
            return this.generateDemoTransactions();
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–µ)
        return allTx.sort((a, b) => b.timestamp - a.timestamp);
    },
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    renderAllDepositPlans() {
        const plans = window.GENESIS_CONFIG.depositPlans;
        const completedPlans = JSON.parse(localStorage.getItem('genesis_completed_plans') || '[]');
        const activeDeposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
        
        return plans.map((plan, index) => {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∞
            const isCompleted = completedPlans.includes(plan.id);
            const isActive = activeDeposits.some(d => d.planId === plan.id && d.status === 'active');
            const isAvailable = index === 0 || completedPlans.includes(plans[index - 1].id);
            const isLocked = !isAvailable && !isCompleted && !isActive;
            
            const statusIcon = isActive ? 'üîÑ' : isCompleted ? '‚úÖ' : isLocked ? 'üîí' : 'üöÄ';
            const statusText = isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : isCompleted ? '–ó–∞–≤–µ—Ä—à–µ–Ω' : isLocked ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–î–æ—Å—Ç—É–ø–µ–Ω';
            const statusColor = isActive ? 'var(--warning-color)' : isCompleted ? 'var(--success-color)' : isLocked ? 'var(--text-secondary)' : 'var(--primary-color)';
            
            const profit = (plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount;
            const dailyProfit = profit / plan.days;
            
            return `
                <div class="deposit-plan-card ${isLocked ? 'locked' : ''} ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}" 
                     style="background: var(--bg-primary); border: 2px solid ${isLocked ? 'var(--border-color)' : statusColor}; 
                            border-radius: 12px; padding: 1.5rem; transition: all 0.3s ease; opacity: ${isLocked ? '0.6' : '1'};
                            ${!isLocked ? 'cursor: pointer;' : 'cursor: not-allowed;'}">
                    
                    <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                        <div>
                            <h4 style="color: ${statusColor}; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                                <span style="font-size: 1.5rem;">${statusIcon}</span>
                                ${plan.name}
                            </h4>
                            <p style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">
                                ${plan.description}
                            </p>
                            <div style="background: rgba(${isActive ? '255, 165, 0' : isCompleted ? '0, 255, 65' : isLocked ? '128, 128, 128' : '255, 107, 53'}, 0.2); 
                                        color: ${statusColor}; padding: 0.3rem 0.6rem; border-radius: 6px; font-size: 0.8rem; display: inline-block;">
                                ${statusText}
                            </div>
                        </div>
                        <div style="text-align: right;">
                            <div style="font-size: 1.8rem; font-weight: 700; color: var(--text-primary); font-family: 'Orbitron', monospace;">
                                ${plan.usdtAmount.toLocaleString()}
                            </div>
                            <div style="color: var(--success-color); font-size: 0.9rem; font-weight: 600;">
                                ${plan.percentage}%
                            </div>
                        </div>
                    </div>
                    
                    <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 0.8rem; margin-bottom: 1.5rem; font-size: 0.85rem;">
                        <div style="text-align: center; padding: 0.6rem; background: var(--bg-secondary); border-radius: 6px;">
                            <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–°—Ä–æ–∫</div>
                            <div style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</div>
                        </div>
                        <div style="text-align: center; padding: 0.6rem; background: var(--bg-secondary); border-radius: 6px;">
                            <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–ü—Ä–∏–±—ã–ª—å</div>
                            <div style="color: var(--success-color); font-weight: 600;">${profit.toFixed(2)}</div>
                        </div>
                        <div style="text-align: center; padding: 0.6rem; background: var(--bg-secondary); border-radius: 6px;">
                            <div style="color: var(--text-secondary); margin-bottom: 0.2rem;">–í –¥–µ–Ω—å</div>
                            <div style="color: var(--primary-color); font-weight: 600;">${dailyProfit.toFixed(2)}</div>
                        </div>
                    </div>
                    
                    <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 1rem;">
                        <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                            <span style="color: var(--text-secondary);">–í–∞–ª—é—Ç—ã:</span>
                            <span style="color: var(--secondary-color); font-weight: 500;">${plan.currencies.join(', ')}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                            <span style="color: var(--text-secondary);">–ú–∏–Ω. –≤ PLEX:</span>
                            <span style="color: var(--secondary-color); font-weight: 500;">${plan.plexAmount ? plan.plexAmount.toLocaleString() : '‚Äî'}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between; font-size: 0.85rem;">
                            <span style="color: var(--text-secondary);">–¢–∏–ø:</span>
                            <span style="color: var(--text-primary); font-weight: 500;">${plan.id.includes('recommended') ? '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π' : plan.id.includes('trial') ? '–ü—Ä–æ–±–Ω—ã–π' : '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π'}</span>
                        </div>
                    </div>
                    
                    ${!isLocked ? `
                        <button class="btn${isActive || isCompleted ? '-outline' : ''}" 
                                onclick="${isActive || isCompleted ? 'void(0)' : `window.GenesisCabinet.showPurchaseModal('${plan.id}')`}" 
                                style="width: 100%; font-size: 0.9rem;${isActive || isCompleted ? ' cursor: not-allowed; opacity: 0.7;' : ''}">
                            ${isActive ? 'üîÑ –î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–µ–Ω' : isCompleted ? '‚úÖ –î–µ–ø–æ–∑–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω' : 'üöÄ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç'}
                        </button>
                    ` : `
                        <div style="text-align: center; padding: 0.75rem; background: var(--bg-secondary); border-radius: 8px; color: var(--text-secondary); font-size: 0.9rem;">
                            üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–ª–∞–Ω
                        </div>
                    `}
                </div>
            `;
        }).join('');
    },
    
    // –í—ã—Ö–æ–¥ –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞
    logout() {
        if (window.GenesisAuth) {
            window.GenesisAuth.logout();
        } else {
            localStorage.removeItem('genesis_user_address');
            window.location.href = '/';
        }
    }
};

    // MCP-MARKER:METHOD:CABINET:ADDITIONAL_METHODS - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    
    // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    logout() {
        this.userData = null;
        localStorage.removeItem('genesis_user_address');
        localStorage.removeItem('genesis_auth');
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üëã –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω', 'info');
        }
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        window.location.href = '/';
    },
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    renderAllDepositPlans() {
        const plans = window.GENESIS_CONFIG.depositPlans;
        const userDeposits = JSON.parse(localStorage.getItem('genesis_active_deposits') || '[]');
        const completedPlans = userDeposits.map(d => d.planId);
        
        let html = '';
        
        plans.forEach((plan, index) => {
            const isCompleted = completedPlans.includes(plan.id);
            const isLocked = index > 0 && !completedPlans.includes(plans[index - 1].id);
            const isAvailable = !isCompleted && !isLocked;
            
            let statusClass = '';
            let statusText = '';
            let statusIcon = '';
            
            if (isCompleted) {
                statusClass = 'completed';
                statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω';
                statusIcon = '‚úÖ';
            } else if (isLocked) {
                statusClass = 'locked';
                statusText = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';
                statusIcon = 'üîí';
            } else {
                statusClass = 'available';
                statusText = '–î–æ—Å—Ç—É–ø–µ–Ω';
                statusIcon = 'üöÄ';
            }
            
            html += `
                <div class="deposit-plan-card ${statusClass}" ${isAvailable ? `onclick="window.GenesisCabinet.showDepositModal('${plan.id}')"` : ''}>
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <div>
                            <h3 style="color: var(--primary-color); margin: 0;">${plan.name}</h3>
                            <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0.5rem 0;">${plan.description}</p>
                        </div>
                        <div style="text-align: center;">
                            <div style="font-size: 2rem;">${statusIcon}</div>
                            <div style="color: var(--text-secondary); font-size: 0.8rem;">${statusText}</div>
                        </div>
                    </div>
                    
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; margin-bottom: 1rem;">
                        <div style="background: var(--bg-primary); padding: 0.8rem; border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.3rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                            <div style="color: var(--text-primary); font-weight: 600;">${plan.usdtAmount}</div>
                        </div>
                        <div style="background: var(--bg-primary); padding: 0.8rem; border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.3rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</div>
                            <div style="color: var(--success-color); font-weight: 600;">${plan.percentage}%</div>
                        </div>
                        <div style="background: var(--bg-primary); padding: 0.8rem; border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.3rem;">–°—Ä–æ–∫</div>
                            <div style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</div>
                        </div>
                        <div style="background: var(--bg-primary); padding: 0.8rem; border-radius: 6px;">
                            <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.3rem;">–ü—Ä–∏–±—ã–ª—å</div>
                            <div style="color: var(--primary-color); font-weight: 600;">${((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount).toFixed(2)}</div>
                        </div>
                    </div>
                    
                    ${isAvailable ? `
                        <button class="btn btn-full" style="font-size: 0.9rem;">
                            üí∞ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç
                        </button>
                    ` : ''}
                </div>
            `;
        });
        
        return html;
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    getQuickActionsSection() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('deposits')">
                        üí∞ –°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('access')">
                        üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('portfolio')">
                        üíº –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å
                    </button>
                    <button class="btn-secondary" onclick="window.GenesisCabinet.navigateTo('referrals')">
                        üë• –†–µ—Ñ–µ—Ä–∞–ª—ã
                    </button>
                </div>
            </div>
        `;
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    getRecentActivitySection() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                <div id="recent-activity" style="color: var(--text-secondary);">
                    <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                </div>
            </div>
        `;
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    getAnalyticsCards() {
        return `
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">–°—Ä–µ–¥–Ω—è—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</span>
                    <span class="stats-icon">üìä</span>
                </div>
                <div class="stats-value">0%</div>
                <div class="stats-change">–∑–∞ –º–µ—Å—è—Ü</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞</span>
                    <span class="stats-icon">üíº</span>
                </div>
                <div class="stats-value">0%</div>
                <div class="stats-change">–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞–Ω–æ–≤</span>
                    <span class="stats-icon">üéØ</span>
                </div>
                <div class="stats-value">13</div>
                <div class="stats-change">–¥–æ—Å—Ç—É–ø–Ω–æ</div>
            </div>
        `;
    },
    
    // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ –¥–æ—Å—Ç—É–ø–∞
    getAccessPaymentInstructions() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--error-color); margin-bottom: 1.5rem;">‚ö†Ô∏è –û–ø–ª–∞—Ç–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h3>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; border-left: 4px solid var(--error-color);">
                    <p style="color: var(--text-primary); font-weight: 600; margin-bottom: 1rem;">–í–∞—à –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω!</p>
                    <p style="color: var(--text-secondary); line-height: 1.6;">
                        –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π GENESIS 1.1 –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø.
                        –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: <strong>$10 USDT</strong> (–Ω–∞ 10 –¥–Ω–µ–π).
                    </p>
                    
                    <button class="btn btn-full" onclick="window.GenesisCabinet.topUpAccess(10)" style="margin-top: 1rem;">
                        üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø
                    </button>
                </div>
            </div>
        `;
    },
    
    // –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç—É–ø–∞
    getAccessHistoryTable() {
        return `
            <div class="stats-card" style="margin-top: 2rem;">
                <h3 style="color: var(--secondary-color); margin-bottom: 1.5rem;">üìÖ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</h3>
                <div id="access-history-table">
                    <p style="text-align: center; color: var(--text-secondary);">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
                </div>
            </div>
        `;
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    getNotificationSettings() {
        return `
            <label style="display: flex; align-items: center; gap: 1rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px; cursor: pointer;">
                <input type="checkbox" style="width: 20px; height: 20px;" checked>
                <div>
                    <div style="color: var(--text-primary); font-weight: 600;">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                    <div style="color: var(--text-secondary); font-size: 0.8rem;">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö –∏ –≤—ã–ø–ª–∞—Ç–∞—Ö</div>
                </div>
            </label>
            
            <label style="display: flex; align-items: center; gap: 1rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px; cursor: pointer;">
                <input type="checkbox" style="width: 20px; height: 20px;" checked>
                <div>
                    <div style="color: var(--text-primary); font-weight: 600;">–ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                    <div style="color: var(--text-secondary); font-size: 0.8rem;">–ó–≤—É–∫–æ–≤–æ–π —Å–∏–≥–Ω–∞–ª –ø—Ä–∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö</div>
                </div>
            </label>
            
            <label style="display: flex; align-items: center; gap: 1rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px; cursor: pointer;">
                <input type="checkbox" style="width: 20px; height: 20px;">
                <div>
                    <div style="color: var(--text-primary); font-weight: 600;">Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                    <div style="color: var(--text-secondary); font-size: 0.8rem;">–ú–æ–±–∏–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Å–∫–æ—Ä–æ)</div>
                </div>
            </label>
        `;
    },
    
    // –ë–æ–Ω—É—Å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    getBonusItems() {
        return `
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; border-left: 4px solid var(--primary-color);">
                <h4 style="color: var(--primary-color); margin-bottom: 0.5rem;">üéÅ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å</h4>
                <p style="color: var(--text-secondary); margin-bottom: 1rem;">100 PLEX –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –¥–µ–ø–æ–∑–∏—Ç–µ</p>
                <div style="color: var(--text-secondary); font-size: 0.8rem;">–°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</div>
            </div>
            
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; border-left: 4px solid var(--secondary-color); opacity: 0.5;">
                <h4 style="color: var(--secondary-color); margin-bottom: 0.5rem;">üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å</h4>
                <p style="color: var(--text-secondary); margin-bottom: 1rem;">50 PLEX –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞</p>
                <div style="color: var(--text-secondary); font-size: 0.8rem;">–°—Ç–∞—Ç—É—Å: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
            </div>
            
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 8px; border-left: 4px solid var(--warning-color); opacity: 0.5;">
                <h4 style="color: var(--warning-color); margin-bottom: 0.5rem;">üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h4>
                <p style="color: var(--text-secondary); margin-bottom: 1rem;">500 PLEX –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤</p>
                <div style="color: var(--text-secondary); font-size: 0.8rem;">–°—Ç–∞—Ç—É—Å: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
            </div>
        `;
    },
    
    // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
    topUpAccess(days) {
        if (window.GenesisPlatformAccess) {
            window.GenesisPlatformAccess.showPaymentModal(days);
        }
    },
    
    // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É
    topUpAccessCustom() {
        const amount = document.getElementById('custom-access-amount')?.value || 10;
        this.topUpAccess(parseInt(amount));
    },
    
    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    copyRefLink(link) {
        if (window.GenesisUtils) {
            window.GenesisUtils.copyToClipboard(link);
            this.showNotification('‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!', '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        }
    },
    
    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    shareRefLink(platform) {
        const refLink = `https://genesis.app/ref/${this.userData?.address?.substring(2, 8) || 'xxxxx'}`;
        const text = `üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ GENESIS 1.1 - DeFi –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –¥–æ 110%!`;
        
        let shareUrl = '';
        
        switch(platform) {
            case 'telegram':
                shareUrl = `https://t.me/share/url?url=${encodeURIComponent(refLink)}&text=${encodeURIComponent(text)}`;
                break;
            case 'whatsapp':
                shareUrl = `https://wa.me/?text=${encodeURIComponent(text + ' ' + refLink)}`;
                break;
            case 'twitter':
                shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(refLink)}`;
                break;
        }
        
        if (shareUrl) {
            window.open(shareUrl, '_blank');
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞
    async loadAccessStatus() {
        if (window.GenesisPlatformAccess && this.userData?.address) {
            const accessData = await window.GenesisPlatformAccess.checkUserAccessBalance(this.userData.address);
            this.updateAccessUI(accessData);
        }
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–æ—Å—Ç—É–ø–∞
    updateAccessUI(accessData) {
        if (window.GenesisPlatformAccess) {
            window.GenesisPlatformAccess.updateAccessUI(accessData);
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    async loadTransactions() {
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–∑ BSC
        console.log('üí∏ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    async loadAnalytics() {
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        console.log('üìà –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    loadAndDisplayDepositPlans() {
        const container = document.getElementById('deposit-plans-grid');
        if (!container) return;
        
        container.innerHTML = this.renderAllDepositPlans();
    }
};

console.log('üèõÔ∏è GENESIS CABINET loaded');
