// modules/home/hero/index.ts
// –ú–æ–¥—É–ª—å Hero –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

import './hero.module.css';

export interface HeroProps {
    title?: string;
    subtitle?: string;
    description?: string;
    ctaText?: string;
    ctaLink?: string;
}

export class HeroModule {
    private element: HTMLElement | null = null;
    private props: HeroProps;

    constructor(props: HeroProps = {}) {
        this.props = {
            title: 'GENESIS - –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞',
            subtitle: 'PLEX ONE Token',
            description: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–º–µ–Ω–∏—Ç –≤–∞—à –ø–æ–¥—Ö–æ–¥ –∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∏ –∑–∞—Ä–∞–±–æ—Ç–∫—É –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–º –º–∏—Ä–µ.',
            ctaText: '–ù–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å',
            ctaLink: '/auth',
            ...props
        };
    }

    mount(el: HTMLElement, context?: any): void {
        this.element = el;

        el.innerHTML = `
      <section class="hero">
        <div class="hero__container">
          <div class="hero__content">
            <h1 class="hero__title">${this.props.title}</h1>
            <h2 class="hero__subtitle">${this.props.subtitle}</h2>
            <p class="hero__description">${this.props.description}</p>
            <div class="hero__actions">
              <a href="${this.props.ctaLink}" class="hero__cta" data-route="${this.props.ctaLink}">
                ${this.props.ctaText}
              </a>
              <a href="/how-it-works" class="hero__secondary" data-route="/how-it-works">
                –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
              </a>
            </div>
          </div>
          <div class="hero__visual">
            <div class="hero__image">
              <div class="hero__logo">üöÄ</div>
            </div>
          </div>
        </div>
      </section>
    `;

        this.bindEvents();
    }

    unmount(): void {
        if (this.element) {
            this.element.innerHTML = '';
            this.element = null;
        }
    }

    private bindEvents(): void {
        if (!this.element) return;

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ CTA –∫–Ω–æ–ø–∫–∞–º
        const ctaButtons = this.element.querySelectorAll('[data-route]');
        ctaButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const target = e.target as HTMLElement;
                const route = target.dataset.route;
                if (route) {
                    e.preventDefault();
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é —á–µ—Ä–µ–∑ window.location –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                    window.location.href = route;
                }
            });
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—Å–æ–≤
    updateProps(newProps: Partial<HeroProps>): void {
        this.props = { ...this.props, ...newProps };
        if (this.element) {
            this.mount(this.element);
        }
    }
}

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
export const module = {
    id: 'hero',
    
    mount(el: HTMLElement, props?: HeroProps): void {
        const heroModule = new HeroModule(props);
        heroModule.mount(el);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –º–æ–¥—É–ª—å –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ unmount
        (el as any)._heroModule = heroModule;
    },
    
    unmount(el: HTMLElement): void {
        const heroModule = (el as any)._heroModule;
        if (heroModule && typeof heroModule.unmount === 'function') {
            heroModule.unmount();
        }
        (el as any)._heroModule = null;
    },
    
    canActivate(ctx?: any): boolean {
        return true;
    },
    
    init(): void {
        console.log('Hero module initialized');
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export default module;