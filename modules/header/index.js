/**
 * Header Module
 * –ú–æ–¥—É–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–∞–π—Ç–∞
 */

class HeaderModule {
    constructor() {
        this.name = 'header';
        this.version = '1.0.0';
        this.isLoaded = false;
    }

    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è Header...');
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∏–ª–µ–π
            await this.loadStyles();
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞
            await this.loadTemplate();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            this.initComponents();
            
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
            this.subscribeToEvents();
            
            this.isLoaded = true;
            console.log('‚úÖ –ú–æ–¥—É–ª—å Header —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            window.dispatchEvent(new CustomEvent('module:loaded', {
                detail: { module: this.name, version: this.version }
            }));
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è Header:', error);
            throw error;
        }
    }

    async loadStyles() {
        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = '/modules/header/style.css';
        link.onload = () => console.log('üì¶ –°—Ç–∏–ª–∏ Header –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        link.onerror = () => console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∏–ª–∏ Header');
        document.head.appendChild(link);
    }

    async loadTemplate() {
        try {
            const response = await fetch('/modules/header/template.html');
            const template = await response.text();
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const container = document.getElementById('header-container') || 
                            document.querySelector('[data-module="header"]');
            
            if (container) {
                container.innerHTML = template;
                console.log('üìÑ –®–∞–±–ª–æ–Ω Header –∑–∞–≥—Ä—É–∂–µ–Ω');
            } else {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è Header –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞ Header:', error);
        }
    }

    initComponents() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.initNavigation();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        this.initMobileMenu();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
        this.initSearch();
    }

    initNavigation() {
        const nav = document.querySelector('.header-nav');
        if (nav) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
            const links = nav.querySelectorAll('a');
            links.forEach(link => {
                link.addEventListener('click', (e) => {
                    links.forEach(l => l.classList.remove('active'));
                    link.classList.add('active');
                });
            });
        }
    }

    initMobileMenu() {
        const mobileToggle = document.querySelector('.mobile-menu-toggle');
        const mobileMenu = document.querySelector('.mobile-menu');
        
        if (mobileToggle && mobileMenu) {
            mobileToggle.addEventListener('click', () => {
                mobileMenu.classList.toggle('active');
                mobileToggle.classList.toggle('active');
            });
        }
    }

    initSearch() {
        const searchInput = document.querySelector('.header-search input');
        const searchResults = document.querySelector('.search-results');
        
        if (searchInput) {
            let searchTimeout;
            
            searchInput.addEventListener('input', (e) => {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    this.performSearch(e.target.value);
                }, 300);
            });
        }
    }

    async performSearch(query) {
        if (query.length < 2) return;
        
        try {
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞
            console.log('üîç –ü–æ–∏—Å–∫:', query);
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏ –æ –ø–æ–∏—Å–∫–µ
            window.dispatchEvent(new CustomEvent('search:performed', {
                detail: { query }
            }));
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
        }
    }

    subscribeToEvents() {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        window.addEventListener('auth:login', () => {
            this.updateAuthState(true);
        });
        
        window.addEventListener('auth:logout', () => {
            this.updateAuthState(false);
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        window.addEventListener('theme:changed', (e) => {
            this.updateTheme(e.detail.theme);
        });
    }

    updateAuthState(isLoggedIn) {
        const authElements = document.querySelectorAll('.auth-required');
        const guestElements = document.querySelectorAll('.guest-only');
        
        authElements.forEach(el => {
            el.style.display = isLoggedIn ? 'block' : 'none';
        });
        
        guestElements.forEach(el => {
            el.style.display = isLoggedIn ? 'none' : 'block';
        });
    }

    updateTheme(theme) {
        document.body.setAttribute('data-theme', theme);
    }

    destroy() {
        console.log('üóëÔ∏è –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è Header');
        this.isLoaded = false;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
if (typeof module !== 'undefined' && module.exports) {
    module.exports = HeaderModule;
} else {
    window.HeaderModule = HeaderModule;
}