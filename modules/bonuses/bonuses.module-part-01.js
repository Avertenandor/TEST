        this.showNotification(`–ü–æ–ª—É—á–µ–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: ${amount} PLEX!`, 'success');
    }
    
    showMultiplierEffect(multiplierValue) {
        const effect = document.createElement('div');
        effect.className = 'multiplier-effect';
        effect.innerHTML = `<span>x${multiplierValue}</span>`;
        
        this.container.appendChild(effect);
        
        setTimeout(() => effect.remove(), 2000);
    }
    
    showAchievementUnlocked(achievement) {
        const notification = document.createElement('div');
        notification.className = 'achievement-unlocked-notification';
        notification.innerHTML = `
            <div class="achievement-unlocked-content">
                <div class="achievement-icon">${achievement.icon}</div>
                <div class="achievement-text">
                    <div class="achievement-title">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!</div>
                    <div class="achievement-name">${achievement.name}</div>
                </div>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => notification.remove(), 5000);
    }
    
    showRewardAnimation(reward) {
        const rewardEl = document.createElement('div');
        rewardEl.className = 'reward-animation';
        rewardEl.innerHTML = `
            <div class="reward-content">
                <div class="reward-icon">üéÅ</div>
                <div class="reward-text">${reward.description}</div>
                <div class="reward-value">+${reward.value} ${reward.currency}</div>
            </div>
        `;
        
        this.container.appendChild(rewardEl);
        
        setTimeout(() => rewardEl.remove(), 4000);
    }
    
    async showConfirmation(title, message) {
        // –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ confirm
        // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        return confirm(`${title}\n\n${message}`);
    }
    
    showNotification(message, type = 'info') {
        if (this.context.eventBus) {
            this.context.eventBus.emit('notification:show', {
                type: type,
                message: message,
                duration: 3000
            });
        }
    }
    
    subscribeToEvents() {
        if (!this.context.eventBus) return;
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ (–≤–ª–∏—è–µ—Ç –Ω–∞ –±–æ–Ω—É—Å—ã)
        this.subscriptions.push(
            this.context.eventBus.on('deposit:created', () => {
                this.checkDepositBonuses();
            })
        );
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        this.subscriptions.push(
            this.context.eventBus.on('transaction:completed', (data) => {
                this.updateAchievementsProgress();
            })
        );
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–Ω—è (–¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤)
        this.subscriptions.push(
            this.context.eventBus.on('day:changed', () => {
                this.resetDailyBonuses();
            })
        );
    }
    
    checkDepositBonuses() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ–Ω—É—Å—ã –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
        const depositCount = window.store.get('deposits.activeCount') || 0;
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–æ–Ω—É—Å—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if (depositCount >= 5 && !this.state.hasBonus('deposit5')) {
            this.activateBonus('deposit5');
        }
        
        if (depositCount >= 10 && !this.state.hasBonus('deposit10')) {
            this.activateBonus('deposit10');
        }
    }
    
    resetDailyBonuses() {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
        this.state.resetDailyBonus();
        this.updateUI();
    }
    
    startAutoUpdate() {
        // –û–±–Ω–æ–≤–ª—è–µ–º UI –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –¥–ª—è —Ç–∞–π–º–µ—Ä–æ–≤
        this.updateInterval = setInterval(() => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤
            const timerElements = this.container.querySelectorAll('.bonus-timer');
            timerElements.forEach(timer => {
                const expiresAt = timer.dataset.expires;
                if (expiresAt) {
                    timer.textContent = `–û—Å—Ç–∞–ª–æ—Å—å: ${this.formatTimeRemaining(expiresAt)}`;
                }
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞
            this.updateNextBonusTimer();
            
        }, 1000);
    }
    
    getFallbackTemplate() {
        return `
            <div class="bonuses-module">
                <div class="module-header">
                    <h2>üéÅ –ë–æ–Ω—É—Å—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
                    <div class="bonus-stats">
                        <div class="stat-item">
                            <span class="stat-label">–í—Å–µ–≥–æ –±–æ–Ω—É—Å–æ–≤:</span>
                            <span class="stat-value" id="total-bonus-count">0</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">–ú–Ω–æ–∂–∏—Ç–µ–ª—å:</span>
                            <span class="stat-value" id="current-multiplier">x1</span>
                        </div>
                    </div>
                </div>
                
                <div class="bonuses-grid">
                    <!-- –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å -->
                    <div class="bonus-section daily-bonus">
                        <h3>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</h3>
                        <div class="daily-bonus-content">
                            <div class="bonus-icon">üìÖ</div>
                            <div class="bonus-info">
                                <p>–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑:</p>
                                <div class="timer" id="next-bonus-timer">--:--:--</div>
                            </div>
                            <button class="btn btn-primary" id="daily-bonus-btn">
                                –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å
                            </button>
                        </div>
                    </div>
                    
                    <!-- –ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã -->
                    <div class="bonus-section active-bonuses">
                        <h3>–ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã</h3>
                        <div id="active-bonuses-list" class="bonuses-list">
                            <div class="no-bonuses">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤</div>
                        </div>
                    </div>
                    
                    <!-- –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ -->
                    <div class="bonus-section multipliers">
                        <h3>–ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–æ—Ö–æ–¥–∞</h3>
                        <div class="multipliers-grid">
                            <button class="multiplier-btn" data-multiplier="2">
                                <span class="multiplier-value">x2</span>
                                <span class="multiplier-cost">100 PLEX</span>
                            </button>
                            <button class="multiplier-btn" data-multiplier="3">
                                <span class="multiplier-value">x3</span>
                                <span class="multiplier-cost">250 PLEX</span>
                            </button>
                            <button class="multiplier-btn" data-multiplier="5">
                                <span class="multiplier-value">x5</span>
                                <span class="multiplier-cost">500 PLEX</span>
                            </button>
                        </div>
                    </div>
                    
                    <!-- –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è -->
                    <div class="bonus-section achievements">
                        <h3>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
                        <div id="achievements-container" class="achievements-list">
                            <!-- –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
    
    destroy() {
        console.log('üßπ Destroying Bonuses Module...');
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (this.updateInterval) {
            clearInterval(this.updateInterval);
        }
        
        // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–æ–±—ã—Ç–∏–π
        this.subscriptions.forEach(unsub => {
            if (typeof unsub === 'function') unsub();
        });
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π
        const link = document.querySelector(`link[data-module="${this.name}"]`);
        if (link) link.remove();
        
        // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        if (this.container) {
            this.container.innerHTML = '';
        }
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if (this.state) {
            this.state.save();
        }
        
        console.log('‚úÖ Bonuses Module destroyed');
    }
}
