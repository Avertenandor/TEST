// modules/analytics/components/reports-generator.js
// MCP-MARKER:COMPONENT:ANALYTICS:REPORTS - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –º–æ–¥—É–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏

export default class ReportsGenerator {
    constructor(container, state) {
        this.container = container;
        this.state = state;
        this.templates = new Map();
        
        this.init();
    }
    
    // MCP-MARKER:METHOD:REPORTS:INIT - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    init() {
        this.initTemplates();
        this.render();
    }
    
    // MCP-MARKER:METHOD:REPORTS:INIT_TEMPLATES - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤
    initTemplates() {
        // –®–∞–±–ª–æ–Ω PDF –æ—Ç—á–µ—Ç–∞
        this.templates.set('pdf', {
            header: (data) => `
                <h1>–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç GENESIS DeFi Platform</h1>
                <p>–ü–µ—Ä–∏–æ–¥: ${data.period}</p>
                <p>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleDateString('ru-RU')}</p>
            `,
            body: (data) => this.generatePDFBody(data),
            footer: (data) => `
                <p>¬© ${new Date().getFullYear()} GENESIS DeFi Platform</p>
            `
        });
        
        // –®–∞–±–ª–æ–Ω CSV –æ—Ç—á–µ—Ç–∞
        this.templates.set('csv', {
            generate: (data) => this.generateCSV(data)
        });
        
        // –®–∞–±–ª–æ–Ω JSON –æ—Ç—á–µ—Ç–∞
        this.templates.set('json', {
            generate: (data) => this.generateJSON(data)
        });
    }
    
    // MCP-MARKER:METHOD:REPORTS:RENDER - –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ UI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    render() {
        if (!this.container) return;
        
        this.container.innerHTML = `
            <div class="reports-generator">
                <div class="reports-header">
                    <h3>üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤</h3>
                </div>
                
                <div class="report-options">
                    <div class="option-group">
                        <label>–¢–∏–ø –æ—Ç—á–µ—Ç–∞:</label>
                        <select id="report-type" class="form-control">
                            <option value="summary">–°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç</option>
                            <option value="deposits">–û—Ç—á–µ—Ç –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º</option>
                            <option value="transactions">–û—Ç—á–µ—Ç –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º</option>
                            <option value="earnings">–û—Ç—á–µ—Ç –ø–æ –¥–æ—Ö–æ–¥–∞–º</option>
                            <option value="portfolio">–û—Ç—á–µ—Ç –ø–æ –ø–æ—Ä—Ç—Ñ–µ–ª—é</option>
                        </select>
                    </div>
                    
                    <div class="option-group">
                        <label>–§–æ—Ä–º–∞—Ç:</label>
                        <select id="report-format" class="form-control">
                            <option value="pdf">PDF</option>
                            <option value="csv">CSV</option>
                            <option value="json">JSON</option>
                        </select>
                    </div>
                    
                    <div class="option-group">
                        <label>–ü–µ—Ä–∏–æ–¥:</label>
                        <select id="report-period" class="form-control">
                            <option value="day">–ó–∞ –¥–µ–Ω—å</option>
                            <option value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</option>
                            <option value="month">–ó–∞ –º–µ—Å—è—Ü</option>
                            <option value="quarter">–ó–∞ –∫–≤–∞—Ä—Ç–∞–ª</option>
                            <option value="year">–ó–∞ –≥–æ–¥</option>
                            <option value="all">–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</option>
                        </select>
                    </div>
                    
                    <div class="option-group">
                        <label>–í–∫–ª—é—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏:</label>
                        <input type="checkbox" id="include-charts" checked>
                    </div>
                    
                    <button id="generate-report" class="btn btn-primary">
                        üì• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç
                    </button>
                </div>
                
                <div class="recent-reports">
                    <h4>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã:</h4>
                    <div id="reports-list"></div>
                </div>
            </div>
        `;
        
        this.attachEventHandlers();
    }
    
    // MCP-MARKER:METHOD:REPORTS:ATTACH_HANDLERS - –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    attachEventHandlers() {
        const generateBtn = this.container.querySelector('#generate-report');
        if (generateBtn) {
            generateBtn.addEventListener('click', () => this.handleGenerateClick());
        }
    }
    
    // MCP-MARKER:METHOD:REPORTS:HANDLE_GENERATE - –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    async handleGenerateClick() {
        const type = this.container.querySelector('#report-type').value;
        const format = this.container.querySelector('#report-format').value;
        const period = this.container.querySelector('#report-period').value;
        const includeCharts = this.container.querySelector('#include-charts').checked;
        
        const report = await this.generateReport({
            type,
            format,
            period,
            includeCharts,
            metrics: this.state.getMetrics(),
            charts: includeCharts ? this.state.getAllChartsData() : null
        });
        
        this.saveReportToHistory(report);
        this.updateRecentReports();
        
        return report;
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    async generateReport(options) {
        const { type, format, period, metrics, charts } = options;
        
        let content;
        let mimeType;
        let extension;
        
        switch (format) {
            case 'pdf':
                content = await this.generatePDFReport(options);
                mimeType = 'application/pdf';
                extension = 'pdf';
                break;
                
            case 'csv':
                content = this.generateCSVReport(options);
                mimeType = 'text/csv';
                extension = 'csv';
                break;
                
            case 'json':
                content = this.generateJSONReport(options);
                mimeType = 'application/json';
                extension = 'json';
                break;
                
            default:
                throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: ${format}`);
        }
        
        return {
            type,
            format,
            period,
            content,
            mimeType,
            extension,
            timestamp: Date.now(),
            filename: this.generateFilename(type, period, extension)
        };
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE_PDF - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –æ—Ç—á–µ—Ç–∞
    async generatePDFReport(options) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ç–∏–ø–∞ jsPDF
        // –î–ª—è –¥–µ–º–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ PDF
        
        const html = `
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç GENESIS</title>
                <style>
                    body { font-family: Arial, sans-serif; padding: 20px; }
                    h1 { color: #333; border-bottom: 2px solid #667eea; padding-bottom: 10px; }
                    h2 { color: #555; margin-top: 30px; }
                    table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                    th, td { padding: 10px; border: 1px solid #ddd; text-align: left; }
                    th { background-color: #f5f5f5; }
                    .metric { display: inline-block; margin: 10px 20px 10px 0; }
                    .metric-label { font-weight: bold; color: #666; }
                    .metric-value { font-size: 1.2em; color: #333; }
                    .chart { margin: 20px 0; padding: 20px; border: 1px solid #ddd; }
                </style>
            </head>
            <body>
                ${this.generatePDFContent(options)}
            </body>
            </html>
        `;
        
        return html;
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE_PDF_CONTENT - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF
    generatePDFContent(options) {
        const { type, period, metrics, charts } = options;
        
        let content = `
            <h1>–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç GENESIS DeFi Platform</h1>
            <p><strong>–¢–∏–ø –æ—Ç—á–µ—Ç–∞:</strong> ${this.getReportTypeName(type)}</p>
            <p><strong>–ü–µ—Ä–∏–æ–¥:</strong> ${this.getPeriodName(period)}</p>
            <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${new Date().toLocaleDateString('ru-RU')}</p>
            
            <h2>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h2>
            <div class="metrics">
                <div class="metric">
                    <span class="metric-label">–û–±—â–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</span>
                    <span class="metric-value">$${metrics.totalInvested?.toFixed(2) || '0.00'}</span>
                </div>
                <div class="metric">
                    <span class="metric-label">–û–±—â–∏–π –¥–æ—Ö–æ–¥:</span>
                    <span class="metric-value">$${metrics.totalEarned?.toFixed(2) || '0.00'}</span>
                </div>
                <div class="metric">
                    <span class="metric-label">ROI:</span>
                    <span class="metric-value">${metrics.roi?.toFixed(2) || '0.00'}%</span>
                </div>
                <div class="metric">
                    <span class="metric-label">–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã:</span>
                    <span class="metric-value">${metrics.activeDeposits || 0}</span>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
        switch (type) {
            case 'deposits':
                content += this.generateDepositsSection(metrics);
                break;
            case 'transactions':
                content += this.generateTransactionsSection(metrics);
                break;
            case 'earnings':
                content += this.generateEarningsSection(metrics);
                break;
            case 'portfolio':
                content += this.generatePortfolioSection(metrics);
                break;
            default:
                content += this.generateSummarySection(metrics);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã
        if (charts) {
            content += `
                <h2>–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã</h2>
                <div class="charts">
                    ${this.generateChartsSection(charts)}
                </div>
            `;
        }
        
        content += `
            <div style="margin-top: 50px; padding-top: 20px; border-top: 1px solid #ddd;">
                <p style="text-align: center; color: #999;">
                    ¬© ${new Date().getFullYear()} GENESIS DeFi Platform | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
                </p>
            </div>
        `;
        
        return content;
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE_CSV - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSV –æ—Ç—á–µ—Ç–∞
    generateCSVReport(options) {
        const { type, metrics } = options;
        
        let csv = '–ü–∞—Ä–∞–º–µ—Ç—Ä,–ó–Ω–∞—á–µ–Ω–∏–µ\n';
        
        // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        csv += `–û–±—â–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π,$${metrics.totalInvested?.toFixed(2) || '0.00'}\n`;
        csv += `–û–±—â–∏–π –¥–æ—Ö–æ–¥,$${metrics.totalEarned?.toFixed(2) || '0.00'}\n`;
        csv += `ROI,${metrics.roi?.toFixed(2) || '0.00'}%\n`;
        csv += `–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã,${metrics.activeDeposits || 0}\n`;
        csv += `–°—Ä–µ–¥–Ω–∏–π –¥–µ–ø–æ–∑–∏—Ç,$${metrics.avgDepositAmount?.toFixed(2) || '0.00'}\n`;
        csv += `–°—Ä–µ–¥–Ω–∏–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥,$${metrics.avgDailyIncome?.toFixed(2) || '0.00'}\n`;
        csv += `–ü—Ä–æ–≥–Ω–æ–∑ –º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞,$${metrics.projectedMonthlyEarnings?.toFixed(2) || '0.00'}\n`;
        csv += `–ü—Ä–æ–≥–Ω–æ–∑ –≥–æ–¥–æ–≤–æ–≥–æ –¥–æ—Ö–æ–¥–∞,$${metrics.projectedYearlyEarnings?.toFixed(2) || '0.00'}\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if (type === 'deposits' && metrics.deposits) {
            csv += '\n\n–î–µ–ø–æ–∑–∏—Ç—ã\n';
            csv += 'ID,–ü–ª–∞–Ω,–°—É–º–º–∞,–ü—Ä–æ—Ü–µ–Ω—Ç,–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ,–°—Ç–∞—Ç—É—Å\n';
            metrics.deposits.forEach(deposit => {
                csv += `${deposit.id},${deposit.plan},$${deposit.amount},${deposit.percentage}%,$${deposit.earned},${deposit.status}\n`;
            });
        }
        
        return csv;
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE_JSON - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JSON –æ—Ç—á–µ—Ç–∞
    generateJSONReport(options) {
        const { type, period, metrics, charts } = options;
        
        const report = {
            meta: {
                type: type,
                period: period,
                generated: new Date().toISOString(),
                platform: 'GENESIS DeFi Platform',
                version: '1.0.0'
            },
            metrics: metrics,
            charts: charts || null,
            summary: {
                totalInvested: metrics.totalInvested || 0,
                totalEarned: metrics.totalEarned || 0,
                roi: metrics.roi || 0,
                activeDeposits: metrics.activeDeposits || 0
            }
        };
        
        return JSON.stringify(report, null, 2);
    }
    
    // MCP-MARKER:METHOD:REPORTS:GENERATE_SECTIONS - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ü–∏–π –æ—Ç—á–µ—Ç–∞
    generateDepositsSection(metrics) {
        return `
            <h2>–ê–Ω–∞–ª–∏–∑ –¥–µ–ø–æ–∑–∏—Ç–æ–≤</h2>
            <table>
                <thead>
                    <tr>
                        <th>–ü–ª–∞–Ω</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–î–Ω–µ–≤–Ω–æ–π %</th>
                        <th>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                    </tr>
                </thead>
                <tbody>
                    ${this.generateDepositsRows(metrics.deposits || [])}
                </tbody>
            </table>
        `;
    }
    
    generateTransactionsSection(metrics) {
        return `
            <h2>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h2>
            <table>
                <thead>
                    <tr>
                        <th>–î–∞—Ç–∞</th>
                        <th>–¢–∏–ø</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                    </tr>
                </thead>
                <tbody>
                    ${this.generateTransactionsRows(metrics.transactions || [])}
                </tbody>
            </table>
        `;
    }
    
    generateEarningsSection(metrics) {
        return `
            <h2>–ê–Ω–∞–ª–∏–∑ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</h2>
            <div class="earnings-analysis">
                <p><strong>–°—Ä–µ–¥–Ω–∏–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥:</strong> $${metrics.avgDailyIncome?.toFixed(2) || '0.00'}</p>
                <p><strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥:</strong> $${metrics.maxDailyIncome?.toFixed(2) || '0.00'}</p>
                <p><strong>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥:</strong> $${metrics.minDailyIncome?.toFixed(2) || '0.00'}</p>
                <p><strong>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 30 –¥–Ω–µ–π:</strong> $${metrics.projectedMonthlyEarnings?.toFixed(2) || '0.00'}</p>
                <p><strong>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 365 –¥–Ω–µ–π:</strong> $${metrics.projectedYearlyEarnings?.toFixed(2) || '0.00'}</p>
            </div>
        `;
    }
    
    generatePortfolioSection(metrics) {
        return `
            <h2>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è</h2>
            <div class="portfolio-structure">
                <p><strong>–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–æ–≤:</strong> ${metrics.totalAssets || 0}</p>
                <p><strong>–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è:</strong> ${metrics.diversificationScore?.toFixed(2) || '0.00'}%</p>
                <p><strong>–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</strong> ${metrics.riskLevel || '–°—Ä–µ–¥–Ω–∏–π'}</p>
            </div>
        `;
    }
    
    generateSummarySection(metrics) {
        return `
            <h2>–°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div class="summary">
                <p>–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç ${metrics.performanceScore > 70 ? '–æ—Ç–ª–∏—á–Ω—ã–µ' : metrics.performanceScore > 40 ? '—Ö–æ—Ä–æ—à–∏–µ' : '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ'} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.</p>
                <p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ${metrics.roi > 100 ? '–ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é' : '—Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π'}.</p>
            </div>
        `;
    }
    
    generateChartsSection(charts) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã —Ä–µ–Ω–¥–µ—Ä–∏–ª–∏—Å—å –≥—Ä–∞—Ñ–∏–∫–∏
        return `
            <div class="chart">
                <h3>–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</h3>
                <p>[–ì—Ä–∞—Ñ–∏–∫ –±—É–¥–µ—Ç –∑–¥–µ—Å—å]</p>
            </div>
            <div class="chart">
                <h3>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è</h3>
                <p>[–î–∏–∞–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å]</p>
            </div>
        `;
    }
    
    generateDepositsRows(deposits) {
        if (!deposits || deposits.length === 0) {
            return '<tr><td colspan="5">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö</td></tr>';
        }
        
        return deposits.map(deposit => `
            <tr>
                <td>${deposit.plan || 'N/A'}</td>
                <td>$${deposit.amount?.toFixed(2) || '0.00'}</td>
                <td>${deposit.percentage || '0'}%</td>
                <td>$${deposit.earned?.toFixed(2) || '0.00'}</td>
                <td>${deposit.status || 'active'}</td>
            </tr>
        `).join('');
    }
    
    generateTransactionsRows(transactions) {
        if (!transactions || transactions.length === 0) {
            return '<tr><td colspan="4">–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</td></tr>';
        }
        
        return transactions.slice(0, 10).map(tx => `
            <tr>
                <td>${new Date(tx.timestamp).toLocaleDateString('ru-RU')}</td>
                <td>${tx.type || 'N/A'}</td>
                <td>$${tx.amount?.toFixed(2) || '0.00'}</td>
