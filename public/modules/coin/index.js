import { CONFIG } from '../../app/config.js';

export default {
  async mount(root) {
    const id = CONFIG.coin?.coingeckoId || 'bitcoin';
    root.innerHTML = await this.template(id);
    this.loadWidget();
    this.loadData(id, CONFIG.coin?.currency || 'usd');
    return () => { root.innerHTML = ''; };
  },

  async template(id) {
    return `
      <section class="coin-section" role="region" aria-label="–û –º–æ–Ω–µ—Ç–µ PLEX ONE">
        <div class="genesis-container">
          <h2 class="coin-title">ü™ô –û –º–æ–Ω–µ—Ç–µ PLEX ONE</h2>
          
          <!-- –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
          <div class="coin-info">
            <p class="coin-desc">PLEX ONE ‚Äî —á–∏—Å—Ç–∞—è, –ø–æ–Ω—è—Ç–Ω–∞—è –º–æ–Ω–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏: –≤ –Ω–µ–π –Ω–µ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –¥–Ω–∞.</p>
            <div class="coin-details">
              <div class="detail-card">
                <strong>–ö–æ–Ω—Ç—Ä–∞–∫—Ç:</strong>
                <code>0xdf179b6cAdBC61FFD86A3D2e55f6d6e083ade6c1</code>
              </div>
              <div class="detail-card">
                <strong>–°–µ—Ç—å:</strong> BSC (Binance Smart Chain)
              </div>
              <div class="detail-card">
                <strong>Decimals:</strong> 9
              </div>
            </div>
          </div>

          <!-- –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω–æ—Å—Ç—å -->
          <div class="utility-info">
            <h3>üîë –£—Ç–∏–ª–∏—Ç–∏-—Ç–æ–∫–µ–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h3>
            <p>–¶–µ–Ω–Ω–æ—Å—Ç—å PLEX ONE –≤ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ —É—Ç–∏–ª–∏—Ç–∏-—Ç–æ–∫–µ–Ω. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –Ω–∞ –ø–æ–ª–Ω–æ–º –ø–∞—Å—Å–∏–≤–µ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–µ–Ω—å–≥–∏, –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é ‚Äî –æ—Ç–¥–∞—Ç—å –æ–¥–Ω—É –º–æ–Ω–µ—Ç—É PLEX ONE.</p>
          </div>

          <!-- –ì–¥–µ –∫—É–ø–∏—Ç—å -->
          <div class="buy-info">
            <h3>üí∞ –ì–¥–µ –∫—É–ø–∏—Ç—å PLEX ONE</h3>
            <div class="buy-options">
              <a href="https://pancakeswap.finance/swap?outputCurrency=0xdf179b6cAdBC61FFD86A3D2e55f6d6e083ade6c1" class="buy-btn" target="_blank">PancakeSwap</a>
              <a href="https://www.dextools.io/app/bsc/pair-explorer/0xdf179b6cAdBC61FFD86A3D2e55f6d6e083ade6c1" class="buy-btn" target="_blank">DexTools</a>
            </div>
          </div>

          <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
          <div class="coin-stats">
            <div class="coin-card"><div class="label">–¶–µ–Ω–∞</div><div class="value" data-coin-price>‚Äî</div></div>
            <div class="coin-card"><div class="label">–†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è</div><div class="value" data-coin-mcap>‚Äî</div></div>
            <div class="coin-card"><div class="label">24—á –æ–±—ä—ë–º</div><div class="value" data-coin-vol>‚Äî</div></div>
            <div class="coin-card"><div class="label">–ò–∑–º–µ–Ω–µ–Ω–∏–µ 24—á</div><div class="value" data-coin-chg>‚Äî</div></div>
          </div>
          
          <!-- –ì—Ä–∞—Ñ–∏–∫ -->
          <div class="coin-chart">
            <coingecko-coin-price-chart-widget coin-id="${id}" currency="usd" height="300" locale="ru"></coingecko-coin-price-chart-widget>
          </div>
        </div>
      </section>
    `;
  },

  loadWidget() {
    if (document.querySelector('script[src*="widgets.coingecko.com"]')) return;
    const s = document.createElement('script');
    s.src = 'https://widgets.coingecko.com/coingecko-coin-price-chart-widget.js';
    s.async = true; document.head.appendChild(s);
  },

  async loadData(id, vs) {
    try {
      const url = `https://api.coingecko.com/api/v3/coins/${encodeURIComponent(id)}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;
      const res = await fetch(url, { cache: 'no-cache' });
      const data = await res.json();
      const md = data.market_data || {};
      const fmt = (n, d=2) => (n==null? '‚Äî' : new Intl.NumberFormat('ru-RU',{maximumFractionDigits:d}).format(n));

      const bySel = (sel) => document.querySelector(sel);
      bySel('[data-coin-name]').textContent = data.name || id;
      bySel('[data-coin-price]').textContent = `$${fmt(md.current_price?.[vs], 6)}`;
      bySel('[data-coin-mcap]').textContent = `$${fmt(md.market_cap?.[vs], 0)}`;
      bySel('[data-coin-vol]').textContent = `$${fmt(md.total_volume?.[vs], 0)}`;
      const chg = md.price_change_percentage_24h;
      bySel('[data-coin-chg]').textContent = (chg==null? '‚Äî' : `${chg.toFixed(2)}%`);
      bySel('[data-coin-chg]').style.color = chg>0? '#4caf50' : (chg<0? '#f44336' : 'inherit');
      bySel('[data-coin-supply]').textContent = fmt(md.circulating_supply, 0);
    } catch (e) {
      console.warn('[COIN] Failed to load data:', e);
    }
  }
};


