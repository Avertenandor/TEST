import { emit } from '../../../app/pubsub.js';

export default {
    async mount(root, config) {
        console.log('[CABINET/SHELL] –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è cabinet/shell');
        
        const response = await fetch('/public/modules/cabinet/shell/template.html');
        const template = await response.text();
        root.innerHTML = template;
        
        this.initShell(root);
        
        console.log('[CABINET/SHELL] –ú–æ–¥—É–ª—å cabinet/shell —É—Å–ø–µ—à–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
        
        return () => {
            console.log('[CABINET/SHELL] –†–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è cabinet/shell');
            this.cleanup(root);
        };
    },
    
    initShell(root) {
        const navLinks = root.querySelectorAll('.genesis-cabinet-nav-link');
        const menuBtn = root.querySelector('[data-action="toggle-sidebar"]');
        const logoutBtn = root.querySelector('[data-action="logout"]');
        const notificationsBtn = root.querySelector('[data-action="notifications"]');
        const contentArea = root.querySelector('[data-content-area]');
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è
        navLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const section = link.getAttribute('data-section');
                this.switchSection(section, link);
            });
        });
        
        // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
        if (menuBtn) {
            menuBtn.addEventListener('click', () => {
                const sidebar = root.querySelector('.genesis-cabinet-sidebar');
                sidebar.classList.toggle('open');
            });
        }
        
        // –í—ã—Ö–æ–¥
        if (logoutBtn) {
            logoutBtn.addEventListener('click', () => {
                this.handleLogout();
            });
        }
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (notificationsBtn) {
            notificationsBtn.addEventListener('click', () => {
                this.handleNotifications();
            });
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        this.loadSection('dashboard', contentArea);
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        this.listenToEvents();
    },
    
    switchSection(section, activeLink) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Å—ã–ª–∫—É
        const allLinks = document.querySelectorAll('.genesis-cabinet-nav-link');
        allLinks.forEach(link => link.classList.remove('genesis-cabinet-nav-link-active'));
        activeLink.classList.add('genesis-cabinet-nav-link-active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pageTitle = document.querySelector('.genesis-cabinet-page-title');
        if (pageTitle) {
            const titles = {
                dashboard: '–î–∞—à–±–æ—Ä–¥',
                profile: '–ü—Ä–æ—Ñ–∏–ª—å',
                balances: '–ë–∞–ª–∞–Ω—Å—ã',
                deposits: '–î–µ–ø–æ–∑–∏—Ç—ã',
                rewards: '–ù–∞–≥—Ä–∞–¥—ã',
                referrals: '–†–µ—Ñ–µ—Ä–∞–ª—ã',
                transactions: '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
                settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
            };
            pageTitle.textContent = titles[section] || '–°—Ç—Ä–∞–Ω–∏—Ü–∞';
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
        const sidebar = document.querySelector('.genesis-cabinet-sidebar');
        if (sidebar) {
            sidebar.classList.remove('open');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏
        const contentArea = document.querySelector('[data-content-area]');
        if (contentArea) {
            this.loadSection(section, contentArea);
        }
        
        // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ
        emit('cabinet:section-change', { section });
    },
    
    async loadSection(section, contentArea) {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            contentArea.innerHTML = `
                <div class="genesis-cabinet-loading">
                    <div class="genesis-cabinet-loading-spinner"></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ ${section}...</p>
                </div>
            `;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å —Å–µ–∫—Ü–∏–∏
            const modulePath = `./modules/cabinet/${section}/index.js`;
            const module = await import(modulePath);
            
            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–æ–¥—É–ª—è
            const moduleContainer = document.createElement('div');
            moduleContainer.setAttribute('data-module', `cabinet/${section}`);
            contentArea.innerHTML = '';
            contentArea.appendChild(moduleContainer);
            
            // –ú–æ–Ω—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
            await module.default.mount(moduleContainer, {});
            
        } catch (error) {
            console.error(`[CABINET/SHELL] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–∫—Ü–∏–∏ ${section}:`, error);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            contentArea.innerHTML = `
                <div class="genesis-cabinet-error">
                    <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                    <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞–∑–¥–µ–ª "${section}". –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.</p>
                    <button class="genesis-btn genesis-btn-primary" onclick="location.reload()">
                        –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            `;
        }
    },
    
    handleLogout() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?')) {
            emit('auth:logout', {});
            
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            setTimeout(() => {
                window.location.href = '/';
            }, 1000);
        }
    },
    
    handleNotifications() {
        emit('notifications:show', {});
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
        emit('modal:show', {
            title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
            content: `
                <div class="notifications-list">
                    <div class="notification-item">
                        <span class="notification-icon">üí∞</span>
                        <div class="notification-content">
                            <h4>–ù–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç</h4>
                            <p>–í–∞—à –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ $100 —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</p>
                            <span class="notification-time">2 –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥</span>
                        </div>
                    </div>
                    <div class="notification-item">
                        <span class="notification-icon">üéÅ</span>
                        <div class="notification-content">
                            <h4>–ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω</h4>
                            <p>–í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                            <span class="notification-time">1 —á–∞—Å –Ω–∞–∑–∞–¥</span>
                        </div>
                    </div>
                    <div class="notification-item">
                        <span class="notification-icon">üë•</span>
                        <div class="notification-content">
                            <h4>–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª</h4>
                            <p>–ö –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª</p>
                            <span class="notification-time">3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</span>
                        </div>
                    </div>
                </div>
            `
        });
    },
    
    listenToEvents() {
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        document.addEventListener('auth:logout', () => {
            console.log('[CABINET/SHELL] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
        });
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        document.addEventListener('notifications:update', (e) => {
            const badge = document.querySelector('.genesis-cabinet-notifications-badge');
            if (badge) {
                badge.textContent = e.detail.count || '0';
            }
        });
    },
    
    cleanup(root) {
        root.innerHTML = '';
    }
};