// modules/multipliers/multipliers.module.js
// –ú–æ–¥—É–ª—å –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π GENESIS - —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏

export default class MultipliersModule {
    constructor() {
        this.name = 'multipliers';
        this.version = '1.0.0';
        this.dependencies = ['auth', 'platform-access'];
        
        this.container = null;
        this.context = null;
        this.activeMultipliers = [];
        this.totalMultiplier = 1.0;
    }
    
    async init(context) {
        console.log('‚ö° Initializing Multipliers Module...');
        
        this.context = context;
        this.container = context.container;
        
        try {
            await this.loadTemplate();
            await this.loadStyles();
            
            this.initMultipliersData();
            this.initEventHandlers();
            this.updateDisplay();
            
            // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–æ–≤ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π
            this.startMultiplierTimers();
            
            console.log('‚úÖ Multipliers Module initialized successfully');
            return this;
            
        } catch (error) {
            console.error('‚ùå Failed to initialize Multipliers Module:', error);
            throw error;
        }
    }
    
    async loadTemplate() {
        if (this.container) {
            this.container.innerHTML = `
                <div class="multipliers-container">
                    <div class="page-header">
                        <h2 class="page-title">‚ö° –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</h2>
                        <p class="page-subtitle">–£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –¥–æ—Ö–æ–¥ —Å –ø–æ–º–æ—â—å—é –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π</p>
                    </div>
                    
                    <div class="current-multiplier-card">
                        <div class="multiplier-display">
                            <div class="multiplier-icon">üöÄ</div>
                            <div class="multiplier-info">
                                <h3>–¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å</h3>
                                <div class="multiplier-value" id="total-multiplier">x1.00</div>
                                <p class="multiplier-description">
                                    –í—Å–µ –≤–∞—à–∏ –¥–æ—Ö–æ–¥—ã —É–º–Ω–æ–∂–∞—é—Ç—Å—è –Ω–∞ —ç—Ç–æ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
                                </p>
                            </div>
                        </div>
                        
                        <div class="multiplier-breakdown">
                            <h4>–ê–∫—Ç–∏–≤–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏:</h4>
                            <div id="active-multipliers-list" class="active-list">
                                <div class="no-multipliers">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="multipliers-grid">
                        <h3>üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏</h3>
                        
                        <div class="multiplier-cards">
                            <!-- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ -->
                            <div class="multiplier-card" data-type="daily">
                                <div class="card-header">
                                    <h4>üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</h4>
                                    <div class="multiplier-badge">x1.5</div>
                                </div>
                                <div class="card-content">
                                    <p>–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –≤—Ö–æ–¥–µ –≤ —Å–∏—Å—Ç–µ–º—É</p>
                                    <div class="duration">
                                        <span class="duration-icon">‚è±Ô∏è</span>
                                        <span>–î–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞</span>
                                    </div>
                                </div>
                                <button class="btn btn-primary" data-action="activate" data-multiplier="daily">
                                    –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                                </button>
                            </div>
                            
                            <div class="multiplier-card" data-type="weekly">
                                <div class="card-header">
                                    <h4>üóìÔ∏è –ù–µ–¥–µ–ª—å–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å</h4>
                                    <div class="multiplier-badge">x2.0</div>
                                </div>
                                <div class="card-content">
                                    <p>–ú–æ—â–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å –Ω–∞ —Ü–µ–ª—É—é –Ω–µ–¥–µ–ª—é</p>
                                    <div class="duration">
                                        <span class="duration-icon">‚è±Ô∏è</span>
                                        <span>–î–µ–π—Å—Ç–≤—É–µ—Ç 7 –¥–Ω–µ–π</span>
                                    </div>
                                    <div class="price">
                                        <span class="price-label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                        <span class="price-value">10 USDT</span>
                                    </div>
                                </div>
                                <button class="btn btn-primary" data-action="purchase" data-multiplier="weekly">
                                    –ö—É–ø–∏—Ç—å
                                </button>
                            </div>
                            
                            <div class="multiplier-card premium" data-type="premium">
                                <div class="card-header">
                                    <h4>üíé –ü—Ä–µ–º–∏—É–º –º–Ω–æ–∂–∏—Ç–µ–ª—å</h4>
                                    <div class="multiplier-badge">x3.0</div>
                                </div>
                                <div class="card-content">
                                    <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</p>
                                    <div class="duration">
                                        <span class="duration-icon">‚è±Ô∏è</span>
                                        <span>–î–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π</span>
                                    </div>
                                    <div class="price">
                                        <span class="price-label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                        <span class="price-value">50 USDT</span>
                                    </div>
                                </div>
                                <button class="btn btn-primary" data-action="purchase" data-multiplier="premium">
                                    –ö—É–ø–∏—Ç—å
                                </button>
                            </div>
                            
                            <!-- –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ -->
                            <div class="multiplier-card" data-type="referral">
                                <div class="card-header">
                                    <h4>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å</h4>
                                    <div class="multiplier-badge">+10%</div>
                                </div>
                                <div class="card-content">
                                    <p>–ó–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞</p>
                                    <div class="requirement">
                                        <span>–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ:</span>
                                        <span>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π</span>
                                    </div>
                                    <div class="progress">
                                        <div class="progress-bar">
                                            <div class="progress-fill" style="width: 0%"></div>
                                        </div>
                                        <span class="progress-text">0 / 5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="multiplier-card" data-type="deposit">
                                <div class="card-header">
                                    <h4>üí∞ –î–µ–ø–æ–∑–∏—Ç–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å</h4>
                                    <div class="multiplier-badge">+5%</div>
                                </div>
                                <div class="card-content">
                                    <p>–ó–∞ –∫–∞–∂–¥—ã–µ $100 –≤ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö</p>
                                    <div class="requirement">
                                        <span>–¢–µ–∫—É—â–∏–π –æ–±—ä–µ–º:</span>
                                        <span id="deposit-volume">$0</span>
                                    </div>
                                    <div class="next-level">
                                        <span>–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è:</span>
                                        <span id="next-deposit-level">$100</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="multiplier-card" data-type="loyalty">
                                <div class="card-header">
                                    <h4>üèÜ –ë–æ–Ω—É—Å –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</h4>
                                    <div class="multiplier-badge">+1% / –º–µ—Å—è—Ü</div>
                                </div>
                                <div class="card-content">
                                    <p>–ó–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –≤ —Å–∏—Å—Ç–µ–º–µ</p>
                                    <div class="loyalty-info">
                                        <span>–í–∞—à —Å—Ç–∞–∂:</span>
                                        <span id="user-months">0 –º–µ—Å—è—Ü–µ–≤</span>
                                    </div>
                                    <div class="loyalty-bonus">
                                        <span>–¢–µ–∫—É—â–∏–π –±–æ–Ω—É—Å:</span>
                                        <span id="loyalty-percent">+0%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="multiplier-combos">
                        <h3>üé∞ –ö–æ–º–±–æ-–º–Ω–æ–∂–∏—Ç–µ–ª–∏</h3>
                        <div class="combo-list">
                            <div class="combo-item">
                                <div class="combo-icon">üî•</div>
                                <div class="combo-info">
                                    <h4>–û–≥–Ω–µ–Ω–Ω–∞—è —Å–µ—Ä–∏—è</h4>
                                    <p>–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ 3 –º–Ω–æ–∂–∏—Ç–µ–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ</p>
                                </div>
                                <div class="combo-reward">
                                    <span class="reward-label">–ë–æ–Ω—É—Å:</span>
                                    <span class="reward-value">+50%</span>
                                </div>
                            </div>
                            
                            <div class="combo-item">
                                <div class="combo-icon">üíé</div>
                                <div class="combo-info">
                                    <h4>–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å</h4>
                                    <p>–ü—Ä–µ–º–∏—É–º –º–Ω–æ–∂–∏—Ç–µ–ª—å + 10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</p>
                                </div>
                                <div class="combo-reward">
                                    <span class="reward-label">–ë–æ–Ω—É—Å:</span>
                                    <span class="reward-value">x5.0</span>
                                </div>
                            </div>
                            
                            <div class="combo-item">
                                <div class="combo-icon">üëë</div>
                                <div class="combo-info">
                                    <h4>–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å</h4>
                                    <p>–í—Å–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã</p>
                                </div>
                                <div class="combo-reward">
                                    <span class="reward-label">–ë–æ–Ω—É—Å:</span>
                                    <span class="reward-value">x10.0</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="multiplier-info">
                        <h3>‚ÑπÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –º–Ω–æ–∂–∏—Ç–µ–ª–∏</h3>
                        <div class="info-content">
                            <p>–ú–Ω–æ–∂–∏—Ç–µ–ª–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –æ—Ç –≤—Å–µ—Ö –≤–∞—à–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ.</p>
                            <ul>
                                <li>üìà –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π</li>
                                <li>‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è</li>
                                <li>üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏–π</li>
                                <li>üéØ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞</li>
                                <li>üí∞ –£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –¥–æ—Ö–æ–¥ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑!</li>
                            </ul>
                        </div>
                    </div>
                </div>
            `;
        }
    }
    
    async loadStyles() {
        const existingLink = document.querySelector(`link[data-module="${this.name}"]`);
        if (existingLink) return;
        
        const styles = `
            <style data-module="${this.name}">
                .multipliers-container {
                    padding: 2rem;
                    max-width: 1400px;
                    margin: 0 auto;
                }
                
                .current-multiplier-card {
                    background: linear-gradient(135deg, var(--bg-secondary), rgba(255, 107, 53, 0.1));
                    border: 2px solid var(--primary-color);
                    border-radius: 16px;
                    padding: 2rem;
                    margin-bottom: 2rem;
                }
                
                .multiplier-display {
                    display: flex;
                    align-items: center;
                    gap: 2rem;
                    margin-bottom: 2rem;
                }
                
                .multiplier-icon {
                    font-size: 4rem;
                }
                
                .multiplier-info h3 {
                    color: var(--text-primary);
                    margin-bottom: 0.5rem;
                }
                
                .multiplier-value {
                    font-size: 3rem;
                    font-weight: 700;
                    color: var(--primary-color);
                    font-family: 'Orbitron', monospace;
                }
                
                .multiplier-description {
                    color: var(--text-secondary);
                    margin-top: 0.5rem;
                }
                
                .multiplier-breakdown {
                    background: var(--bg-primary);
                    padding: 1.5rem;
                    border-radius: 12px;
                }
                
                .multiplier-breakdown h4 {
                    color: var(--text-primary);
                    margin-bottom: 1rem;
                }
                
                .active-list {
                    display: flex;
                    flex-direction: column;
                    gap: 0.5rem;
                }
                
                .active-multiplier-item {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 0.75rem;
                    background: var(--bg-secondary);
                    border-radius: 8px;
                }
                
                .multiplier-name {
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                    color: var(--text-primary);
                }
                
                .multiplier-effect {
                    font-weight: 600;
                    color: var(--success-color);
                }
                
                .multiplier-timer {
                    font-size: 0.85rem;
                    color: var(--warning-color);
                }
                
                .no-multipliers {
                    text-align: center;
                    color: var(--text-secondary);
                    padding: 1rem;
                }
                
                .multipliers-grid {
                    margin-bottom: 2rem;
                }
                
                .multipliers-grid h3 {
                    color: var(--primary-color);
                    margin-bottom: 1.5rem;
                }
                
                .multiplier-cards {
                    display: grid;
                    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
                    gap: 1.5rem;
                }
                
                .multiplier-card {
                    background: var(--bg-secondary);
                    border: 2px solid var(--border-color);
                    border-radius: 12px;
                    padding: 1.5rem;
                    transition: all 0.3s ease;
                }
                
                .multiplier-card:hover {
                    transform: translateY(-4px);
                    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.3);
                    border-color: var(--primary-color);
                }
                
                .multiplier-card.premium {
                    background: linear-gradient(135deg, var(--bg-secondary), rgba(255, 215, 0, 0.1));
                    border-color: var(--gold-color);
                }
                
                .card-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 1rem;
                }
                
                .card-header h4 {
                    color: var(--text-primary);
                    margin: 0;
                }
                
                .multiplier-badge {
                    background: var(--primary-color);
                    color: white;
                    padding: 0.25rem 0.75rem;
                    border-radius: 20px;
                    font-weight: 700;
                }
                
                .card-content {
                    margin-bottom: 1rem;
                }
                
                .card-content p {
                    color: var(--text-secondary);
                    margin-bottom: 1rem;
                }
                
                .duration,
                .requirement,
                .next-level,
                .loyalty-info,
                .loyalty-bonus {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 0.5rem 0;
                    color: var(--text-secondary);
                    font-size: 0.9rem;
                }
                
                .duration-icon {
                    margin-right: 0.5rem;
                }
                
                .price {
                    background: var(--bg-primary);
                    padding: 0.75rem;
                    border-radius: 8px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-top: 1rem;
                }
                
                .price-label {
                    color: var(--text-secondary);
                }
                
                .price-value {
                    font-weight: 700;
                    color: var(--success-color);
                }
                
                .progress {
                    margin-top: 1rem;
                }
                
                .progress-bar {
                    background: var(--bg-primary);
                    height: 8px;
                    border-radius: 4px;
                    overflow: hidden;
                    margin-bottom: 0.5rem;
                }
                
                .progress-fill {
                    height: 100%;
                    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
                    transition: width 0.5s ease;
                }
                
                .progress-text {
                    font-size: 0.85rem;
                    color: var(--text-secondary);
                }
                
                .multiplier-combos {
                    margin-bottom: 2rem;
                }
                
                .multiplier-combos h3 {
                    color: var(--primary-color);
                    margin-bottom: 1.5rem;
                }
                
                .combo-list {
                    display: grid;
                    gap: 1rem;
                }
                
                .combo-item {
                    background: var(--bg-secondary);
                    padding: 1.5rem;
                    border-radius: 12px;
                    display: flex;
                    align-items: center;
                    gap: 1.5rem;
                    border: 1px solid var(--border-color);
                    transition: all 0.3s ease;
                }
                
                .combo-item:hover {
                    transform: translateX(4px);
                    border-color: var(--primary-color);
                }
                
                .combo-icon {
                    font-size: 2.5rem;
                }
                
                .combo-info {
                    flex: 1;
                }
                
                .combo-info h4 {
                    color: var(--text-primary);
                    margin-bottom: 0.25rem;
                }
                
                .combo-info p {
                    color: var(--text-secondary);
                    font-size: 0.9rem;
                }
                
                .combo-reward {
                    background: var(--bg-primary);
                    padding: 0.75rem 1rem;
                    border-radius: 8px;
                    text-align: center;
                }
                
                .reward-label {
                    display: block;
                    color: var(--text-secondary);
                    font-size: 0.85rem;
                    margin-bottom: 0.25rem;
                }
                
                .reward-value {
                    font-size: 1.2rem;
                    font-weight: 700;
                    color: var(--success-color);
                }
                
                .multiplier-info {
                    background: var(--bg-secondary);
                    padding: 2rem;
                    border-radius: 12px;
                    border-left: 4px solid var(--primary-color);
                }
                
                .multiplier-info h3 {
                    color: var(--primary-color);
                    margin-bottom: 1rem;
                }
                
                .info-content {
                    color: var(--text-secondary);
                }
                
                .info-content ul {
                    margin-top: 1rem;
                    padding-left: 1.5rem;
                }
                
                .info-content li {
                    padding: 0.25rem 0;
                }
                
                @media (max-width: 768px) {
                    .multiplier-display {
                        flex-direction: column;
                        text-align: center;
                    }
                    
                    .multiplier-cards {
                        grid-template-columns: 1fr;
                    }
                    
                    .combo-item {
                        flex-direction: column;
                        text-align: center;
                    }
                    
                    .combo-reward {
                        width: 100%;
                    }
                }
            </style>
        `;
        
        document.head.insertAdjacentHTML('beforeend', styles);
    }
    
    initMultipliersData() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏
        this.activeMultipliers = JSON.parse(localStorage.getItem('genesis_active_multipliers') || '[]');
        
        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏
        this.activeMultipliers = this.activeMultipliers.filter(m => {
            if (m.expiresAt) {
                return new Date(m.expiresAt) > new Date();
            }
            return true; // –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        localStorage.setItem('genesis_active_multipliers', JSON.stringify(this.activeMultipliers));
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
        this.calculateTotalMultiplier();
    }
    
    initEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        const activateButtons = this.container?.querySelectorAll('[data-action="activate"]');
        activateButtons?.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const multiplierType = e.target.dataset.multiplier;
                this.activateMultiplier(multiplierType);
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–∫—É–ø–∫–∏
        const purchaseButtons = this.container?.querySelectorAll('[data-action="purchase"]');
        purchaseButtons?.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const multiplierType = e.target.dataset.multiplier;
                this.purchaseMultiplier(multiplierType);
            });
        });
    }
    
    calculateTotalMultiplier() {
        let baseMultiplier = 1.0;
        let additiveBonus = 0;
        
        this.activeMultipliers.forEach(m => {
            if (m.type === 'multiplicative') {
                baseMultiplier *= m.value;
            } else {
                additiveBonus += m.value;
            }
        });
        
        this.totalMultiplier = baseMultiplier + additiveBonus;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
        localStorage.setItem('genesis_total_multiplier', this.totalMultiplier.toString());
    }
    
    updateDisplay() {
        if (!this.container) return;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
        const totalMultiplierEl = this.container.querySelector('#total-multiplier');
        if (totalMultiplierEl) {
            totalMultiplierEl.textContent = `x${this.totalMultiplier.toFixed(2)}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π
        this.updateActiveMultipliersList();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π
        this.updatePermanentMultipliers();
    }
    
    updateActiveMultipliersList() {
        const listEl = this.container?.querySelector('#active-multipliers-list');
        if (!listEl) return;
        
        if (this.activeMultipliers.length === 0) {
            listEl.innerHTML = '<div class="no-multipliers">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π</div>';
            return;
        }
        
        listEl.innerHTML = this.activeMultipliers.map(m => {
            const timeLeft = m.expiresAt ? this.getTimeLeft(m.expiresAt) : '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π';
            
            return `
                <div class="active-multiplier-item">
                    <div class="multiplier-name">
                        <span>${m.icon}</span>
                        <span>${m.name}</span>
                    </div>
                    <div class="multiplier-effect">${m.display}</div>
                    ${m.expiresAt ? `<div class="multiplier-timer">${timeLeft}</div>` : ''}
                </div>
            `;
        }).join('');
    }
    
    updatePermanentMultipliers() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        const referrals = parseInt(localStorage.getItem('genesis_referrals_count') || '0');
        const referralProgress = this.container?.querySelector('[data-type="referral"] .progress-fill');
        const referralText = this.container?.querySelector('[data-type="referral"] .progress-text');
        
        if (referralProgress) {
            referralProgress.style.width = `${Math.min(100, (referrals / 5) * 100)}%`;
        }
        if (referralText) {
            referralText.textContent = `${referrals} / 5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–ø–æ–∑–∏—Ç–Ω—ã–π –æ–±—ä–µ–º
        const depositVolume = parseFloat(localStorage.getItem('genesis_deposit_volume') || '0');
        const depositVolumeEl = this.container?.querySelector('#deposit-volume');
        const nextLevelEl = this.container?.querySelector('#next-deposit-level');
        
        if (depositVolumeEl) {
            depositVolumeEl.textContent = `$${depositVolume.toFixed(2)}`;
        }
        if (nextLevelEl) {
            const nextLevel = Math.ceil(depositVolume / 100) * 100 || 100;
            nextLevelEl.textContent = `$${nextLevel}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–∂
        const joinDate = localStorage.getItem('genesis_join_date');
        if (joinDate) {
            const months = this.getMonthsSince(joinDate);
            const monthsEl = this.container?.querySelector('#user-months');
            const loyaltyEl = this.container?.querySelector('#loyalty-percent');
            
            if (monthsEl) {
                monthsEl.textContent = `${months} –º–µ—Å—è—Ü–µ–≤`;
            }
            if (loyaltyEl) {
                loyaltyEl.textContent = `+${months}%`;
            }
        }
    }
    
    getTimeLeft(expiresAt) {
        const now = new Date();
        const expires = new Date(expiresAt);
        const diff = expires - now;
        
        if (diff <= 0) return '–ò—Å—Ç–µ–∫';
        
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
        
        if (days > 0) return `${days}–¥ ${hours}—á`;
        if (hours > 0) return `${hours}—á ${minutes}–º`;
        return `${minutes}–º`;
    }
    
    getMonthsSince(dateStr) {
        const date = new Date(dateStr);
        const now = new Date();
        const months = (now.getFullYear() - date.getFullYear()) * 12 + (now.getMonth() - date.getMonth());
        return Math.max(0, months);
    }
    
    activateMultiplier(type) {
        if (type === 'daily') {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
            const existing = this.activeMultipliers.find(m => m.id === 'daily');
            if (existing) {
                this.showNotification('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω', 'warning');
                return;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å
            const multiplier = {
                id: 'daily',
                name: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å',
                icon: 'üìÖ',
                type: 'multiplicative',
                value: 1.5,
                display: 'x1.5',
                expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()
            };
            
            this.activeMultipliers.push(multiplier);
            localStorage.setItem('genesis_active_multipliers', JSON.stringify(this.activeMultipliers));
            
            this.calculateTotalMultiplier();
            this.updateDisplay();
            
            this.showNotification('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!', 'success');
        }
    }
    
    purchaseMultiplier(type) {
        const prices = {
            weekly: 10,
            premium: 50
        };
        
        const price = prices[type];
        if (!price) return;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
        const balance = parseFloat(localStorage.getItem('genesis_user_balance') || '0');
        if (balance < price) {
            this.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', 'error');
            return;
        }
        
        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞
        localStorage.setItem('genesis_user_balance', (balance - price).toString());
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å
        let multiplier;
        if (type === 'weekly') {
            multiplier = {
                id: 'weekly',
                name: '–ù–µ–¥–µ–ª—å–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å',
                icon: 'üóìÔ∏è',
                type: 'multiplicative',
                value: 2.0,
                display: 'x2.0',
                expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()
            };
        } else if (type === 'premium') {
            multiplier = {
                id: 'premium',
                name: '–ü—Ä–µ–º–∏—É–º –º–Ω–æ–∂–∏—Ç–µ–ª—å',
                icon: 'üíé',
                type: 'multiplicative',
                value: 3.0,
                display: 'x3.0',
                expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString()
            };
        }
        
        if (multiplier) {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –µ—Å–ª–∏ –µ—Å—Ç—å
            this.activeMultipliers = this.activeMultipliers.filter(m => m.id !== multiplier.id);
            this.activeMultipliers.push(multiplier);
            
            localStorage.setItem('genesis_active_multipliers', JSON.stringify(this.activeMultipliers));
            
            this.calculateTotalMultiplier();
            this.updateDisplay();
            
            this.showNotification(`${multiplier.name} –∫—É–ø–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`, 'success');
        }
    }
    
    startMultiplierTimers() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä—ã –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        this.timerInterval = setInterval(() => {
            this.initMultipliersData(); // –û—á–∏—â–∞–µ–º –∏—Å—Ç–µ–∫—à–∏–µ
            this.updateDisplay();
        }, 60000);
    }
    
    showNotification(message, type) {
        if (this.context?.eventBus) {
            this.context.eventBus.emit('notification:show', {
                type: type,
                title: type === 'success' ? '–£—Å–ø–µ—à–Ω–æ' : type === 'error' ? '–û—à–∏–±–∫–∞' : '–í–Ω–∏–º–∞–Ω–∏–µ',
                message: message
            });
        }
    }
    
    destroy() {
        console.log('üßπ Destroying Multipliers Module...');
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
        if (this.timerInterval) {
            clearInterval(this.timerInterval);
        }
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∏–ª–∏
        const styles = document.querySelector(`style[data-module="${this.name}"]`);
        if (styles) styles.remove();
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        if (this.container) {
            this.container.innerHTML = '';
        }
        
        console.log('‚úÖ Multipliers Module destroyed');
    }
}
