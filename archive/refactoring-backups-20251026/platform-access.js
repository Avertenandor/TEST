/**
 * GENESIS 1.1 - –°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
 * MCP-MARKER:MODULE:PLATFORM_ACCESS - –°–µ—Ä–≤–∏—Å –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
 * MCP-MARKER:FILE:PLATFORM_ACCESS_JS - –°–∏—Å—Ç–µ–º–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
 */

// MCP-MARKER:CLASS:GENESIS_PLATFORM_ACCESS - –ö–ª–∞—Å—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
window.GenesisPlatformAccess = {
    // MCP-MARKER:PROPERTY:ACCESS_CONFIG - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞
    config: {
        dailyCost: 1, // $1 –≤ –¥–µ–Ω—å
        minPayment: 10, // –ú–∏–Ω–∏–º—É–º $10 (10 –¥–Ω–µ–π)
        maxPayment: 100, // –ú–∞–∫—Å–∏–º—É–º $100 (100 –¥–Ω–µ–π)
        tolerance: 0.05, // ¬±5% –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å
        checkInterval: 60000, // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        warningDays: 3 // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ 3 –¥–Ω—è
    },
    
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userAccessData: null,
    
    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
    checkIntervalId: null,
    
    // MCP-MARKER:METHOD:INIT_ACCESS_SYSTEM - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–∞
    async init() {
        console.log('üí≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞...');
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üí≥ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...', 'system');
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        this.startAccessMonitoring();
        
        return true;
    },
    
    // MCP-MARKER:METHOD:CHECK_USER_ACCESS - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async checkUserAccessBalance(userAddress) {
        if (!userAddress || !window.GenesisUtils.isValidAddress(userAddress)) {
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
        
        try {
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`üí≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è ${window.GenesisUtils.formatAddress(userAddress)}...`, 'info');
            }
            
            // –î–ï–ú–û –†–ï–ñ–ò–ú: –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
            if (userAddress === '0x1234567890123456789012345678901234567890' || 
                userAddress.toLowerCase() === '0x1234567890123456789012345678901234567890') {
                console.log('üß™ Demo mode: Platform access granted for test address');
                
                const demoAccessData = {
                    payments: [{
                        timeStamp: Math.floor(Date.now() / 1000).toString(),
                        value: '100000000000000000000', // 100 USDT
                        hash: 'demo_payment_hash'
                    }],
                    totalUSDT: 100,
                    accessDays: 100,
                    isActive: true,
                    daysRemaining: 100,
                    lastCheck: Date.now()
                };
                
                this.userAccessData = {
                    address: userAddress,
                    ...demoAccessData
                };
                
                return this.userAccessData;
            }
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –¥–æ—Å—Ç—É–ø
            const accessData = await window.GenesisAPI.checkAccessPayments(userAddress);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.userAccessData = {
                address: userAddress,
                ...accessData,
                lastCheck: Date.now()
            };
            
            return this.userAccessData;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞: ${error.message}`, 'error');
            }
            
            // –î–ï–ú–û –†–ï–ñ–ò–ú: –ü—Ä–∏ –æ—à–∏–±–∫–µ API —Ç–∞–∫–∂–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
            if (userAddress === '0x1234567890123456789012345678901234567890' || 
                userAddress.toLowerCase() === '0x1234567890123456789012345678901234567890') {
                console.log('üß™ Demo mode: API error, but granting access for test address');
                
                return {
                    payments: [],
                    totalUSDT: 100,
                    accessDays: 100,
                    isActive: true,
                    daysRemaining: 100,
                    error: null
                };
            }
            
            return {
                payments: [],
                totalUSDT: 0,
                accessDays: 0,
                isActive: false,
                daysRemaining: 0,
                error: error.message
            };
        }
    },
    
    // MCP-MARKER:METHOD:CALCULATE_REMAINING_DAYS - –†–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π
    calculateRemainingDays(accessData) {
        if (!accessData || !accessData.payments || accessData.payments.length === 0) {
            return 0;
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂
        const lastPayment = accessData.payments.reduce((latest, payment) => {
            const paymentTime = parseInt(payment.timeStamp);
            const latestTime = parseInt(latest.timeStamp);
            return paymentTime > latestTime ? payment : latest;
        });
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π
        const totalPaidDays = accessData.accessDays;
        
        // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        const lastPaymentTime = parseInt(lastPayment.timeStamp);
        
        // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        const nowTime = Math.floor(Date.now() / 1000);
        
        // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞
        const accessEndTime = lastPaymentTime + (totalPaidDays * 86400);
        
        // –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
        const remainingSeconds = accessEndTime - nowTime;
        const remainingDays = Math.max(0, Math.ceil(remainingSeconds / 86400));
        
        return remainingDays;
    },
    
    // MCP-MARKER:METHOD:BLOCK_FUNCTIONS - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
    blockFunctionsIfNoAccess() {
        if (!this.userAccessData || !this.userAccessData.isActive) {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–µ–ø–æ–∑–∏—Ç–∞–º
            const depositButtons = document.querySelectorAll('.deposit-btn, .create-deposit-btn');
            depositButtons.forEach(btn => {
                btn.disabled = true;
                btn.style.opacity = '0.5';
                btn.title = '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ';
            });
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
            const cabinetLinks = document.querySelectorAll('.cabinet-nav-link');
            cabinetLinks.forEach(link => {
                if (!link.getAttribute('data-page') || link.getAttribute('data-page') === 'access') {
                    return; // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
                }
                link.style.pointerEvents = 'none';
                link.style.opacity = '0.5';
                link.title = '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ';
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showAccessRequiredNotification();
            
            return true; // –§—É–Ω–∫—Ü–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
        }
        
        return false; // –î–æ—Å—Ç—É–ø –µ—Å—Ç—å, —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
    },
    
    // MCP-MARKER:METHOD:UNBLOCK_FUNCTIONS - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
    unblockFunctions() {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
        const depositButtons = document.querySelectorAll('.deposit-btn, .create-deposit-btn');
        depositButtons.forEach(btn => {
            btn.disabled = false;
            btn.style.opacity = '1';
            btn.title = '';
        });
        
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const cabinetLinks = document.querySelectorAll('.cabinet-nav-link');
        cabinetLinks.forEach(link => {
            link.style.pointerEvents = 'auto';
            link.style.opacity = '1';
            link.title = '';
        });
        
        // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
        this.hideAccessRequiredNotification();
    },
    
    // MCP-MARKER:METHOD:GENERATE_ACCESS_QR - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞
    generateAccessPaymentQR(amount = 10) {
        const accessAddress = window.GENESIS_CONFIG.addresses.access;
        const usdtAddress = window.GENESIS_CONFIG.usdt.address;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è QR –∫–æ–¥–∞
        const qrData = {
            address: accessAddress,
            amount: amount,
            token: 'USDT',
            purpose: 'platform_access'
        };
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞
        const transferUrl = `https://link.trustwallet.com/send?coin=20000714&address=${accessAddress}&amount=${amount}&token_id=${usdtAddress}`;
        
        return {
            url: transferUrl,
            qrData: transferUrl,
            amount: amount,
            currency: 'USDT',
            address: accessAddress,
            days: amount, // $1 = 1 –¥–µ–Ω—å
            description: `–û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–∞ ${amount} –¥–Ω–µ–π`
        };
    },
    
    // MCP-MARKER:METHOD:START_MONITORING - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–∞
    startAccessMonitoring() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ –±—ã–ª
        if (this.checkIntervalId) {
            clearInterval(this.checkIntervalId);
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        this.checkIntervalId = setInterval(async () => {
            const userAddress = localStorage.getItem('genesis_user_address');
            if (userAddress) {
                await this.checkAndUpdateAccessStatus(userAddress);
            }
        }, this.config.checkInterval);
        
        console.log('üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–ø—É—â–µ–Ω');
    },
    
    // MCP-MARKER:METHOD:CHECK_UPDATE_STATUS - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    async checkAndUpdateAccessStatus(userAddress) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
            const accessData = await this.checkUserAccessBalance(userAddress);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateAccessUI(accessData);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ñ—É–Ω–∫—Ü–∏–π
            const isBlocked = this.blockFunctionsIfNoAccess();
            
            if (!isBlocked) {
                this.unblockFunctions();
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
            this.checkAccessWarnings(accessData);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–∞:', error);
        }
    },
    
    // MCP-MARKER:METHOD:UPDATE_ACCESS_UI - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞
    updateAccessUI(accessData) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞
        const accessStatusEl = document.getElementById('access-status');
        const accessDaysEl = document.getElementById('access-days-remaining');
        const accessBalanceEl = document.getElementById('access-balance');
        
        if (accessStatusEl) {
            accessStatusEl.textContent = accessData.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
            accessStatusEl.className = `access-status ${accessData.isActive ? 'active' : 'inactive'}`;
        }
        
        if (accessDaysEl) {
            accessDaysEl.textContent = accessData.daysRemaining || 0;
        }
        
        if (accessBalanceEl) {
            accessBalanceEl.textContent = `$${accessData.totalUSDT.toFixed(2)}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
        const progressBar = document.getElementById('access-progress');
        if (progressBar && accessData.accessDays > 0) {
            const usedDays = accessData.accessDays - accessData.daysRemaining;
            const progressPercent = (usedDays / accessData.accessDays) * 100;
            progressBar.style.width = `${Math.min(100, Math.max(0, progressPercent))}%`;
        }
    },
    
    // MCP-MARKER:METHOD:CHECK_WARNINGS - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
    checkAccessWarnings(accessData) {
        if (!accessData.isActive) {
            // –î–æ—Å—Ç—É–ø —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log('‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω! –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞.', 'warning');
            }
            return;
        }
        
        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ N –¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è
        if (accessData.daysRemaining <= this.config.warningDays && accessData.daysRemaining > 0) {
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${accessData.daysRemaining} –¥–Ω–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–¥–ª–∏—Ç—å.`, 'warning');
            }
            
            this.showAccessWarningNotification(accessData.daysRemaining);
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_ACCESS_REQUIRED - –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞
    showAccessRequiredNotification() {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingNotification = document.getElementById('access-required-notification');
        if (existingNotification) {
            existingNotification.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.id = 'access-required-notification';
        notification.className = 'access-notification error';
        notification.innerHTML = `
            <div class="notification-content">
                <div class="notification-icon">üîí</div>
                <div class="notification-text">
                    <strong>–î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</strong>
                    <p>–û–ø–ª–∞—Ç–∏—Ç–µ –¥–æ—Å—Ç—É–ø –æ—Ç $10 USDT (10 –¥–Ω–µ–π) –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã</p>
                </div>
                <button class="notification-btn" onclick="window.GenesisPlatformAccess.showPaymentModal()">
                    –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø
                </button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.classList.add('show');
        }, 100);
    },
    
    // MCP-MARKER:METHOD:SHOW_WARNING - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    showAccessWarningNotification(daysRemaining) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        const existingWarning = document.getElementById('access-warning-notification');
        if (existingWarning) {
            existingWarning.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        const warning = document.createElement('div');
        warning.id = 'access-warning-notification';
        warning.className = 'access-notification warning';
        warning.innerHTML = `
            <div class="notification-content">
                <div class="notification-icon">‚ö†Ô∏è</div>
                <div class="notification-text">
                    <strong>–î–æ—Å—Ç—É–ø –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${daysRemaining} –¥–Ω–µ–π</strong>
                    <p>–ü—Ä–æ–¥–ª–∏—Ç–µ –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π</p>
                </div>
                <button class="notification-btn" onclick="window.GenesisPlatformAccess.showPaymentModal()">
                    –ü—Ä–æ–¥–ª–∏—Ç—å
                </button>
                <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
            </div>
        `;
        
        document.body.appendChild(warning);
        
        setTimeout(() => {
            warning.classList.add('show');
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (warning.parentElement) {
                warning.remove();
            }
        }, 10000);
    },
    
    // MCP-MARKER:METHOD:HIDE_NOTIFICATIONS - –°–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    hideAccessRequiredNotification() {
        const notification = document.getElementById('access-required-notification');
        if (notification) {
            notification.classList.remove('show');
            setTimeout(() => {
                notification.remove();
            }, 300);
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_PAYMENT_MODAL - –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã
    showPaymentModal(defaultAmount = 10) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.id = 'access-payment-modal';
        modal.className = 'modal-overlay';
        
        const paymentData = this.generateAccessPaymentQR(defaultAmount);
        
        modal.innerHTML = `
            <div class="modal-content access-payment-modal">
                <div class="modal-header">
                    <h2>üí≥ –û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h2>
                    <button class="modal-close" onclick="this.closest('.modal-overlay').remove()">√ó</button>
                </div>
                
                <div class="modal-body">
                    <div class="payment-info">
                        <div class="payment-details">
                            <h3>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞</h3>
                            <div class="price-info">
                                <div class="price-item">
                                    <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                    <strong>$1 –≤ –¥–µ–Ω—å</strong>
                                </div>
                                <div class="price-item">
                                    <span>–ú–∏–Ω–∏–º—É–º:</span>
                                    <strong>$10 (10 –¥–Ω–µ–π)</strong>
                                </div>
                                <div class="price-item">
                                    <span>–ö –æ–ø–ª–∞—Ç–µ:</span>
                                    <strong>$${defaultAmount} (${defaultAmount} –¥–Ω–µ–π)</strong>
                                </div>
                            </div>
                        </div>
                        
                        <div class="payment-qr">
                            <h3>QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã</h3>
                            <div id="access-payment-qr" class="qr-container"></div>
                            <div class="payment-address">
                                <label>–ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:</label>
                                <div class="address-container">
                                    <code class="payment-address-value">${paymentData.address}</code>
                                    <button class="copy-btn" onclick="window.GenesisUtils.copyToClipboard('${paymentData.address}')">üìã</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="payment-instructions">
                        <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ</h3>
                        <ol>
                            <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç <strong>$10 –¥–æ $100 USDT</strong> –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å</li>
                            <li>–ö–∞–∂–¥—ã–π $1 USDT = 1 –¥–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</li>
                            <li>–î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –º–∏–Ω—É—Ç</li>
                            <li>–ü—Ä–∏ –Ω—É–ª–µ–≤–æ–º –±–∞–ª–∞–Ω—Å–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è</li>
                        </ol>
                    </div>
                    
                    <div class="payment-amounts">
                        <h3>–ë—ã—Å—Ç—Ä–∞—è –æ–ø–ª–∞—Ç–∞</h3>
                        <div class="amount-buttons">
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(10)">$10 (10 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(30)">$30 (30 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(60)">$60 (60 –¥–Ω–µ–π)</button>
                            <button class="amount-btn" onclick="window.GenesisPlatformAccess.updatePaymentAmount(100)">$100 (100 –¥–Ω–µ–π)</button>
                        </div>
                    </div>
                </div>
                
                <div class="modal-footer">
                    <button class="btn-secondary" onclick="this.closest('.modal-overlay').remove()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    <button class="btn-primary" onclick="window.GenesisPlatformAccess.startPaymentMonitoring()">–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–ø–ª–∞—Ç—É</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥
        this.generateQRCode('access-payment-qr', paymentData.qrData);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            modal.classList.add('show');
        }, 100);
    },
    
    // MCP-MARKER:METHOD:UPDATE_PAYMENT_AMOUNT - –û–±–Ω–æ–≤–∏—Ç—å —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã
    updatePaymentAmount(amount) {
        const modal = document.getElementById('access-payment-modal');
        if (!modal) return;
        
        const paymentData = this.generateAccessPaymentQR(amount);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ
        const amountElement = modal.querySelector('.price-item:last-child strong');
        if (amountElement) {
            amountElement.textContent = `$${amount} (${amount} –¥–Ω–µ–π)`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥—Ä–µ—Å (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è)
        const addressElement = modal.querySelector('.payment-address-value');
        if (addressElement) {
            addressElement.textContent = paymentData.address;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º QR –∫–æ–¥
        this.generateQRCode('access-payment-qr', paymentData.qrData);
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        modal.querySelectorAll('.amount-btn').forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');
    },
    
    // MCP-MARKER:METHOD:GENERATE_QR_CODE - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
    generateQRCode(containerId, data) {
        const container = document.getElementById(containerId);
        if (!container) return;
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.innerHTML = '';
        
        if (window.QRCode) {
            try {
                new window.QRCode(container, {
                    text: data,
                    width: 200,
                    height: 200,
                    colorDark: '#000000',
                    colorLight: '#ffffff',
                    correctLevel: window.QRCode.CorrectLevel.M
                });
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR –∫–æ–¥–∞:', error);
                container.innerHTML = `
                    <div class="qr-fallback">
                        <div class="qr-placeholder">üì± QR –ö–û–î</div>
                        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å –≤—ã—à–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã</p>
                    </div>
                `;
            }
        } else {
            // Fallback –µ—Å–ª–∏ QRCode –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
            container.innerHTML = `
                <div class="qr-fallback">
                    <div class="qr-placeholder">üì± QR –ö–û–î</div>
                    <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å –≤—ã—à–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã</p>
                </div>
            `;
        }
    },
    
    // MCP-MARKER:METHOD:START_PAYMENT_MONITORING - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã
    async startPaymentMonitoring() {
        const userAddress = localStorage.getItem('genesis_user_address');
        if (!userAddress) return;
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üîÑ –ù–∞—á–∞—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–∞...', 'system');
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        const monitoringInterval = setInterval(async () => {
            try {
                const accessData = await this.checkUserAccessBalance(userAddress);
                
                if (accessData.isActive && accessData.daysRemaining > 0) {
                    // –î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!
                    clearInterval(monitoringInterval);
                    
                    if (window.GenesisTerminal) {
                        window.GenesisTerminal.log(`‚úÖ –î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –î–Ω–µ–π: ${accessData.daysRemaining}`, 'success');
                    }
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                    const modal = document.getElementById('access-payment-modal');
                    if (modal) {
                        modal.remove();
                    }
                    
                    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
                    this.unblockFunctions();
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                    this.showSuccessNotification(accessData.daysRemaining);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º UI
                    this.updateAccessUI(accessData);
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã:', error);
            }
        }, 30000);
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
        setTimeout(() => {
            clearInterval(monitoringInterval);
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log('‚è±Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É', 'warning');
            }
        }, 600000);
    },
    
    // MCP-MARKER:METHOD:SHOW_SUCCESS - –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    showSuccessNotification(daysRemaining) {
        const notification = document.createElement('div');
        notification.className = 'access-notification success';
        notification.innerHTML = `
            <div class="notification-content">
                <div class="notification-icon">‚úÖ</div>
                <div class="notification-text">
                    <strong>–î–æ—Å—Ç—É–ø —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</strong>
                    <p>–î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ: ${daysRemaining} –¥–Ω–µ–π</p>
                </div>
                <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.classList.add('show');
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 5000);
    },
    
    // MCP-MARKER:METHOD:GET_ACCESS_STATUS - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞
    getAccessStatus() {
        return this.userAccessData;
    },
    
    // MCP-MARKER:METHOD:DESTROY - –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    destroy() {
        if (this.checkIntervalId) {
            clearInterval(this.checkIntervalId);
            this.checkIntervalId = null;
        }
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notifications = document.querySelectorAll('.access-notification');
        notifications.forEach(notification => notification.remove());
        
        console.log('üßπ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—á–∏—â–µ–Ω–∞');
    }
};

// MCP-MARKER:STYLES:ACCESS_NOTIFICATIONS - –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–∞
// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const accessStyles = document.createElement('style');
accessStyles.textContent = `
    .access-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        max-width: 400px;
        background: rgba(0, 0, 0, 0.9);
        border-radius: 10px;
        padding: 0;
        z-index: 1001;
        transform: translateX(100%);
        transition: transform 0.3s ease;
        border: 1px solid #333;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    }
    
    .access-notification.show {
        transform: translateX(0);
    }
    
    .access-notification.error {
        border-color: #ff4757;
    }
    
    .access-notification.warning {
        border-color: #ffa726;
    }
    
    .access-notification.success {
        border-color: #00ff41;
    }
    
    .notification-content {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
    }
    
    .notification-icon {
        font-size: 1.5rem;
        flex-shrink: 0;
    }
    
    .notification-text {
        flex: 1;
        color: white;
    }
    
    .notification-text strong {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 1rem;
    }
    
    .notification-text p {
        margin: 0;
        font-size: 0.9rem;
        opacity: 0.8;
    }
    
    .notification-btn, .notification-close {
        background: #ff6b35;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: background 0.3s ease;
    }
    
    .notification-btn:hover {
        background: #e55a2b;
    }
    
    .notification-close {
        background: transparent;
        color: #999;
        padding: 0.25rem 0.5rem;
        margin-left: 0.5rem;
    }
    
    .notification-close:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
    }
    
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .modal-overlay.show {
        opacity: 1;
    }
    
    .access-payment-modal {
        background: #1a1a2e;
        border-radius: 15px;
        max-width: 600px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        border: 1px solid #333;
    }
    
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem;
        border-bottom: 1px solid #333;
    }
    
    .modal-header h2 {
        margin: 0;
        color: #ff6b35;
        font-size: 1.3rem;
    }
    
    .modal-close {
        background: none;
        border: none;
        color: #999;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 0;
        width: 30px;
        height: 30px;
    }
    
    .modal-close:hover {
        color: white;
    }
    
    .modal-body {
        padding: 1.5rem;
        color: white;
    }
    
    .payment-info {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        margin-bottom: 2rem;
    }
    
    .payment-details h3, .payment-qr h3 {
        color: #ff6b35;
        margin-bottom: 1rem;
    }
    
    .price-info {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .price-item {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem 0;
        border-bottom: 1px solid #333;
    }
    
    .qr-container {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 1rem;
    }
    
    .qr-fallback {
        background: #f0f0f0;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
        color: #333;
    }
    
    .qr-placeholder {
        font-size: 2rem;
        margin-bottom: 0.5rem;
    }
    
    .address-container {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: rgba(0, 0, 0, 0.3);
        padding: 0.8rem;
        border-radius: 5px;
        margin-top: 0.5rem;
    }
    
    .payment-address-value {
        flex: 1;
        color: #00d4ff;
        font-family: monospace;
        font-size: 0.9rem;
        word-break: break-all;
    }
    
    .copy-btn {
        background: #ff6b35;
        color: white;
        border: none;
        padding: 0.3rem 0.5rem;
        border-radius: 3px;
        cursor: pointer;
        font-size: 0.8rem;
    }
    
    .payment-instructions ol {
        padding-left: 1.2rem;
    }
    
    .payment-instructions li {
        margin-bottom: 0.5rem;
        line-height: 1.5;
    }
    
    .amount-buttons {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }
    
    .amount-btn {
        background: rgba(255, 107, 53, 0.1);
        color: #ff6b35;
        border: 1px solid #ff6b35;
        padding: 0.8rem;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .amount-btn:hover, .amount-btn.active {
        background: #ff6b35;
        color: white;
    }
    
    .modal-footer {
        padding: 1.5rem;
        border-top: 1px solid #333;
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }
    
    .btn-primary, .btn-secondary {
        padding: 0.8rem 1.5rem;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-size: 0.9rem;
        transition: background 0.3s ease;
    }
    
    .btn-primary {
        background: #ff6b35;
        color: white;
    }
    
    .btn-primary:hover {
        background: #e55a2b;
    }
    
    .btn-secondary {
        background: #333;
        color: white;
    }
    
    .btn-secondary:hover {
        background: #444;
    }
    
    @media (max-width: 768px) {
        .access-notification {
            top: 10px;
            right: 10px;
            left: 10px;
            max-width: none;
        }
        
        .access-payment-modal {
            width: 95%;
            margin: 1rem;
        }
        
        .payment-info {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .amount-buttons {
            grid-template-columns: 1fr;
        }
        
        .modal-footer {
            flex-direction: column;
        }
    }
`;

document.head.appendChild(accessStyles);

console.log('üí≥ GENESIS PLATFORM ACCESS loaded');
