/**
 * GENESIS 1.1 - –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 * MCP-MARKER:MODULE:DEPOSIT_CREATION_SYSTEM - –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 * MCP-MARKER:FILE:DEPOSIT_CREATION_SYSTEM_JS - –§–∞–π–ª —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 */

// MCP-MARKER:CLASS:DEPOSIT_CREATION_SYSTEM - –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤
window.DepositCreationSystem = {
    
    // MCP-MARKER:PROPERTY:CREATION_STATE - –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    currentStep: 1,
    selectedPlan: null,
    selectedCurrency: null,
    paymentInfo: null,
    transactionMonitoring: null,
    
    // MCP-MARKER:METHOD:INIT_SYSTEM - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    init() {
        console.log('üí∞ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤...');
        this.setupEventListeners();
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≥–æ—Ç–æ–≤–∞');
    },
    
    // MCP-MARKER:METHOD:SETUP_EVENT_LISTENERS - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                this.closeAllModals();
            }
        });
    },
    
    // MCP-MARKER:METHOD:START_DEPOSIT_CREATION - –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    startDepositCreation(planId) {
        const plan = window.getDepositPlanById(planId);
        if (!plan) {
            this.showError('–ü–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–æ–≤
        const userPlanIds = this.getUserPlanIds();
        const validationResult = window.validateDepositSequence(userPlanIds.map(id => ({ planId: id, status: 'COMPLETED' })), planId);
        
        if (!validationResult.allowed) {
            this.showError(validationResult.message);
            return;
        }
        
        this.selectedPlan = plan;
        this.currentStep = 1;
        this.showDepositCreationModal();
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üí∞ –ù–∞—á–∞—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}`, 'info');
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_DEPOSIT_CREATION_MODAL - –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    showDepositCreationModal() {
        const modal = document.getElementById('create-deposit-modal');
        const content = document.getElementById('deposit-modal-content');
        
        if (!modal || !content) {
            this.showError('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        content.innerHTML = this.generateWizardContent();
        modal.classList.remove('hidden');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        this.attachWizardEventListeners();
    },
    
    // MCP-MARKER:METHOD:GENERATE_WIZARD_CONTENT - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–∞—Å—Ç–µ—Ä–∞
    generateWizardContent() {
        const steps = [
            { number: 1, title: '–í—ã–±–æ—Ä –ø–ª–∞–Ω–∞', icon: 'üìã', active: this.currentStep === 1 },
            { number: 2, title: '–í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã', icon: 'üí≥', active: this.currentStep === 2 },
            { number: 3, title: '–û–ø–ª–∞—Ç–∞', icon: 'üîó', active: this.currentStep === 3 },
            { number: 4, title: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', icon: '‚úÖ', active: this.currentStep === 4 }
        ];
        
        const stepsHTML = steps.map(step => `
            <div class="wizard-step ${step.active ? 'active' : ''} ${step.number < this.currentStep ? 'completed' : ''}" 
                 style="display: flex; flex-direction: column; align-items: center; padding: 1rem; border-radius: 8px; 
                        background: ${step.active ? 'var(--primary-color)' : step.number < this.currentStep ? 'var(--success-color)' : 'var(--bg-primary)'}; 
                        color: ${step.active || step.number < this.currentStep ? 'white' : 'var(--text-secondary)'}; 
                        border: 2px solid ${step.active ? 'var(--primary-color)' : step.number < this.currentStep ? 'var(--success-color)' : 'var(--border-color)'};">
                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">${step.icon}</div>
                <div style="font-weight: 600; font-size: 0.9rem; text-align: center;">${step.title}</div>
                <div style="font-size: 0.8rem; margin-top: 0.3rem;">–®–∞–≥ ${step.number}</div>
            </div>
        `).join('');
        
        return `
            <div class="deposit-wizard-container">
                <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —à–∞–≥–æ–≤ -->
                <div class="wizard-steps" style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin-bottom: 2rem; padding-bottom: 1rem; border-bottom: 1px solid var(--border-color);">
                    ${stepsHTML}
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ -->
                <div class="wizard-content" style="min-height: 400px;">
                    ${this.getStepContent()}
                </div>
                
                <!-- –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ -->
                <div class="wizard-navigation" style="display: flex; justify-content: space-between; margin-top: 2rem; padding-top: 1rem; border-top: 1px solid var(--border-color);">
                    <button id="wizard-back" class="btn-outline" 
                            onclick="window.DepositCreationSystem.previousStep()" 
                            style="visibility: ${this.currentStep > 1 ? 'visible' : 'hidden'}">
                        ‚Üê –ù–∞–∑–∞–¥
                    </button>
                    <button id="wizard-next" class="btn" 
                            onclick="window.DepositCreationSystem.nextStep()">
                        ${this.currentStep === 4 ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–î–∞–ª–µ–µ ‚Üí'}
                    </button>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:GET_STEP_CONTENT - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —à–∞–≥–∞
    getStepContent() {
        switch (this.currentStep) {
            case 1:
                return this.getStep1Content();
            case 2:
                return this.getStep2Content();
            case 3:
                return this.getStep3Content();
            case 4:
                return this.getStep4Content();
            default:
                return '<div>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —à–∞–≥</div>';
        }
    },
    
    // MCP-MARKER:METHOD:GET_STEP1_CONTENT - –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ 1: –í—ã–±–æ—Ä –ø–ª–∞–Ω–∞
    getStep1Content() {
        if (!this.selectedPlan) return '<div>–ü–ª–∞–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω</div>';
        
        const profit = (this.selectedPlan.usdtAmount * this.selectedPlan.percentage / 100) - this.selectedPlan.usdtAmount;
        const dailyProfit = profit / this.selectedPlan.days;
        
        return `
            <div class="step-content">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                    üìã –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
                </h3>
                
                <div style="background: var(--bg-primary); padding: 2rem; border-radius: 12px; border: 2px solid var(--primary-color); margin-bottom: 2rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                        <div>
                            <h4 style="color: var(--primary-color); margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                                <span style="font-size: 2rem;">${this.getPlanIcon(this.selectedPlan.name)}</span>
                                ${this.selectedPlan.name}
                            </h4>
                            <p style="color: var(--text-secondary); margin: 0;">${this.selectedPlan.description}</p>
                        </div>
                        <div style="text-align: right;">
                            <div style="font-size: 1.8rem; font-weight: 700; color: var(--text-primary);">
                                $${this.selectedPlan.usdtAmount.toLocaleString()}
                            </div>
                            <div style="color: var(--success-color); font-size: 1rem; font-weight: 600;">
                                ${this.selectedPlan.percentage}% –∑–∞ ${this.selectedPlan.days} –¥–Ω–µ–π
                            </div>
                        </div>
                    </div>
                    
                    <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin-bottom: 1.5rem;">
                        <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                            <div style="color: var(--text-primary); font-weight: 600; font-size: 1.1rem;">$${this.selectedPlan.usdtAmount}</div>
                        </div>
                        <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å</div>
                            <div style="color: var(--success-color); font-weight: 600; font-size: 1.1rem;">$${profit.toFixed(2)}</div>
                        </div>
                        <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</div>
                            <div style="color: var(--primary-color); font-weight: 600; font-size: 1.1rem;">$${dailyProfit.toFixed(2)}</div>
                        </div>
                        <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                            <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem;">–û–±—â–∏–π –≤–æ–∑–≤—Ä–∞—Ç</div>
                            <div style="color: var(--warning-color); font-weight: 600; font-size: 1.1rem;">$${(this.selectedPlan.usdtAmount + profit).toFixed(2)}</div>
                        </div>
                    </div>
                    
                    <div style="background: var(--bg-secondary); padding: 1rem; border-radius: 8px;">
                        <h5 style="color: var(--secondary-color); margin-bottom: 0.8rem;">üí∞ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</h5>
                        <div style="display: flex; gap: 1rem;">
                            ${this.selectedPlan.currencies.map(currency => `
                                <div style="display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 1rem; background: var(--bg-primary); border-radius: 6px; border: 1px solid var(--border-color);">
                                    <span style="font-size: 1.2rem;">${currency === 'USDT' ? 'üíµ' : 'ü™ô'}</span>
                                    <span style="color: var(--text-primary); font-weight: 600;">${currency}</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
                
                <div style="background: rgba(0, 212, 255, 0.1); padding: 1rem; border-radius: 8px; border: 1px solid var(--secondary-color);">
                    <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem;">
                        <span style="font-size: 1.2rem;">‚ÑπÔ∏è</span>
                        <span style="color: var(--secondary-color); font-weight: 600;">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>
                    </div>
                    <ul style="color: var(--text-secondary); margin: 0; padding-left: 1.5rem; line-height: 1.6;">
                        <li>–î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞</li>
                        <li>–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ ${this.selectedPlan.days} –¥–Ω–µ–π</li>
                        <li>–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</li>
                        <li>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ —Å–µ—Ç–∏ BSC (~$0.10-0.50)</li>
                    </ul>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:GET_STEP2_CONTENT - –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ 2: –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
    getStep2Content() {
        if (!this.selectedPlan) return '<div>–ü–ª–∞–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω</div>';
        
        return `
            <div class="step-content">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                    üí≥ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
                </h3>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
                    ${this.selectedPlan.currencies.map(currency => `
                        <div class="currency-card ${this.selectedCurrency === currency ? 'selected' : ''}" 
                             onclick="window.DepositCreationSystem.selectCurrency('${currency}')"
                             style="background: var(--bg-primary); padding: 2rem; border-radius: 12px; border: 2px solid ${this.selectedCurrency === currency ? 'var(--primary-color)' : 'var(--border-color)'}; cursor: pointer; transition: all 0.3s ease; position: relative;">
                            
                            ${this.selectedCurrency === currency ? '<div style="position: absolute; top: 1rem; right: 1rem; color: var(--success-color); font-size: 1.5rem;">‚úì</div>' : ''}
                            
                            <div style="text-align: center; margin-bottom: 1.5rem;">
                                <div style="font-size: 3rem; margin-bottom: 0.5rem;">${currency === 'USDT' ? 'üíµ' : 'ü™ô'}</div>
                                <h4 style="color: var(--text-primary); margin-bottom: 0.5rem;">${currency}</h4>
                                <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0;">
                                    ${currency === 'USDT' ? 'Tether USD - –°—Ç–∞–±–∏–ª—å–Ω–∞—è –º–æ–Ω–µ—Ç–∞' : 'PLEX ONE - –¢–æ–∫–µ–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'}
                                </p>
                            </div>
                            
                            <div style="background: var(--bg-secondary); padding: 1rem; border-radius: 8px; margin-bottom: 1rem;">
                                <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                                    <span style="color: var(--text-secondary);">–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</span>
                                    <span style="color: var(--text-primary); font-weight: 600;">
                                        ${currency === 'USDT' ? 
                                            `$${this.selectedPlan.usdtAmount}` : 
                                            `${this.selectedPlan.plexAmount.toLocaleString()} PLEX`
                                        }
                                    </span>
                                </div>
                                ${currency === 'PLEX' ? `
                                    <div style="display: flex; justify-content: space-between; font-size: 0.8rem;">
                                        <span style="color: var(--text-secondary);">‚âà USD:</span>
                                        <span style="color: var(--secondary-color);">$${(this.selectedPlan.plexAmount * 0.05).toFixed(2)}</span>
                                    </div>
                                ` : ''}
                            </div>
                            
                            <div style="font-size: 0.85rem; color: var(--text-secondary); line-height: 1.4;">
                                ${currency === 'USDT' ? 
                                    '‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏: ~$0.10-0.50<br>‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã<br>‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' :
                                    '‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏: ~$0.10-0.50<br>‚Ä¢ –ë–æ–Ω—É—Å—ã –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ PLEX<br>‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏'
                                }
                            </div>
                        </div>
                    `).join('')}
                </div>
                
                ${this.selectedCurrency ? `
                    <div style="background: rgba(0, 255, 65, 0.1); padding: 1rem; border-radius: 8px; border: 1px solid var(--success-color);">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem;">
                            <span style="font-size: 1.2rem;">‚úÖ</span>
                            <span style="color: var(--success-color); font-weight: 600;">–í–∞–ª—é—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞: ${this.selectedCurrency}</span>
                        </div>
                        <p style="color: var(--text-secondary); margin: 0; font-size: 0.9rem;">
                            –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ QR-–∫–æ–¥ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã
                        </p>
                    </div>
                ` : `
                    <div style="background: rgba(255, 165, 0, 0.1); padding: 1rem; border-radius: 8px; border: 1px solid var(--warning-color);">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem;">
                            <span style="font-size: 1.2rem;">‚ö†Ô∏è</span>
                            <span style="color: var(--warning-color); font-weight: 600;">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è</span>
                        </div>
                        <p style="color: var(--text-secondary); margin: 0; font-size: 0.9rem;">
                            –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥–µ–ø–æ–∑–∏—Ç–∞
                        </p>
                    </div>
                `}
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:GET_STEP3_CONTENT - –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ 3: –û–ø–ª–∞—Ç–∞
    getStep3Content() {
        if (!this.selectedPlan || !this.selectedCurrency) {
            return '<div>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞</div>';
        }
        
        this.generatePaymentInfo();
        
        return `
            <div class="step-content">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                    üîó –û–ø–ª–∞—Ç–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
                </h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem;">
                    <!-- QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã -->
                    <div style="text-align: center;">
                        <h4 style="color: var(--secondary-color); margin-bottom: 1rem;">üì± QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã</h4>
                        <div style="background: white; padding: 1rem; border-radius: 12px; display: inline-block; margin-bottom: 1rem;">
                            <div id="qr-code-container" style="width: 200px; height: 200px; background: #f0f0f0; display: flex; align-items: center; justify-content: center; font-size: 0.8rem; color: #666;">
                                QR-–∫–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...
                            </div>
                        </div>
                        <div style="font-size: 0.8rem; color: var(--text-secondary);">
                            –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ
                        </div>
                    </div>
                    
                    <!-- –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞ -->
                    <div>
                        <h4 style="color: var(--warning-color); margin-bottom: 1rem;">üí∞ –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞</h4>
                        <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1rem;">
                            <div style="margin-bottom: 1rem;">
                                <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.3rem;">–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</div>
                                <div style="font-family: monospace; font-size: 0.85rem; color: var(--text-primary); background: var(--bg-secondary); padding: 0.5rem; border-radius: 6px; word-break: break-all;">
                                    ${window.GENESIS_CONFIG.addresses.system}
                                </div>
                                <button onclick="window.DepositCreationSystem.copyToClipboard('${window.GENESIS_CONFIG.addresses.system}')" 
                                        class="btn-secondary" style="margin-top: 0.5rem; font-size: 0.8rem; padding: 0.3rem 0.8rem;">
                                    üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å
                                </button>
                            </div>
                            
                            <div style="margin-bottom: 1rem;">
                                <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.3rem;">–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</div>
                                <div style="font-size: 1.2rem; font-weight: 600; color: var(--primary-color);">
                                    ${this.selectedCurrency === 'USDT' ? 
                                        `${this.selectedPlan.usdtAmount} USDT` : 
                                        `${this.selectedPlan.plexAmount.toLocaleString()} PLEX`
                                    }
                                </div>
                                <button onclick="window.DepositCreationSystem.copyToClipboard('${this.selectedCurrency === 'USDT' ? this.selectedPlan.usdtAmount : this.selectedPlan.plexAmount}')" 
                                        class="btn-secondary" style="margin-top: 0.5rem; font-size: 0.8rem; padding: 0.3rem 0.8rem;">
                                    üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É
                                </button>
                            </div>
                            
                            <div style="margin-bottom: 1rem;">
                                <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.3rem;">–°–µ—Ç—å:</div>
                                <div style="color: var(--secondary-color); font-weight: 600;">BSC (BEP-20)</div>
                            </div>
                            
                            <div>
                                <div style="color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.3rem;">–¢–æ–∫–µ–Ω –∫–æ–Ω—Ç—Ä–∞–∫—Ç:</div>
                                <div style="font-family: monospace; font-size: 0.8rem; color: var(--text-primary); background: var(--bg-secondary); padding: 0.5rem; border-radius: 6px; word-break: break-all;">
                                    ${this.selectedCurrency === 'USDT' ? 
                                        window.GENESIS_CONFIG.usdt.address : 
                                        window.GENESIS_CONFIG.plex.address
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ -->
                <div style="background: rgba(255, 107, 53, 0.1); padding: 1.5rem; border-radius: 12px; border: 1px solid var(--primary-color); margin-bottom: 2rem;">
                    <h5 style="color: var(--primary-color); margin-bottom: 1rem;">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ</h5>
                    <ol style="color: var(--text-secondary); line-height: 1.6; margin: 0; padding-left: 1.5rem;">
                        <li>–û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ (Trust Wallet, MetaMask, Binance Chain Wallet)</li>
                        <li>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å BSC (BEP-20)</li>
                        <li>–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è</li>
                        <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—É–º–º–∞ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤—ã—à–µ</li>
                        <li>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ</li>
                        <li>–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–æ–±—ã—á–Ω–æ 1-2 –º–∏–Ω—É—Ç—ã)</li>
                    </ol>
                </div>
                
                <!-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ -->
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; border: 1px solid var(--border-color);">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h5 style="color: var(--secondary-color); margin: 0;">üîç –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã</h5>
                        <button onclick="window.DepositCreationSystem.checkPaymentStatus()" 
                                class="btn-outline" style="font-size: 0.8rem; padding: 0.5rem 1rem;">
                            üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                        </button>
                    </div>
                    <div id="payment-status" style="color: var(--warning-color); font-weight: 600;">
                        ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã...
                    </div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem; margin-top: 0.5rem;">
                        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                    </div>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:GET_STEP4_CONTENT - –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ 4: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    getStep4Content() {
        return `
            <div class="step-content">
                <h3 style="color: var(--success-color); margin-bottom: 1.5rem; text-align: center;">
                    ‚úÖ –î–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
                </h3>
                
                <div style="text-align: center; margin-bottom: 2rem;">
                    <div style="font-size: 4rem; margin-bottom: 1rem; animation: pulse 2s infinite;">üéâ</div>
                    <h4 style="color: var(--text-primary); margin-bottom: 0.5rem;">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h4>
                    <p style="color: var(--text-secondary);">–í–∞—à –¥–µ–ø–æ–∑–∏—Ç ${this.selectedPlan?.name} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</p>
                </div>
                
                <div style="background: var(--bg-primary); padding: 2rem; border-radius: 12px; border: 2px solid var(--success-color); margin-bottom: 2rem;">
                    <h5 style="color: var(--success-color); margin-bottom: 1rem;">üìä –°–≤–æ–¥–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–∞</h5>
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem;">
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–ü–ª–∞–Ω:</div>
                            <div style="color: var(--text-primary); font-weight: 600;">${this.selectedPlan?.name}</div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</div>
                            <div style="color: var(--text-primary); font-weight: 600;">
                                ${this.selectedCurrency === 'USDT' ? 
                                    `$${this.selectedPlan?.usdtAmount}` : 
                                    `${this.selectedPlan?.plexAmount.toLocaleString()} PLEX`
                                }
                            </div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ä–æ–∫:</div>
                            <div style="color: var(--text-primary); font-weight: 600;">${this.selectedPlan?.days} –¥–Ω–µ–π</div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</div>
                            <div style="color: var(--success-color); font-weight: 600;">${this.selectedPlan?.percentage}%</div>
                        </div>
                    </div>
                </div>
                
                <div style="display: flex; gap: 1rem; justify-content: center;">
                    <button onclick="window.DepositCreationSystem.viewInPortfolio()" 
                            class="btn" style="padding: 1rem 2rem;">
                        üíº –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å
                    </button>
                    <button onclick="window.DepositCreationSystem.createAnother()" 
                            class="btn-outline" style="padding: 1rem 2rem;">
                        ‚ûï –°–æ–∑–¥–∞—Ç—å –µ—â—ë
                    </button>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:SELECT_CURRENCY - –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
    selectCurrency(currency) {
        this.selectedCurrency = currency;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        document.querySelectorAll('.currency-card').forEach(card => {
            card.classList.remove('selected');
            card.style.borderColor = 'var(--border-color)';
        });
        
        document.querySelector(`[onclick="window.DepositCreationSystem.selectCurrency('${currency}')"]`).style.borderColor = 'var(--primary-color)';
        
        // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
        this.attachWizardEventListeners();
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log(`üí≥ –í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: ${currency}`, 'info');
        }
    },
    
    // MCP-MARKER:METHOD:GENERATE_PAYMENT_INFO - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
    generatePaymentInfo() {
        const amount = this.selectedCurrency === 'USDT' ? 
            this.selectedPlan.usdtAmount : 
            this.selectedPlan.plexAmount;
            
        const tokenAddress = this.selectedCurrency === 'USDT' ? 
            window.GENESIS_CONFIG.usdt.address : 
            window.GENESIS_CONFIG.plex.address;
        
        this.paymentInfo = {
            amount: amount,
            currency: this.selectedCurrency,
            address: window.GENESIS_CONFIG.addresses.system,
            tokenAddress: tokenAddress,
            network: 'BSC',
            qrCodeData: this.generatePaymentURL(amount, tokenAddress)
        };
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
        setTimeout(() => {
            this.generateQRCode();
        }, 100);
    },
    
    // MCP-MARKER:METHOD:GENERATE_PAYMENT_URL - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
    generatePaymentURL(amount, tokenAddress) {
        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Trust Wallet / MetaMask
        return `https://link.trustwallet.com/send?coin=20000714&address=${window.GENESIS_CONFIG.addresses.system}&amount=${amount}&token_id=${tokenAddress}`;
    },
    
    // MCP-MARKER:METHOD:GENERATE_QR_CODE - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞
    generateQRCode() {
        const container = document.getElementById('qr-code-container');
        if (!container || !this.paymentInfo) return;
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É QR.js)
        container.innerHTML = `
            <div style="text-align: center; color: #333; font-size: 0.7rem; padding: 1rem; line-height: 1.4;">
                <div style="font-weight: bold; margin-bottom: 0.5rem;">–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:</div>
                <div>–ê–¥—Ä–µ—Å: ...${this.paymentInfo.address.slice(-8)}</div>
                <div>–°—É–º–º–∞: ${this.paymentInfo.amount} ${this.paymentInfo.currency}</div>
                <div style="margin-top: 0.5rem; font-size: 0.6rem;">–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –∫–æ—à–µ–ª—å–∫–µ</div>
            </div>
        `;
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å QR.js:
        // const qr = qrcode(0, 'M');
        // qr.addData(this.paymentInfo.qrCodeData);
        // qr.make();
        // container.innerHTML = qr.createImgTag(4);
    },
    
    // MCP-MARKER:METHOD:COPY_TO_CLIPBOARD - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            this.showNotification('üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ', '–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å', 'error');
        });
    },
    
    // MCP-MARKER:METHOD:NEXT_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    nextStep() {
        if (this.currentStep === 2 && !this.selectedCurrency) {
            this.showError('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è');
            return;
        }
        
        if (this.currentStep === 4) {
            this.completeDeposit();
            return;
        }
        
        if (this.currentStep < 4) {
            this.currentStep++;
            document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
            this.attachWizardEventListeners();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã –Ω–∞ —à–∞–≥–µ 3
            if (this.currentStep === 3) {
                this.startPaymentMonitoring();
            }
        }
    },
    
    // MCP-MARKER:METHOD:PREVIOUS_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
    previousStep() {
        if (this.currentStep > 1) {
            this.currentStep--;
            document.getElementById('deposit-modal-content').innerHTML = this.generateWizardContent();
            this.attachWizardEventListeners();
            
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—Å–ª–∏ –ø–æ–∫–∏–¥–∞–µ–º —à–∞–≥ 3
            if (this.currentStep !== 3) {
                this.stopPaymentMonitoring();
            }
        }
    },
    
    // MCP-MARKER:METHOD:START_PAYMENT_MONITORING - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
    startPaymentMonitoring() {
        this.stopPaymentMonitoring(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        
        this.transactionMonitoring = setInterval(() => {
            this.checkPaymentStatus();
        }, 30000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('üîç –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã', 'info');
        }
    },
    
    // MCP-MARKER:METHOD:STOP_PAYMENT_MONITORING - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–ø–ª–∞—Ç—ã
    stopPaymentMonitoring() {
        if (this.transactionMonitoring) {
            clearInterval(this.transactionMonitoring);
            this.transactionMonitoring = null;
        }
    },
    
    // MCP-MARKER:METHOD:CHECK_PAYMENT_STATUS - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
    async checkPaymentStatus() {
        try {
            const userAddress = localStorage.getItem('genesis_user_address');
            if (!userAddress || !this.paymentInfo) return;
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const transactions = await window.CabinetDepositService.getTransactionsForAddress(userAddress);
            
            // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –Ω—É–∂–Ω–æ–π —Å—É–º–º–æ–π –∏ –≤–∞–ª—é—Ç–æ–π
            const matchingTx = transactions.find(tx => {
                const amount = window.CabinetDepositService.parseTransactionAmount(tx);
                const currency = window.CabinetDepositService.getTransactionCurrency(tx);
                
                return currency === this.selectedCurrency && 
                       Math.abs(amount - this.paymentInfo.amount) < (this.paymentInfo.amount * 0.05);
            });
            
            if (matchingTx) {
                this.onPaymentConfirmed(matchingTx);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã:', error);
        }
    },
    
    // MCP-MARKER:METHOD:ON_PAYMENT_CONFIRMED - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    onPaymentConfirmed(transaction) {
        this.stopPaymentMonitoring();
        
        const statusElement = document.getElementById('payment-status');
        if (statusElement) {
            statusElement.innerHTML = '‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!';
            statusElement.style.color = 'var(--success-color)';
        }
        
        if (window.GenesisTerminal) {
            window.GenesisTerminal.log('‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –¥–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', 'success');
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            this.nextStep();
        }, 2000);
    },
    
    // MCP-MARKER:METHOD:COMPLETE_DEPOSIT - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    completeDeposit() {
        this.closeAllModals();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
        if (window.CabinetDepositService) {
            window.CabinetDepositService.refreshData();
        }
        
        this.showNotification('üéâ –£—Å–ø–µ—Ö!', '–î–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', 'success');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.resetState();
    },
    
    // MCP-MARKER:METHOD:VIEW_IN_PORTFOLIO - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ
    viewInPortfolio() {
        this.closeAllModals();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª –ø–æ—Ä—Ç—Ñ–µ–ª—è
        if (window.cabinetApp && window.cabinetApp.navigateTo) {
            window.cabinetApp.navigateTo('portfolio');
        }
        
        this.resetState();
    },
    
    // MCP-MARKER:METHOD:CREATE_ANOTHER - –°–æ–∑–¥–∞–Ω–∏–µ –µ—â–µ –æ–¥–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    createAnother() {
        this.resetState();
        this.closeAllModals();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        if (window.CabinetDepositService && window.CabinetDepositService.showCreateDepositModal) {
            window.CabinetDepositService.showCreateDepositModal();
        }
    },
    
    // MCP-MARKER:METHOD:ATTACH_WIZARD_EVENT_LISTENERS - –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
    attachWizardEventListeners() {
        // –£–∂–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –≤ HTML —á–µ—Ä–µ–∑ onclick
    },
    
    // MCP-MARKER:METHOD:CLOSE_ALL_MODALS - –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeAllModals() {
        const modal = document.getElementById('create-deposit-modal');
        if (modal) {
            modal.classList.add('hidden');
        }
        
        this.stopPaymentMonitoring();
    },
    
    // MCP-MARKER:METHOD:RESET_STATE - –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    resetState() {
        this.currentStep = 1;
        this.selectedPlan = null;
        this.selectedCurrency = null;
        this.paymentInfo = null;
        this.stopPaymentMonitoring();
    },
    
    // MCP-MARKER:METHOD:SHOW_ERROR - –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
    showError(message) {
        if (window.CabinetDepositService && window.CabinetDepositService.showNotification) {
            window.CabinetDepositService.showNotification('‚ùå –û—à–∏–±–∫–∞', message, 'error');
        } else {
            alert('‚ùå ' + message);
        }
    },
    
    // MCP-MARKER:METHOD:SHOW_NOTIFICATION - –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification(title, message, type = 'info') {
        if (window.CabinetDepositService && window.CabinetDepositService.showNotification) {
            window.CabinetDepositService.showNotification(title, message, type);
        } else {
            alert(title + '\n' + message);
        }
    },
    
    // MCP-MARKER:UTILITY_METHODS - –£—Ç–∏–ª–∏—Ç—ã
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserPlanIds() {
        if (window.CabinetDepositService && window.CabinetDepositService.userDeposits) {
            return window.CabinetDepositService.userDeposits.map(d => d.planId);
        }
        return [];
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–ª–∞–Ω–∞
    getPlanIcon(planName) {
        const icons = {
            'TRIAL': 'üß™',
            'BASIC': 'üíº',
            'STARTER': 'üöÄ',
            'PROGRESSIVE1': 'üìà',
            'PROGRESSIVE2': 'üí´',
            'PROGRESSIVE3': '‚≠ê',
            'PROGRESSIVE4': 'üåü',
            'PROGRESSIVE5': '‚ú®',
            'PROGRESSIVE6': 'üíé',
            'PROGRESSIVE7': 'üëë',
            'PROGRESSIVE8': 'üèÜ',
            'RECOMMENDED': 'üéØ',
            'PLATINUM': 'ü•à',
            'MAXIMUM': 'ü•á'
        };
        return icons[planName] || 'üí∞';
    }
};

// MCP-MARKER:GLOBAL_FUNCTIONS - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.closeDepositModal = () => window.DepositCreationSystem.closeAllModals();

// MCP-MARKER:INITIALIZATION:AUTO_INIT - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.DepositCreationSystem.init();
});

console.log('üí∞ GENESIS Deposit Creation System loaded');
