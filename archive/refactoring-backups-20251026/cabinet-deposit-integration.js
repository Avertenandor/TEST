/**
 * GENESIS 1.1 - –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
 * MCP-MARKER:MODULE:CABINET_DEPOSIT_INTEGRATION - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
 * MCP-MARKER:FILE:CABINET_DEPOSIT_INTEGRATION_JS - –§–∞–π–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 */

// MCP-MARKER:CLASS:GENESIS_CABINET - –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç –∫–∞–±–∏–Ω–µ—Ç–∞ —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏
window.GenesisCabinet = {
    
    // MCP-MARKER:PROPERTY:CABINET_STATE - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞
    currentUser: null,
    selectedPlan: null,
    activeModal: null,
    transactionInProgress: false,
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:INIT - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞
    init: function(userAddress) {
        console.log('üíº –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Genesis Cabinet...');
        this.currentUser = userAddress;
        this.setupEventListeners();
        this.loadUserDeposits();
        console.log('‚úÖ Genesis Cabinet –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SETUP_LISTENERS - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners: function() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('click', (e) => {
            if (e.target.closest('.modal-overlay') && !e.target.closest('.modal-container')) {
                this.closeAllModals();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.activeModal) {
                this.closeAllModals();
            }
        });
        
        console.log('üéØ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:LOAD_DEPOSITS - –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserDeposits: async function() {
        if (!this.currentUser) return;
        
        try {
            if (window.CabinetDepositService) {
                await window.CabinetDepositService.init(this.currentUser);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', error);
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SHOW_MODAL - –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    showDepositModal: function(selectedPlanId = null) {
        console.log('üí∞ –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞');
        
        this.selectedPlan = selectedPlanId;
        const modal = document.getElementById('create-deposit-modal');
        const content = document.getElementById('deposit-modal-content');
        
        if (!modal || !content) {
            alert('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
            return;
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        content.innerHTML = this.generateDepositModalContent();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.classList.remove('hidden');
        this.activeModal = 'create-deposit';
        
        // –ï—Å–ª–∏ –ø–ª–∞–Ω —É–∂–µ –≤—ã–±—Ä–∞–Ω, —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –¥–µ—Ç–∞–ª–∏
        if (selectedPlanId) {
            this.selectDepositPlan(selectedPlanId);
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GENERATE_CONTENT - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    generateDepositModalContent: function() {
        if (!window.GENESIS_CONFIG || !window.GENESIS_CONFIG.depositPlans) {
            return `
                <div class="empty-state">
                    <div class="empty-icon">‚ùå</div>
                    <h3>–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h3>
                    <p>–ü–ª–∞–Ω—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.</p>
                </div>
            `;
        }
        
        const plans = window.GENESIS_CONFIG.depositPlans;
        const userPlanIds = this.getUserPlanIds();
        
        return `
            <div class="deposit-wizard">
                <div class="wizard-steps" style="display: flex; justify-content: center; margin-bottom: 2rem; border-bottom: 1px solid var(--border-color); padding-bottom: 1rem;">
                    <div class="step active" data-step="1">
                        <span class="step-number">1</span>
                        <span class="step-title">–í—ã–±–æ—Ä –ø–ª–∞–Ω–∞</span>
                    </div>
                    <div class="step" data-step="2">
                        <span class="step-number">2</span>
                        <span class="step-title">–û–ø–ª–∞—Ç–∞</span>
                    </div>
                    <div class="step" data-step="3">
                        <span class="step-number">3</span>
                        <span class="step-title">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</span>
                    </div>
                </div>
                
                <div id="step-1" class="wizard-step active">
                    <h4 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                        üìä –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞
                    </h4>
                    
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem; max-height: 400px; overflow-y: auto;">
                        ${plans.map(plan => this.generatePlanOptionCard(plan, userPlanIds)).join('')}
                    </div>
                    
                    <div style="margin-top: 1.5rem; padding: 1rem; background: var(--bg-primary); border-radius: 8px; border-left: 4px solid var(--secondary-color);">
                        <h5 style="color: var(--secondary-color); margin-bottom: 0.5rem;">‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h5>
                        <ul style="color: var(--text-secondary); font-size: 0.9rem; line-height: 1.6; margin: 0; padding-left: 1.5rem;">
                            <li>–î–µ–ø–æ–∑–∏—Ç—ã –ø–æ–∫—É–ø–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ (—Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö)</li>
                            <li>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –æ—Ç–∫—Ä–æ—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö</li>
                            <li>–ü—Ä–µ–º–∏—É–º –ø–ª–∞–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –æ–ø–ª–∞—Ç—É PLEX —Ç–æ–∫–µ–Ω–∞–º–∏</li>
                            <li>–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ BSC</li>
                        </ul>
                    </div>
                </div>
                
                <div id="step-2" class="wizard-step hidden">
                    <div id="payment-details">
                        <!-- –î–µ—Ç–∞–ª–∏ –æ–ø–ª–∞—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                    </div>
                </div>
                
                <div id="step-3" class="wizard-step hidden">
                    <div id="confirmation-details">
                        <!-- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                    </div>
                </div>
            </div>
            
            <style>
                .wizard-steps {
                    display: flex;
                    justify-content: center;
                    gap: 2rem;
                }
                
                .step {
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                    color: var(--text-secondary);
                    font-size: 0.9rem;
                }
                
                .step.active {
                    color: var(--primary-color);
                }
                
                .step-number {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    width: 24px;
                    height: 24px;
                    border-radius: 50%;
                    background: var(--bg-primary);
                    border: 2px solid var(--border-color);
                    font-weight: 600;
                    font-size: 0.8rem;
                }
                
                .step.active .step-number {
                    background: var(--primary-color);
                    border-color: var(--primary-color);
                    color: white;
                }
                
                .wizard-step {
                    min-height: 400px;
                }
                
                .wizard-step.hidden {
                    display: none;
                }
                
                .plan-option-card {
                    background: var(--bg-primary);
                    border: 2px solid var(--border-color);
                    border-radius: 8px;
                    padding: 1rem;
                    cursor: pointer;
                    transition: all 0.3s ease;
                }
                
                .plan-option-card:hover:not(.disabled) {
                    border-color: var(--primary-color);
                    transform: translateY(-2px);
                }
                
                .plan-option-card.selected {
                    border-color: var(--primary-color);
                    background: rgba(255, 107, 53, 0.1);
                }
                
                .plan-option-card.disabled {
                    opacity: 0.5;
                    cursor: not-allowed;
                }
                
                .plan-option-card.purchased {
                    border-color: var(--success-color);
                    background: rgba(0, 255, 65, 0.1);
                }
            </style>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GENERATE_CARD - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–ª–∞–Ω–∞
    generatePlanOptionCard: function(plan, userPlanIds) {
        const hasThisPlan = userPlanIds.includes(plan.id);
        const isLocked = this.isPlanLocked(plan, userPlanIds);
        const profit = (plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount;
        const dailyProfit = profit / plan.days;
        
        let cardClass = 'plan-option-card';
        let statusBadge = '';
        
        if (hasThisPlan) {
            cardClass += ' purchased';
            statusBadge = '<div style="background: var(--success-color); color: white; padding: 0.2rem 0.5rem; border-radius: 4px; font-size: 0.7rem; font-weight: 600;">‚úÖ –ü–†–ò–û–ë–†–ï–¢–ï–ù</div>';
        } else if (isLocked) {
            cardClass += ' disabled';
            statusBadge = '<div style="background: var(--warning-color); color: var(--bg-primary); padding: 0.2rem 0.5rem; border-radius: 4px; font-size: 0.7rem; font-weight: 600;">üîí –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù</div>';
        } else {
            statusBadge = '<div style="background: var(--secondary-color); color: var(--bg-primary); padding: 0.2rem 0.5rem; border-radius: 4px; font-size: 0.7rem; font-weight: 600;">üöÄ –î–û–°–¢–£–ü–ï–ù</div>';
        }
        
        const clickHandler = hasThisPlan || isLocked ? '' : `onclick="window.GenesisCabinet.selectDepositPlan('${plan.id}')"`;
        
        return `
            <div class="${cardClass}" ${clickHandler} id="plan-card-${plan.id}">
                <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">
                    <div>
                        <h5 style="color: var(--primary-color); margin: 0 0 0.3rem 0; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1.2rem;">${this.getPlanIcon(plan.name)}</span>
                            ${plan.name}
                        </h5>
                        <p style="color: var(--text-secondary); font-size: 0.8rem; margin: 0;">${plan.description}</p>
                    </div>
                    ${statusBadge}
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">
                    <div style="text-align: center; padding: 0.5rem; background: var(--bg-secondary); border-radius: 4px;">
                        <div style="font-size: 1.1rem; font-weight: 600; color: var(--text-primary);">$${plan.usdtAmount}</div>
                        <div style="font-size: 0.7rem; color: var(--text-secondary);">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è</div>
                    </div>
                    <div style="text-align: center; padding: 0.5rem; background: var(--bg-secondary); border-radius: 4px;">
                        <div style="font-size: 1.1rem; font-weight: 600; color: var(--success-color);">${plan.percentage}%</div>
                        <div style="font-size: 0.7rem; color: var(--text-secondary);">${plan.days} –¥–Ω–µ–π</div>
                    </div>
                </div>
                
                <div style="font-size: 0.8rem; color: var(--text-secondary); text-align: center;">
                    üí∞ –ü—Ä–∏–±—ã–ª—å: <span style="color: var(--success-color); font-weight: 600;">$${profit.toFixed(2)}</span> 
                    ‚Ä¢ –í –¥–µ–Ω—å: <span style="color: var(--warning-color); font-weight: 600;">$${dailyProfit.toFixed(2)}</span>
                </div>
                
                <div style="margin-top: 1rem; font-size: 0.8rem; color: var(--secondary-color); text-align: center;">
                    –í–∞–ª—é—Ç—ã: ${plan.currencies.join(', ')}
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SELECT_PLAN - –í—ã–±–æ—Ä –ø–ª–∞–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    selectDepositPlan: function(planId) {
        console.log('üìã –í—ã–±—Ä–∞–Ω –ø–ª–∞–Ω:', planId);
        
        const plan = window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId);
        if (!plan) {
            alert('‚ùå –ü–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∞
        const userPlanIds = this.getUserPlanIds();
        if (this.isPlanLocked(plan, userPlanIds)) {
            alert('üîí –≠—Ç–æ—Ç –ø–ª–∞–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–ª–∞–Ω—ã.');
            return;
        }
        
        if (userPlanIds.includes(planId)) {
            alert('‚úÖ –≠—Ç–æ—Ç –ø–ª–∞–Ω —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω');
            return;
        }
        
        this.selectedPlan = plan;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
        document.querySelectorAll('.plan-option-card').forEach(card => {
            card.classList.remove('selected');
        });
        
        const selectedCard = document.getElementById(`plan-card-${planId}`);
        if (selectedCard) {
            selectedCard.classList.add('selected');
        }
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        setTimeout(() => {
            this.nextWizardStep();
        }, 500);
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:NEXT_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –º–∞—Å—Ç–µ—Ä–∞
    nextWizardStep: function() {
        const currentStep = document.querySelector('.wizard-step.active');
        const currentStepNumber = parseInt(currentStep.id.split('-')[1]);
        
        if (currentStepNumber === 1 && !this.selectedPlan) {
            alert('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞');
            return;
        }
        
        const nextStepNumber = currentStepNumber + 1;
        const nextStep = document.getElementById(`step-${nextStepNumber}`);
        
        if (!nextStep) return;
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        currentStep.classList.remove('active');
        currentStep.classList.add('hidden');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
        nextStep.classList.remove('hidden');
        nextStep.classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —à–∞–≥–æ–≤
        document.querySelectorAll('.step').forEach(step => {
            step.classList.remove('active');
        });
        document.querySelector(`[data-step="${nextStepNumber}"]`).classList.add('active');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ —à–∞–≥–∞
        if (nextStepNumber === 2) {
            this.loadPaymentStep();
        } else if (nextStepNumber === 3) {
            this.loadConfirmationStep();
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:LOAD_PAYMENT - –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–≥–∞ –æ–ø–ª–∞—Ç—ã
    loadPaymentStep: function() {
        if (!this.selectedPlan) return;
        
        const paymentContainer = document.getElementById('payment-details');
        const plan = this.selectedPlan;
        
        paymentContainer.innerHTML = `
            <h4 style="color: var(--primary-color); margin-bottom: 1.5rem; text-align: center;">
                üí≥ –û–ø–ª–∞—Ç–∞ –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}
            </h4>
            
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 2rem; border: 1px solid var(--border-color);">
                <h5 style="color: var(--text-primary); margin-bottom: 1rem;">üìä –î–µ—Ç–∞–ª–∏ –¥–µ–ø–æ–∑–∏—Ç–∞:</h5>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                    <div>
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–ü–ª–∞–Ω:</div>
                        <div style="color: var(--primary-color); font-weight: 600;">${plan.name}</div>
                    </div>
                    <div>
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</div>
                        <div style="color: var(--text-primary); font-weight: 600;">$${plan.usdtAmount}</div>
                    </div>
                    <div>
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</div>
                        <div style="color: var(--success-color); font-weight: 600;">${plan.percentage}%</div>
                    </div>
                    <div>
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ä–æ–∫:</div>
                        <div style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</div>
                    </div>
                </div>
            </div>
            
            <div style="display: grid; grid-template-columns: ${plan.currencies.length > 1 ? '1fr 1fr' : '1fr'}; gap: 1.5rem;">
                ${plan.currencies.map(currency => this.generatePaymentOption(plan, currency)).join('')}
            </div>
            
            <div style="margin-top: 2rem; padding: 1rem; background: rgba(255, 165, 0, 0.1); border-radius: 8px; border: 1px solid var(--warning-color);">
                <h5 style="color: var(--warning-color); margin-bottom: 0.5rem;">‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:</h5>
                <ul style="color: var(--text-secondary); font-size: 0.9rem; line-height: 1.6; margin: 0; padding-left: 1.5rem;">
                    <li>–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å</li>
                    <li>–î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ</li>
                    <li>–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 3-5 –º–∏–Ω—É—Ç</li>
                    <li>–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∏—Ä–∂–µ–≤—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤</li>
                </ul>
            </div>
            
            <div style="display: flex; gap: 1rem; justify-content: center; margin-top: 2rem;">
                <button onclick="window.GenesisCabinet.previousWizardStep()" class="btn-outline">
                    ‚Üê –ù–∞–∑–∞–¥
                </button>
                <button onclick="window.GenesisCabinet.checkPaymentStatus()" class="btn" id="check-payment-btn">
                    üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É
                </button>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:PAYMENT_OPTION - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã
    generatePaymentOption: function(plan, currency) {
        const amount = currency === 'USDT' ? plan.usdtAmount : plan.plexAmount;
        const address = currency === 'USDT' ? 
            window.GENESIS_CONFIG.addresses.system : 
            window.GENESIS_CONFIG.plex.address;
        
        return `
            <div class="payment-option" style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; border: 2px solid var(--border-color); cursor: pointer;" onclick="window.GenesisCabinet.selectPaymentCurrency('${currency}')">
                <div style="text-align: center; margin-bottom: 1rem;">
                    <div style="font-size: 2rem; margin-bottom: 0.5rem;">
                        ${currency === 'USDT' ? 'üí∞' : 'ü™ô'}
                    </div>
                    <h5 style="color: var(--primary-color); margin: 0;">–û–ø–ª–∞—Ç–∞ ${currency}</h5>
                </div>
                
                <div style="background: var(--bg-secondary); padding: 1rem; border-radius: 8px; margin-bottom: 1rem;">
                    <div style="text-align: center;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–ö –æ–ø–ª–∞—Ç–µ:</div>
                        <div style="color: var(--text-primary); font-size: 1.5rem; font-weight: 700; font-family: 'Orbitron', monospace;">
                            ${amount.toFixed(currency === 'USDT' ? 2 : 0)} ${currency}
                        </div>
                    </div>
                </div>
                
                <div style="background: var(--bg-secondary); padding: 1rem; border-radius: 8px; margin-bottom: 1rem;">
                    <div style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.3rem;">–ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:</div>
                    <div style="font-family: monospace; font-size: 0.85rem; color: var(--secondary-color); word-break: break-all; padding: 0.5rem; background: var(--bg-primary); border-radius: 4px;">
                        ${address}
                    </div>
                    <button onclick="window.GenesisCabinet.copyToClipboard('${address}', '–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!')" class="btn-secondary" style="width: 100%; margin-top: 0.5rem; font-size: 0.8rem;">
                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å
                    </button>
                </div>
                
                <div style="text-align: center;">
                    <div id="qr-${currency}" style="margin-bottom: 1rem;">
                        <!-- QR –∫–æ–¥ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–¥–µ—Å—å -->
                    </div>
                    <button onclick="window.GenesisCabinet.generateQRCode('${address}', '${amount}', '${currency}')" class="btn-outline" style="font-size: 0.8rem;">
                        üì± –ü–æ–∫–∞–∑–∞—Ç—å QR –∫–æ–¥
                    </button>
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SELECT_CURRENCY - –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –æ–ø–ª–∞—Ç—ã
    selectPaymentCurrency: function(currency) {
        console.log('üí± –í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã:', currency);
        
        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        document.querySelectorAll('.payment-option').forEach(option => {
            option.style.borderColor = 'var(--border-color)';
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        event.currentTarget.style.borderColor = 'var(--primary-color)';
        
        this.selectedCurrency = currency;
        
        // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
        const checkBtn = document.getElementById('check-payment-btn');
        if (checkBtn) {
            checkBtn.style.opacity = '1';
            checkBtn.disabled = false;
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:COPY_CLIPBOARD - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    copyToClipboard: function(text, message = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!') {
        navigator.clipboard.writeText(text).then(() => {
            this.showNotification('üìã ' + message, '', 'success');
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement('textarea');
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            this.showNotification('üìã ' + message, '', 'success');
        });
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GENERATE_QR - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
    generateQRCode: function(address, amount, currency) {
        const qrContainer = document.getElementById(`qr-${currency}`);
        if (!qrContainer) return;
        
        // –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞ —á–µ—Ä–µ–∑ API
        const qrData = currency === 'USDT' ? 
            `${address}` : 
            `${address}?amount=${amount}`;
        
        const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(qrData)}`;
        
        qrContainer.innerHTML = `
            <div style="text-align: center;">
                <img src="${qrUrl}" alt="QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã" style="border-radius: 8px; border: 2px solid var(--border-color);">
                <div style="color: var(--text-secondary); font-size: 0.8rem; margin-top: 0.5rem;">
                    QR –∫–æ–¥ –¥–ª—è ${currency} –æ–ø–ª–∞—Ç—ã
                </div>
            </div>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CHECK_PAYMENT - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
    checkPaymentStatus: async function() {
        if (!this.selectedPlan || !this.selectedCurrency) {
            alert('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –∏ –≤–∞–ª—é—Ç—É –æ–ø–ª–∞—Ç—ã');
            return;
        }
        
        const checkBtn = document.getElementById('check-payment-btn');
        if (checkBtn) {
            checkBtn.innerHTML = 'üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º...';
            checkBtn.disabled = true;
        }
        
        try {
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã...');
            
            if (window.GenesisTerminal) {
                window.GenesisTerminal.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã ${this.selectedPlan.name} –≤ ${this.selectedCurrency}...`, 'info');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ API
            const result = await this.verifyPayment();
            
            if (result.success) {
                this.showNotification('‚úÖ –û–ø–ª–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞!', '–î–µ–ø–æ–∑–∏—Ç –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç', 'success');
                this.nextWizardStep();
            } else {
                this.showNotification('‚è≥ –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç', 'warning');
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏', error.message, 'error');
        } finally {
            if (checkBtn) {
                checkBtn.innerHTML = 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É';
                checkBtn.disabled = false;
            }
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:VERIFY_PAYMENT - –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞
    verifyPayment: async function() {
        try {
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç BSC API)
            if (window.GenesisAPI && window.GenesisAPI.checkPayment) {
                return await window.GenesisAPI.checkPayment({
                    userAddress: this.currentUser,
                    planId: this.selectedPlan.id,
                    currency: this.selectedCurrency,
                    amount: this.selectedCurrency === 'USDT' ? 
                        this.selectedPlan.usdtAmount : 
                        this.selectedPlan.plexAmount
                });
            }
            
            // –°–∏–º—É–ª—è—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (—É–¥–∞–ª–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // 30% —à–∞–Ω—Å –Ω–∞–π—Ç–∏ "–æ–ø–ª–∞—Ç—É" –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const found = Math.random() > 0.7;
            
            return {
                success: found,
                transactionHash: found ? this.generateMockTxHash() : null,
                message: found ? '–û–ø–ª–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞' : '–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
            };
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
            return {
                success: false,
                error: error.message
            };
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:LOAD_CONFIRM - –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    loadConfirmationStep: function() {
        const confirmationContainer = document.getElementById('confirmation-details');
        const plan = this.selectedPlan;
        
        confirmationContainer.innerHTML = `
            <div style="text-align: center;">
                <div style="font-size: 3rem; margin-bottom: 1rem; animation: pulse 2s infinite;">üéâ</div>
                <h4 style="color: var(--success-color); margin-bottom: 1rem;">
                    –î–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
                </h4>
                <p style="color: var(--text-secondary); margin-bottom: 2rem;">
                    –í–∞—à –¥–µ–ø–æ–∑–∏—Ç –ø–æ –ø–ª–∞–Ω—É <strong style="color: var(--primary-color);">${plan.name}</strong> –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—á–∞–ª –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å
                </p>
            </div>
            
            <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 2rem; border: 1px solid var(--success-color);">
                <h5 style="color: var(--success-color); margin-bottom: 1rem; text-align: center;">üìä –î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞:</h5>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                    <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:</div>
                        <div style="color: var(--text-primary); font-size: 1.2rem; font-weight: 600;">
                            $${plan.usdtAmount} ${this.selectedCurrency || 'USDT'}
                        </div>
                    </div>
                    <div style="text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                        <div style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</div>
                        <div style="color: var(--success-color); font-size: 1.2rem; font-weight: 600;">
                            ${plan.percentage}% (${plan.days} –¥–Ω–µ–π)
                        </div>
                    </div>
                </div>
                
                <div style="margin-top: 1rem; text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">–û–∂–∏–¥–∞–µ–º–∞—è –ø—Ä–∏–±—ã–ª—å:</div>
                    <div style="color: var(--gold-color); font-size: 1.5rem; font-weight: 700; font-family: 'Orbitron', monospace;">
                        $${((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount).toFixed(2)}
                    </div>
                    <div style="color: var(--warning-color); font-size: 0.9rem; margin-top: 0.3rem;">
                        (~$${(((plan.usdtAmount * plan.percentage / 100) - plan.usdtAmount) / plan.days).toFixed(2)} –≤ –¥–µ–Ω—å)
                    </div>
                </div>
            </div>
            
            <div style="background: rgba(0, 212, 255, 0.1); padding: 1.5rem; border-radius: 12px; margin-bottom: 2rem; border: 1px solid var(--secondary-color);">
                <h5 style="color: var(--secondary-color); margin-bottom: 1rem;">üì± –ß—Ç–æ –¥–∞–ª—å—à–µ?</h5>
                <ul style="color: var(--text-secondary); line-height: 1.8; margin: 0; padding-left: 1.5rem;">
                    <li>–í–∞—à –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å</li>
                    <li>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Ä—Ç—Ñ–µ–ª—å"</li>
                    <li>–ü—Ä–∏–±—ã–ª—å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                    <li>–ß–µ—Ä–µ–∑ ${plan.days} –¥–Ω–µ–π –¥–µ–ø–æ–∑–∏—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø—è—Ç –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å</li>
                </ul>
            </div>
            
            <div style="display: flex; gap: 1rem; justify-content: center;">
                <button onclick="window.GenesisCabinet.viewPortfolio()" class="btn">
                    üìä –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å
                </button>
                <button onclick="window.GenesisCabinet.closeDepositModal()" class="btn-outline">
                    ‚úÖ –ì–æ—Ç–æ–≤–æ
                </button>
            </div>
            
            <style>
                @keyframes pulse {
                    0% { opacity: 1; }
                    50% { opacity: 0.7; }
                    100% { opacity: 1; }
                }
            </style>
        `;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:PREV_STEP - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
    previousWizardStep: function() {
        const currentStep = document.querySelector('.wizard-step.active');
        const currentStepNumber = parseInt(currentStep.id.split('-')[1]);
        
        if (currentStepNumber === 1) return;
        
        const prevStepNumber = currentStepNumber - 1;
        const prevStep = document.getElementById(`step-${prevStepNumber}`);
        
        if (!prevStep) return;
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        currentStep.classList.remove('active');
        currentStep.classList.add('hidden');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        prevStep.classList.remove('hidden');
        prevStep.classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —à–∞–≥–æ–≤
        document.querySelectorAll('.step').forEach(step => {
            step.classList.remove('active');
        });
        document.querySelector(`[data-step="${prevStepNumber}"]`).classList.add('active');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:VIEW_PORTFOLIO - –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é
    viewPortfolio: function() {
        this.closeDepositModal();
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ä—Ç—Ñ–µ–ª—è
        if (window.cabinetApp && window.cabinetApp.navigateTo) {
            window.cabinetApp.navigateTo('portfolio');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if (window.CabinetDepositService && window.CabinetDepositService.refreshData) {
            window.CabinetDepositService.refreshData();
        }
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CLOSE_MODAL - –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    closeDepositModal: function() {
        const modal = document.getElementById('create-deposit-modal');
        if (modal) {
            modal.classList.add('hidden');
        }
        
        this.activeModal = null;
        this.selectedPlan = null;
        this.selectedCurrency = null;
        
        console.log('üö™ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –∑–∞–∫—Ä—ã—Ç–æ');
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:CLOSE_ALL - –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeAllModals: function() {
        const modals = [
            'create-deposit-modal',
            'confirm-deposit-modal', 
            'transaction-result-modal'
        ];
        
        modals.forEach(modalId => {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('hidden');
            }
        });
        
        this.activeModal = null;
        this.selectedPlan = null;
        this.selectedCurrency = null;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:SHOW_PURCHASE - –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –ø–ª–∞–Ω–∞
    showPurchaseModal: function(planId) {
        console.log('üõí –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∞:', planId);
        this.showDepositModal(planId);
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:NOTIFICATION - –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification: function(title, message = '', type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            min-width: 300px;
            max-width: 400px;
            z-index: 10000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        const color = {
            'success': 'var(--success-color)',
            'error': 'var(--error-color)',
            'warning': 'var(--warning-color)',
            'info': 'var(--secondary-color)'
        }[type] || 'var(--primary-color)';
        
        notification.style.borderLeftColor = color;
        notification.style.borderLeftWidth = '4px';
        
        notification.innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <div style="color: ${color}; font-weight: 600; margin-bottom: ${message ? '0.5rem' : '0'};">
                        ${title}
                    </div>
                    ${message ? `<div style="color: var(--text-secondary); font-size: 0.9rem;">${message}</div>` : ''}
                </div>
                <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: var(--text-secondary); font-size: 1.2rem; cursor: pointer; padding: 0; margin-left: 1rem;">√ó</button>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                notification.remove();
            }, 300);
        }, type === 'error' ? 7000 : 4000);
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        if (window.GenesisTerminal) {
            const prefix = {
                'success': '‚úÖ',
                'error': '‚ùå', 
                'warning': '‚ö†Ô∏è',
                'info': '‚ÑπÔ∏è'
            }[type] || '‚ÑπÔ∏è';
            
            window.GenesisTerminal.log(`${prefix} ${title}${message ? ': ' + message : ''}`, type);
        }
    },
    
    // MCP-MARKER:UTILITY_METHODS - –£—Ç–∏–ª–∏—Ç—ã
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GET_USER_PLANS - –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserPlanIds: function() {
        // –ü–æ–ª—É—á–∞–µ–º ID –ø–ª–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
        if (window.CabinetDepositService && window.CabinetDepositService.userDeposits) {
            return window.CabinetDepositService.userDeposits.map(d => d.planId);
        }
        
        // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        return ['trial']; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ trial
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:IS_PLAN_LOCKED - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∞
    isPlanLocked: function(plan, userPlanIds) {
        if (plan.id === 'trial') return false;
        
        const allPlans = window.GENESIS_CONFIG.depositPlans;
        const planIndex = allPlans.findIndex(p => p.id === plan.id);
        
        if (planIndex === 0) return false;
        
        for (let i = 0; i < planIndex; i++) {
            const prevPlan = allPlans[i];
            if (prevPlan.id !== 'trial' && !userPlanIds.includes(prevPlan.id)) {
                return true;
            }
        }
        
        return false;
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:GET_PLAN_ICON - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–ª–∞–Ω–∞
    getPlanIcon: function(planName) {
        const icons = {
            'TRIAL': 'üß™',
            'STARTER': 'üöÄ',
            'PROGRESSIVE1': 'üìà',
            'PROGRESSIVE2': 'üí´',
            'PROGRESSIVE3': '‚≠ê',
            'PROGRESSIVE4': 'üåü',
            'PROGRESSIVE5': '‚ú®',
            'PROGRESSIVE6': 'üíé',
            'PROGRESSIVE7': 'üëë',
            'PROGRESSIVE8': 'üèÜ',
            'RECOMMENDED': 'üéØ',
            'PLATINUM': 'ü•à',
            'MAXIMUM': 'ü•á'
        };
        return icons[planName] || 'üí∞';
    },
    
    // MCP-MARKER:METHOD:CABINET_DEPOSIT:MOCK_TX_HASH - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ö–µ—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    generateMockTxHash: function() {
        const chars = '0123456789abcdef';
        let hash = '0x';
        for (let i = 0; i < 64; i++) {
            hash += chars[Math.floor(Math.random() * chars.length)];
        }
        return hash;
    }
};

// MCP-MARKER:SECTION:GLOBAL_FUNCTIONS - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

// MCP-MARKER:FUNCTION:CLOSE_MODALS - –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω (–¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ HTML)
window.closeDepositModal = () => window.GenesisCabinet.closeDepositModal();
window.closeConfirmModal = () => window.GenesisCabinet.closeAllModals();
window.closeTransactionResultModal = () => window.GenesisCabinet.closeAllModals();

// MCP-MARKER:FUNCTION:EMERGENCY_ACTIONS - –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
window.clearCacheAndReload = function() {
    if (confirm('üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?')) {
        localStorage.clear();
        sessionStorage.clear();
        location.reload(true);
    }
};

// MCP-MARKER:FUNCTION:DEV_ACCESS - –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
window.enableDevAccess = function() {
    const password = prompt('üîß –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:');
    if (password === 'genesis2025') {
        window.GENESIS_CONFIG.app.debug = true;
        alert('‚úÖ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        console.log('üîß Developer mode enabled');
    } else {
        alert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
    }
};

// MCP-MARKER:FUNCTION:LOGOUT - –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞
window.logout = function() {
    if (confirm('üö™ –í—ã–π—Ç–∏ –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞?')) {
        localStorage.removeItem('genesis_user_address');
        location.reload();
    }
};

// MCP-MARKER:SECTION:INITIALIZATION - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üíº Genesis Cabinet Integration loaded');
    
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∫–∞–±–∏–Ω–µ—Ç–∞
    if (window.cabinetApp) {
        const originalCheckAuth = window.cabinetApp.checkAuth;
        window.cabinetApp.checkAuth = async function() {
            await originalCheckAuth.call(this);
            if (this.isAuthenticated && this.currentUser) {
                window.GenesisCabinet.init(this.currentUser);
            }
        };
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    setTimeout(() => {
        const emergencyActions = document.getElementById('emergency-actions');
        const loadingScreen = document.getElementById('loading-screen');
        
        if (emergencyActions && loadingScreen && !loadingScreen.classList.contains('hidden')) {
            emergencyActions.classList.remove('hidden');
        }
    }, 10000);
    
    // MCP-MARKER:FUNCTION:DEPOSIT_MODAL_FIX - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
    window.openDepositModal = function(planId) {
        console.log('üöÄ openDepositModal –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è –ø–ª–∞–Ω–∞:', planId);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        if (window.GenesisCabinet && window.GenesisCabinet.showPurchaseModal) {
            console.log('‚úÖ GenesisCabinet –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
            window.GenesisCabinet.showPurchaseModal(planId);
        } else if (window.GenesisCabinet && window.GenesisCabinet.showDepositModal) {
            console.log('‚úÖ GenesisCabinet –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–µ—Ä–µ–∑ showDepositModal');
            window.GenesisCabinet.showDepositModal(planId);
        } else if (window.CabinetApp && window.CabinetApp.showCreateDepositModal) {
            console.log('‚úÖ CabinetApp –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
            window.CabinetApp.showCreateDepositModal();
        } else {
            console.error('‚ùå –ù–∏ –æ–¥–∏–Ω –∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
            
            // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            showFallbackDepositModal(planId);
        }
    };
    
    // MCP-MARKER:FUNCTION:FALLBACK_MODAL - Fallback –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    function showFallbackDepositModal(planId) {
        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
        
        const modal = document.getElementById('create-deposit-modal');
        const content = document.getElementById('deposit-modal-content');
        
        if (!modal || !content) {
            alert('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            return;
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–ª–∞–Ω
        const plan = window.GENESIS_CONFIG && window.GENESIS_CONFIG.depositPlans 
            ? window.GENESIS_CONFIG.depositPlans.find(p => p.id === planId)
            : null;
            
        if (!plan) {
            alert('‚ùå –ü–ª–∞–Ω –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        content.innerHTML = `
            <div style="text-align: center; padding: 2rem;">
                <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">üí∞ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞: ${plan.name}</h3>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem; border: 1px solid var(--border-color);">
                    <h4 style="color: var(--secondary-color); margin-bottom: 1rem;">üìä –î–µ—Ç–∞–ª–∏ –ø–ª–∞–Ω–∞</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; text-align: left;">
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è:</div>
                            <div style="color: var(--text-primary); font-weight: 600;">${plan.usdtAmount}</div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</div>
                            <div style="color: var(--success-color); font-weight: 600;">${plan.percentage}%</div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–°—Ä–æ–∫:</div>
                            <div style="color: var(--warning-color); font-weight: 600;">${plan.days} –¥–Ω–µ–π</div>
                        </div>
                        <div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">–í–∞–ª—é—Ç—ã:</div>
                            <div style="color: var(--secondary-color); font-weight: 600;">${plan.currencies.join(', ')}</div>
                        </div>
                    </div>
                </div>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem; border: 1px solid var(--border-color);">
                    <h4 style="color: var(--secondary-color); margin-bottom: 1rem;">üì± QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã</h4>
                    <div style="background: white; padding: 1rem; border-radius: 8px; display: inline-block; margin-bottom: 1rem;">
                        <img src="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(window.GENESIS_CONFIG.addresses.system)}" alt="QR –∫–æ–¥" />
                    </div>
                    <p style="color: var(--text-secondary); font-size: 0.9rem;">–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ</p>
                </div>
                
                <div style="background: var(--bg-primary); padding: 1.5rem; border-radius: 12px; margin-bottom: 1.5rem; border: 1px solid var(--border-color);">
                    <h4 style="color: var(--warning-color); margin-bottom: 1rem;">üìã –ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã</h4>
                    <div style="font-family: monospace; font-size: 0.85rem; color: var(--text-primary); background: var(--bg-secondary); padding: 1rem; border-radius: 6px; word-break: break-all; margin-bottom: 1rem;">
                        ${window.GENESIS_CONFIG.addresses.system}
                    </div>
                    <button onclick="navigator.clipboard.writeText('${window.GENESIS_CONFIG.addresses.system}').then(() => alert('‚úÖ –ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!'))" class="btn-secondary" style="width: 100%;">
                        üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å
                    </button>
                </div>
                
                <div style="background: rgba(255, 107, 53, 0.1); padding: 1rem; border-radius: 8px; border: 1px solid var(--primary-color);">
                    <h5 style="color: var(--primary-color); margin-bottom: 0.5rem;">‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
                    <ul style="text-align: left; color: var(--text-secondary); font-size: 0.9rem; margin: 0; padding-left: 1.5rem;">
                        <li>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${plan.usdtAmount} USDT</li>
                        <li>–°–µ—Ç—å: BSC (BEP-20)</li>
                        <li>–î–µ–ø–æ–∑–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                        <li>–í—Ä–µ–º—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: 1-5 –º–∏–Ω—É—Ç</li>
                    </ul>
                </div>
                
                <div style="margin-top: 1.5rem;">
                    <button onclick="document.getElementById('create-deposit-modal').classList.add('hidden')" class="btn-outline" style="width: 100%;">
                        ‚úï –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        `;
        
        modal.classList.remove('hidden');
    }
    
    // MCP-MARKER:FUNCTION:INTERCEPT_BUTTONS - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    function interceptDepositButtons() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –∫–Ω–æ–ø–æ–∫
        document.addEventListener('click', function(e) {
            const button = e.target.closest('button');
            if (!button) return;
            
            const onclick = button.getAttribute('onclick');
            if (!onclick) return;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
            if (onclick.includes('startDepositProcess') || 
                onclick.includes('showCreateDepositModal') || 
                onclick.includes('showPurchaseModal') ||
                onclick.includes('showDepositModal')) {
                
                e.preventDefault();
                e.stopPropagation();
                
                // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–ª–∞–Ω–∞ –∏–∑ onclick –∞—Ç—Ä–∏–±—É—Ç–∞
                const planIdMatch = onclick.match(/['"]([^'"]+)['"]/);
                const planId = planIdMatch ? planIdMatch[1] : null;
                
                console.log('üéØ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –∫–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ –¥–µ–ø–æ–∑–∏—Ç–∞, –ø–ª–∞–Ω:', planId);
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                window.openDepositModal(planId);
            }
        });
        
        console.log('‚úÖ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫
    interceptDepositButtons();
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(function() {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...');
        console.log('- GenesisCabinet:', !!window.GenesisCabinet);
        console.log('- CabinetApp:', !!window.CabinetApp);
        console.log('- CabinetDepositService:', !!window.CabinetDepositService);
        console.log('- GENESIS_CONFIG:', !!window.GENESIS_CONFIG);
        
        // –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—ã—Ç–∞–µ–º—Å—è –∏—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
        if (!window.GenesisCabinet && window.currentUser) {
            console.log('‚ö†Ô∏è GenesisCabinet –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å...');
            if (window.GenesisCabinet && window.GenesisCabinet.init) {
                window.GenesisCabinet.init(window.currentUser);
                console.log('‚úÖ GenesisCabinet –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }
        }
    }, 2000);
    
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
});

// MCP-MARKER:FUNCTION:FIX_DEPOSIT_MODAL - –§—É–Ω–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
window.fixDepositModal = function() {
    console.log('üîß –†—É—á–Ω–æ–π –≤—ã–∑–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const buttons = document.querySelectorAll('button');
    let fixedCount = 0;
    
    buttons.forEach(button => {
        const text = button.textContent.trim();
        if (text.includes('–°–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç') || text.includes('üí∞')) {
            const onclick = button.getAttribute('onclick');
            if (!onclick || onclick === 'void(0)') {
                // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞–Ω–µ
                const card = button.closest('.stats-card, .plan-option-card, [id^="plan-card-"]');
                let planId = 'starter'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                
                if (card) {
                    const idMatch = card.id && card.id.match(/plan-card-(.+)/);
                    if (idMatch) {
                        planId = idMatch[1];
                    }
                }
                
                button.setAttribute('onclick', `window.openDepositModal('${planId}')`);
                button.style.cursor = 'pointer';
                fixedCount++;
                console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–ª–∞–Ω–∞: ${planId}`);
            }
        }
    });
    
    console.log(`üéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: ${fixedCount}`);
    
    return fixedCount;
};

console.log('üíº Genesis Cabinet Deposit Integration loaded successfully');
