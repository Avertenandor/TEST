# GENESIS Test Runner PowerShell Script
# –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å–∞–π—Ç–∞ https://crypto-processing.net/

param(
    [string]$TestUrl = "https://crypto-processing.net/",
    [bool]$Headless = $true,
    [int]$Timeout = 60000,
    [string]$TestType = "all",
    [bool]$OpenReport = $true
)

$ErrorActionPreference = "Stop"

Write-Host "=====================================" -ForegroundColor Cyan
Write-Host "   GENESIS COMPLETE TEST SUITE" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úì Node.js $nodeVersion –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚úó Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å https://nodejs.org/" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome
try {
    $chromePath = Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\chrome.exe' -ErrorAction SilentlyContinue
    if ($chromePath) {
        Write-Host "‚úì Chrome –±—Ä–∞—É–∑–µ—Ä –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ö† Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Chromium" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö† Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Chromium" -ForegroundColor Yellow
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤
$testDir = Join-Path $PSScriptRoot "—Ç–µ—Å—Ç—ã"
Set-Location $testDir

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if (-not (Test-Path "node_modules")) {
    Write-Host ""
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!" -ForegroundColor Red
        exit 1
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
$env:TEST_URL = $TestUrl
$env:HEADLESS = if ($Headless) { "true" } else { "false" }
$env:TIMEOUT = $Timeout

Write-Host ""
Write-Host "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞:" -ForegroundColor Cyan
Write-Host "  URL: $TestUrl" -ForegroundColor White
Write-Host "  –†–µ–∂–∏–º: $(if ($Headless) { 'Headless' } else { '–° –±—Ä–∞—É–∑–µ—Ä–æ–º' })" -ForegroundColor White
Write-Host "  –¢–∞–π–º–∞—É—Ç: $($Timeout/1000) —Å–µ–∫—É–Ω–¥" -ForegroundColor White
Write-Host "  –¢–∏–ø: $TestType" -ForegroundColor White
Write-Host ""

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
$startTime = Get-Date

try {
    switch ($TestType) {
        "all" {
            Write-Host "üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Green
            npm test
        }
        "chrome" {
            Write-Host "üîç –ó–∞–ø—É—Å–∫ Chrome —Ç–µ—Å—Ç–∞..." -ForegroundColor Green
            npm run test:chrome
        }
        "console" {
            Write-Host "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω—Å–æ–ª–∏..." -ForegroundColor Green
            npm run test:console
        }
        "quick" {
            Write-Host "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞..." -ForegroundColor Green
            npm run test:quick
        }
        default {
            Write-Host "‚úó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ç–µ—Å—Ç–∞: $TestType" -ForegroundColor Red
            exit 1
        }
    }
    
    $success = $LASTEXITCODE -eq 0
    
} catch {
    Write-Host "‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: $_" -ForegroundColor Red
    $success = $false
}

$endTime = Get-Date
$duration = $endTime - $startTime

Write-Host ""
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host "   –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host ""

if ($success) {
    Write-Host "‚úÖ –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û" -ForegroundColor Green
} else {
    Write-Host "‚ùå –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´" -ForegroundColor Red
}

Write-Host "‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($duration.TotalSeconds) —Å–µ–∫—É–Ω–¥" -ForegroundColor White
Write-Host ""

# –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞
$reportsDir = Join-Path $testDir "reports"
if (Test-Path $reportsDir) {
    $latestReport = Get-ChildItem "$reportsDir\*.html" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
    
    if ($latestReport) {
        Write-Host "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç: $($latestReport.Name)" -ForegroundColor Cyan
        
        if ($OpenReport) {
            Write-Host "üìÇ –û—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ..." -ForegroundColor Yellow
            Start-Process $latestReport.FullName
        }
    }
}

Write-Host ""
Write-Host "üìÅ –í—Å–µ –æ—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $reportsDir" -ForegroundColor White
Write-Host ""

# –í–æ–∑–≤—Ä–∞—Ç –∫–æ–¥–∞ –≤—ã—Ö–æ–¥–∞
exit $(if ($success) { 0 } else { 1 })
