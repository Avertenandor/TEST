// MCP HTML STRUCTURE RESTORATION SCRIPT
const fs = require('fs');

console.log('üîß MCP HTML STRUCTURE RESTORATION');
console.log('===================================');

try {
    // –ß–∏—Ç–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ñ–∞–π–ª (–±–µ–∑ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã)
    const cleanedContent = fs.readFileSync('cabinet.html', 'utf8');
    
    // –ß–∏—Ç–∞–µ–º backup —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    const backupContent = fs.readFileSync('cabinet_before_html_cleanup.html', 'utf8');
    
    console.log('üìÑ –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ backup (DOCTYPE –¥–æ <style>)
    const backupLines = backupContent.split('\n');
    const cleanedLines = cleanedContent.split('\n');
    
    // –ù–∞—Ö–æ–¥–∏–º –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è <style> –≤ backup
    let styleStartIndex = -1;
    for (let i = 0; i < backupLines.length; i++) {
        if (backupLines[i].trim().startsWith('<style>')) {
            styleStartIndex = i;
            break;
        }
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –≥–¥–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è </html> –≤ backup
    let htmlEndIndex = -1;
    for (let i = backupLines.length - 1; i >= 0; i--) {
        if (backupLines[i].trim() === '</html>') {
            htmlEndIndex = i;
            break;
        }
    }
    
    if (styleStartIndex === -1 || htmlEndIndex === -1) {
        throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');
    }
    
    // –ë–µ—Ä–µ–º HTML –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ backup (–¥–æ <style>)
    const htmlHeader = backupLines.slice(0, styleStartIndex);
    
    // –ë–µ—Ä–µ–º HTML –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–∑ backup (</body></html>)
    const htmlFooter = backupLines.slice(htmlEndIndex);
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º: HTML –∑–∞–≥–æ–ª–æ–≤–æ–∫ + –æ—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç + HTML –æ–∫–æ–Ω—á–∞–Ω–∏–µ
    const restoredContent = [
        ...htmlHeader,
        ...cleanedLines,
        ...htmlFooter
    ].join('\n');
    
    // –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    fs.writeFileSync('cabinet_before_structure_fix.html', cleanedContent);
    console.log('üíæ –°–æ–∑–¥–∞–Ω backup: cabinet_before_structure_fix.html');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync('cabinet_structure_restored.html', restoredContent);
    
    console.log(`\n‚úÖ HTML –°–¢–†–£–ö–¢–£–†–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ê!`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   ‚Ä¢ HTML –∑–∞–≥–æ–ª–æ–≤–æ–∫: ${htmlHeader.length} —Å—Ç—Ä–æ–∫`);
    console.log(`   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç: ${cleanedLines.length} —Å—Ç—Ä–æ–∫`);
    console.log(`   ‚Ä¢ HTML –æ–∫–æ–Ω—á–∞–Ω–∏–µ: ${htmlFooter.length} —Å—Ç—Ä–æ–∫`);
    console.log(`   ‚Ä¢ –ò—Ç–æ–≥–æ —Å—Ç—Ä–æ–∫: ${htmlHeader.length + cleanedLines.length + htmlFooter.length}`);
    console.log(`\nüíæ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: cabinet_structure_restored.html`);
    
} catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
}