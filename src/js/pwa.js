/**
 * GENESIS 1.1 - PWA Module
 * Service Worker —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */

import { showToast } from './ui.js';

let registration = null;
let updateAvailable = false;

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
 * @returns {Promise<ServiceWorkerRegistration|null>}
 */
export async function registerServiceWorker() {
  if (!('serviceWorker' in navigator)) {
    console.warn('Service Workers –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
    return null;
  }

  try {
    registration = await navigator.serviceWorker.register('/sw.js', {
      scope: '/'
    });

    console.log('‚úÖ ServiceWorker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration.scope);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    registration.addEventListener('updatefound', handleUpdateFound);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –æ–∂–∏–¥–∞—é—â–∏–π SW
    if (registration.waiting) {
      handleWaiting(registration.waiting);
    }

    // –°–ª—É—à–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    navigator.serviceWorker.addEventListener('controllerchange', () => {
      console.log('üîÑ Controller –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...');
      window.location.reload();
    });

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥)
    setInterval(() => {
      registration.update();
    }, 60000);

    return registration;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ServiceWorker:', error);
    return null;
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è updatefound
 */
function handleUpdateFound() {
  const newWorker = registration.installing;

  console.log('üì¶ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');

  newWorker.addEventListener('statechange', () => {
    if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
      // –ï—Å—Ç—å –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è, –≥–æ—Ç–æ–≤–∞—è –∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
      handleWaiting(newWorker);
    }
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∂–∏–¥–∞—é—â–µ–≥–æ Service Worker
 * @param {ServiceWorker} worker
 */
function handleWaiting(worker) {
  updateAvailable = true;

  console.log('‚ú® –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –≥–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ');

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  showUpdateNotification(worker);
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
 * @param {ServiceWorker} worker
 */
function showUpdateNotification(worker) {
  // –°–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const notification = document.createElement('div');
  notification.id = 'update-notification';
  notification.style.cssText = `
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--surface-elevated);
    border: 1px solid var(--accent);
    border-radius: var(--radius-lg);
    padding: 16px 24px;
    box-shadow: var(--shadow-xl);
    z-index: 10000;
    display: flex;
    align-items: center;
    gap: 16px;
    animation: slideUp 0.3s ease-out;
    max-width: 90%;
    width: 400px;
  `;

  notification.innerHTML = `
    <div style="flex: 1;">
      <div style="font-weight: 600; color: var(--text-0); margin-bottom: 4px;">
        –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
      </div>
      <div style="font-size: 14px; color: var(--text-muted);">
        –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
      </div>
    </div>
    <button id="update-btn" style="
      padding: 8px 16px;
      background: var(--accent);
      color: var(--text-0);
      border: none;
      border-radius: var(--radius-md);
      font-weight: 600;
      cursor: pointer;
      white-space: nowrap;
    ">
      –û–±–Ω–æ–≤–∏—Ç—å
    </button>
    <button id="dismiss-btn" style="
      padding: 8px;
      background: transparent;
      color: var(--text-muted);
      border: none;
      cursor: pointer;
      font-size: 20px;
      line-height: 1;
    ">
      √ó
    </button>
  `;

  // –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
  if (!document.getElementById('pwa-animations')) {
    const style = document.createElement('style');
    style.id = 'pwa-animations';
    style.textContent = `
      @keyframes slideUp {
        from {
          transform: translate(-50%, 100px);
          opacity: 0;
        }
        to {
          transform: translate(-50%, 0);
          opacity: 1;
        }
      }
    `;
    document.head.appendChild(style);
  }

  document.body.appendChild(notification);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å"
  document.getElementById('update-btn').addEventListener('click', () => {
    worker.postMessage({ type: 'SKIP_WAITING' });
    notification.remove();
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å"
  document.getElementById('dismiss-btn').addEventListener('click', () => {
    notification.remove();
  });
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ PWA
 * @returns {boolean}
 */
export function isInstalledPWA() {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ standalone mode
  const isStandalone = window.matchMedia('(display-mode: standalone)').matches;
  const isIOSStandalone = 'standalone' in window.navigator && window.navigator.standalone;

  return isStandalone || isIOSStandalone;
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
 */
let deferredPrompt = null;

export function setupInstallPrompt() {
  window.addEventListener('beforeinstallprompt', (e) => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç Chrome
    e.preventDefault();

    deferredPrompt = e;

    console.log('üì± PWA –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    showInstallButton();
  });

  // –û—Ç—Å–ª–µ–¥–∏—Ç—å —É—Å–ø–µ—à–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
  window.addEventListener('appinstalled', () => {
    console.log('‚úÖ PWA —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    showToast('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!', 'success');
    deferredPrompt = null;
  });
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
 */
function showInstallButton() {
  const installBtn = document.getElementById('install-pwa-btn');

  if (installBtn) {
    installBtn.style.display = 'inline-flex';

    installBtn.addEventListener('click', async () => {
      if (!deferredPrompt) return;

      // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç
      deferredPrompt.prompt();

      // –î–æ–∂–¥–∞—Ç—å—Å—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { outcome } = await deferredPrompt.userChoice;

      console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${outcome === 'accepted' ? '–ø—Ä–∏–Ω—è–ª' : '–æ—Ç–∫–ª–æ–Ω–∏–ª'} —É—Å—Ç–∞–Ω–æ–≤–∫—É`);

      if (outcome === 'accepted') {
        showToast('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...', 'info');
      }

      deferredPrompt = null;
      installBtn.style.display = 'none';
    });
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Service Worker
 * @returns {object}
 */
export function getServiceWorkerInfo() {
  if (!registration) {
    return {
      supported: 'serviceWorker' in navigator,
      registered: false,
      updateAvailable: false
    };
  }

  return {
    supported: true,
    registered: true,
    scope: registration.scope,
    updateAvailable,
    installing: !!registration.installing,
    waiting: !!registration.waiting,
    active: !!registration.active
  };
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA —Ñ—É–Ω–∫—Ü–∏–π
 */
export async function initPWA() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA...');

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
  await registerServiceWorker();

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  setupInstallPrompt();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  if (isInstalledPWA()) {
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–∞–∫ PWA');
    document.body.classList.add('is-pwa');
  }
}

export default {
  initPWA,
  registerServiceWorker,
  isInstalledPWA,
  setupInstallPrompt,
  getServiceWorkerInfo
};
